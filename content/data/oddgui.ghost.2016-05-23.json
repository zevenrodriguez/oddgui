{"meta":{"exported_on":1463962792434,"version":"004"},"data":{"posts":[{"id":81,"uuid":"16a96d5a-d249-417a-81c4-f5487448a0c8","title":"El Pirata","slug":"el-pirata","markdown":"\nThis is a Pirate I made using processing.\n\n[El Pirata](http://www.zevenrodriguez.com/itp/icm/week1)\n\n\n","html":"<p>This is a Pirate I made using processing.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week1\">El Pirata</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252967431000,"created_by":1,"updated_at":1396135928000,"updated_by":1,"published_at":null,"published_by":1},{"id":82,"uuid":"62fc399a-c9bf-4416-b8af-d2b0accbea0b","title":"Sensor Walk","slug":"sensor-walk","markdown":"\nI took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>\n","html":"<p>I took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.</p>\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252978010000,"created_by":1,"updated_at":1396135939000,"updated_by":1,"published_at":null,"published_by":1},{"id":83,"uuid":"40f34187-eb1f-4ea2-9bef-6b46330cae36","title":"Lab 1","slug":"lab-1","markdown":"\nThis is my first PhysComp lab. It involved the alternating the states of two LEDs.\n\nHere is the code I used\n\nMore details on the lab could be found [here](http://itp.nyu.edu/physcomp/Labs/DigitalInOut)\n\n*int switchButton = 2; // button  \n int pinYellow = 3; // Yellow LED  \n int pinGreen = 4; // Green LED  \n int switchIni = 0; // Initial state of switch*\n\n*void setup(){  \n pinMode(switchButton, INPUT); //takes in switch signal  \n pinMode(pinYellow, OUTPUT); //yellow output  \n pinMode(pinGreen,OUTPUT); //green output  \n }*\n\n*void loop(){  \n // read the switch  \n switchIni = digitalRead(switchButton);*\n\n*if (switchIni == 1) {  \n // if the switch is closed:  \n digitalWrite(pinYellow, HIGH); // turn on the yellow LED  \n digitalWrite(pinGreen, LOW); // turn off the red LED  \n }  \n else {  \n //if the switch is open:  \n digitalWrite(pinYellow, LOW); // turn off the yellow LED  \n digitalWrite(pinGreen, HIGH); // turn on the red LED  \n }*\n\n*}*  \n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short\n\n![IMG_0093](http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\")\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp – Lab 1](http://vimeo.com/6580726) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This is my first PhysComp lab. It involved the alternating the states of two LEDs.</p>\n\n<p>Here is the code I used</p>\n\n<p>More details on the lab could be found <a href=\"http://itp.nyu.edu/physcomp/Labs/DigitalInOut\">here</a></p>\n\n<p><em>int switchButton = 2; // button <br />\n int pinYellow = 3; // Yellow LED <br />\n int pinGreen = 4; // Green LED <br />\n int switchIni = 0; // Initial state of switch</em></p>\n\n<p><em>void setup(){ <br />\n pinMode(switchButton, INPUT); //takes in switch signal <br />\n pinMode(pinYellow, OUTPUT); //yellow output <br />\n pinMode(pinGreen,OUTPUT); //green output <br />\n }</em></p>\n\n<p><em>void loop(){ <br />\n // read the switch <br />\n switchIni = digitalRead(switchButton);</em></p>\n\n<p><em>if (switchIni == 1) { <br />\n // if the switch is closed: <br />\n digitalWrite(pinYellow, HIGH); // turn on the yellow LED <br />\n digitalWrite(pinGreen, LOW); // turn off the red LED <br />\n } <br />\n else { <br />\n //if the switch is open: <br />\n digitalWrite(pinYellow, LOW); // turn off the yellow LED <br />\n digitalWrite(pinGreen, HIGH); // turn on the red LED <br />\n }</em></p>\n\n<p><em>}</em> <br />\n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\"\" alt=\"IMG_0093\" /></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6580726\">Physcomp – Lab 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252985398000,"created_by":1,"updated_at":1396135947000,"updated_by":1,"published_at":null,"published_by":1},{"id":84,"uuid":"a9e21a14-2c4a-4ce9-a41e-32a68e9e2052","title":"Traffic light","slug":"traffic-light","markdown":"\nSo I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Traffic Light](http://vimeo.com/6582107) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the code I used\n\nint pinRed = 3;  \n int pinYellow = 4;  \n int pinGreen = 5;  \n int switchButton = 2; // button  \n int switchIni = 0; // Initial state of switch\n\nvoid setup(){  \n pinMode(pinRed, OUTPUT);  \n pinMode(pinYellow, OUTPUT);  \n pinMode(pinGreen, OUTPUT);  \n pinMode(switchButton, INPUT); //takes in switch signal\n\n}\n\nvoid loop(){  \n switchIni = digitalRead(switchButton);\n\nif (switchIni == 1){  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);  \n digitalWrite(pinYellow, HIGH);  \n digitalWrite(pinRed, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);\n\ndigitalWrite(pinGreen, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinRed, LOW);  \n delay(5000);\n\n}\n\nelse{  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n }\n\n}\n\n\n","html":"<p>So I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6582107\">Traffic Light</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the code I used</p>\n\n<p>int pinRed = 3; <br />\n int pinYellow = 4; <br />\n int pinGreen = 5; <br />\n int switchButton = 2; // button <br />\n int switchIni = 0; // Initial state of switch</p>\n\n<p>void setup(){ <br />\n pinMode(pinRed, OUTPUT); <br />\n pinMode(pinYellow, OUTPUT); <br />\n pinMode(pinGreen, OUTPUT); <br />\n pinMode(switchButton, INPUT); //takes in switch signal</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n switchIni = digitalRead(switchButton);</p>\n\n<p>if (switchIni == 1){ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000); <br />\n digitalWrite(pinYellow, HIGH); <br />\n digitalWrite(pinRed, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000);</p>\n\n<p>digitalWrite(pinGreen, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinRed, LOW); <br />\n delay(5000);</p>\n\n<p>}</p>\n\n<p>else{ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n }</p>\n\n<p>}</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252995651000,"created_by":1,"updated_at":1396135995000,"updated_by":1,"published_at":1252995651000,"published_by":1},{"id":85,"uuid":"5fcef44e-f890-4a7b-a43b-fe80d1a519fe","title":"processingWeek2","slug":"processingweek2","markdown":"\nWell this is the 2nd week of processing and all is going well so far.\n\nFor my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.\n\n[http://www.zevenrodriguez.com/itp/icm/week2/](http://www.zevenrodriguez.com/itp/icm/week2/)\n\nI decided also to do a second animation with my pirate\n\n[http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/](http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/)\n\n\n","html":"<p>Well this is the 2nd week of processing and all is going well so far.</p>\n\n<p>For my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/\">http://www.zevenrodriguez.com/itp/icm/week2/</a></p>\n\n<p>I decided also to do a second animation with my pirate</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/\">http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253395966000,"created_by":1,"updated_at":1396136013000,"updated_by":1,"published_at":null,"published_by":1},{"id":86,"uuid":"8600ac4c-bbc9-4d2c-9643-aa6975832f2a","title":"Fantasy Machine: De-atomizer","slug":"fantasy-machine-de-atomizer","markdown":"\nThis is my Fantasy machine for Tom Igoe’s Physical Comp class.\n\n![deatomizer](http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\")\n\nFor a better view download [here](http://zevenrodriguez.com/itp/uploads/deatomizer.pdf)\n\n\n","html":"<p>This is my Fantasy machine for Tom Igoe’s Physical Comp class.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\"\" alt=\"deatomizer\" /></p>\n\n<p>For a better view download <a href=\"http://zevenrodriguez.com/itp/uploads/deatomizer.pdf\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253533703000,"created_by":1,"updated_at":1396136026000,"updated_by":1,"published_at":1253533703000,"published_by":1},{"id":87,"uuid":"8e30f335-2e73-4aed-b114-84ce0674a815","title":"Lab 2 part 3","slug":"lab-2-part-3","markdown":"\nThis was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red\n\nThis is the code I wrote\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led3 = 3; // displays what the pot is doing  \n int led6 = 6;  \n int led9 = 9;  \n int led10 = 10;  \n int led11 = 11;\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){  \n /*  \n so I need potvalue/4 and divide by 7 to get the range\n\n*/  \n potValue = analogRead(potPin); //read pot value  \n potValue = potValue/4;\n\nif (potValue <= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) && (potValue <= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) && (potValue <= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) && (potValue <= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) && (potValue <= 240)){  \n analogWrite(led11, 255);  \n analogWrite(led3, 0);  \n analogWrite(led6, 0);  \n analogWrite(led9, 0);  \n analogWrite(led10, 0);  \n }\n\n//pwm led w/ pot value  \n Serial.println(potValue/4);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part3](http://vimeo.com/6686222) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red</p>\n\n<p>This is the code I wrote</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led3 = 3; // displays what the pot is doing <br />\n int led6 = 6; <br />\n int led9 = 9; <br />\n int led10 = 10; <br />\n int led11 = 11;</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n /* <br />\n so I need potvalue/4 and divide by 7 to get the range</p>\n\n<p>*/ <br />\n potValue = analogRead(potPin); //read pot value <br />\n potValue = potValue/4;</p>\n\n<p>if (potValue &lt;= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) &amp;&amp; (potValue &lt;= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) &amp;&amp; (potValue &lt;= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) &amp;&amp; (potValue &lt;= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) &amp;&amp; (potValue &lt;= 240)){ <br />\n analogWrite(led11, 255); <br />\n analogWrite(led3, 0); <br />\n analogWrite(led6, 0); <br />\n analogWrite(led9, 0); <br />\n analogWrite(led10, 0); <br />\n }</p>\n\n<p>//pwm led w/ pot value <br />\n Serial.println(potValue/4);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6686222\">Physcomp-Lab 2 part3</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534410000,"created_by":1,"updated_at":1396136039000,"updated_by":1,"published_at":null,"published_by":1},{"id":88,"uuid":"07bdb198-fa2f-4ca8-bc39-b1e0b203eb9e","title":"Lab 2 Part 2","slug":"lab-2-part-2","markdown":"\nThis second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.\n\nThis is the code I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing  \n int led2 = 10;  \n int x = 0;  \n int y = 0;  \n void setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n x = potValue/4;// sets the value arrange between 0 and 255\n\nif (x < 10){  \n // makes for smoother range control  \n x = 0;  \n }  \n x = map(x,0, 150, 0, 255);\n\ny = -(x – 150);  \n if (y < 20){  \n // makes for smoother range control  \n y = 0;  \n }  \n y = map(y,0, 150, 0, 255);\n\nanalogWrite(led, x); //pwm led w/ pot value  \n analogWrite(led2, y); //pwm led w/ pot value\n\n//Serial.println(x);//print value  \n Serial.println(y);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part2](http://vimeo.com/6656105) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.</p>\n\n<p>This is the code I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing <br />\n int led2 = 10; <br />\n int x = 0; <br />\n int y = 0; <br />\n void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n x = potValue/4;// sets the value arrange between 0 and 255</p>\n\n<p>if (x &lt; 10){ <br />\n // makes for smoother range control <br />\n x = 0; <br />\n } <br />\n x = map(x,0, 150, 0, 255);</p>\n\n<p>y = -(x – 150); <br />\n if (y &lt; 20){ <br />\n // makes for smoother range control <br />\n y = 0; <br />\n } <br />\n y = map(y,0, 150, 0, 255);</p>\n\n<p>analogWrite(led, x); //pwm led w/ pot value <br />\n analogWrite(led2, y); //pwm led w/ pot value</p>\n\n<p>//Serial.println(x);//print value <br />\n Serial.println(y);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656105\">Physcomp-Lab 2 part2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534507000,"created_by":1,"updated_at":1396136047000,"updated_by":1,"published_at":null,"published_by":1},{"id":89,"uuid":"50d9a96f-bc41-4aaa-978c-9cbb47dd5329","title":"Lab2 Working with Pots","slug":"lab2-working-with-pots","markdown":"\nThis Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n analogWrite(led, potValue/4); //pwm led w/ pot value  \n Serial.println(potValue);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab2 part1](http://vimeo.com/6656078) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nFor more info about this lab [click here](http://itp.nyu.edu/physcomp/Intro/HomePage)\n\n\n","html":"<p>This Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n analogWrite(led, potValue/4); //pwm led w/ pot value <br />\n Serial.println(potValue);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656078\">Physcomp Lab2 part1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>For more info about this lab <a href=\"http://itp.nyu.edu/physcomp/Intro/HomePage\">click here</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534627000,"created_by":1,"updated_at":1396136055000,"updated_by":1,"published_at":null,"published_by":1},{"id":90,"uuid":"bf0264e8-f62d-44f5-ae95-23dcf0ce6288","title":"Lab 3 Working without Arduino","slug":"lab-3-working-without-arduino","markdown":"\nThis lab was mostly to focus on building circuits with out the Arduino\n\nI started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.\n\n![measuringwallwart](http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\")\n\nThe power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v\n\n![measuringaftervoltageregulator](http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\")\n\nThis is my basic LED circuit with a switch.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Basic circuit](http://vimeo.com/6815927) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nI then connected another LED in series\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Components in Series](http://vimeo.com/6815988) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThen measured the first LED in the circuit  \n![series1](http://zevenwolf.com/itp/uploads/series1.jpg \"series1\")\n\nThen the second\n\n![series2](http://zevenwolf.com/itp/uploads/series2.jpg \"series2\")\n\nFinally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3- series Led plus 1](http://vimeo.com/6816161) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nIn the parallel circuit I measured the amperage after the LEDs.\n\n![parallelmilliamps](http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\")\n\nThe last part I measured the resistance on a pot.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Pot Variable Voltage Measuring](http://vimeo.com/6816307) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This lab was mostly to focus on building circuits with out the Arduino</p>\n\n<p>I started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\"\" alt=\"measuringwallwart\" /></p>\n\n<p>The power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\"\" alt=\"measuringaftervoltageregulator\" /></p>\n\n<p>This is my basic LED circuit with a switch.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815927\">Physcomp Lab3-Basic circuit</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>I then connected another LED in series</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815988\">Physcomp Lab3-Components in Series</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Then measured the first LED in the circuit <br />\n<img src=\"http://zevenwolf.com/itp/uploads/series1.jpg \"series1\"\" alt=\"series1\" /></p>\n\n<p>Then the second</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/series2.jpg \"series2\"\" alt=\"series2\" /></p>\n\n<p>Finally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816161\">Physcomp Lab3- series Led plus 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>In the parallel circuit I measured the amperage after the LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\"\" alt=\"parallelmilliamps\" /></p>\n\n<p>The last part I measured the resistance on a pot.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816307\">Physcomp Lab3-Pot Variable Voltage Measuring</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1254227620000,"created_by":1,"updated_at":1396136062000,"updated_by":1,"published_at":null,"published_by":1},{"id":91,"uuid":"deeddee1-f720-4052-a21b-8b64a1294eb5","title":"Lab 4 Servo and Tone","slug":"lab-4-servo-and-tone","markdown":"\nThe breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Photocell tone](http://vimeo.com/6990458) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code is to check the range of the photocells\n\n*<span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }* This code uses the 2 photocells to make a thermin *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\">[http://code.google.com/p/arduino-tone/](http://code.google.com/p/arduino-tone/)</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }*\n\nThis video shows using 3 analog resistors to make a make-shift instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab4 - Three analog inputs](http://vimeo.com/6990488) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n Here is the code\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor < 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }*\n\nFinally I made an instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Musical Instrument](http://vimeo.com/6990438) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n*#include <Tone.h>*  \n*Tone noiseMaker; // instance of the tone library*  \n*int notes[] = {*  \n*NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };*  \n*int durations[] = {*  \n*100, 100, 100, 100, 100};*  \n*void setup() {*  \n*// start the music:*  \n*noiseMaker.begin(8);*  \n*Serial.begin(9600);*  \n*}*  \n*void loop() {*  \n*int pot = analogRead(5);*  \n*pot = pot/4;*  \n*Serial.println(pot);*  \n*//depending on were the pot is play series of tones at differnt pitches*  \n*if(pot > 204){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[0]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*}*  \n*else if((pot < 204) && (pot > 153)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[1]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 153) && (pot > 102)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[2]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 102) && (pot > 51)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[3]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 51) && (pot >= 0)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[4]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n }  \n*// hold before repeating:*  \n*}*  \n*}*  \n**  \n Now using the servo\n\nThe servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.\n\n**\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Using Pulse code](http://vimeo.com/6990504) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code does not use the arduino servo library\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw & Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\">*/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Using Servo Library](http://vimeo.com/6990466) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com). *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include <<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *\n\n\n","html":"<p>The breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990458\">Physcomp Lab4 – Photocell tone</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code is to check the range of the photocells</p>\n\n<p><em><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }</em> This code uses the 2 photocells to make a thermin <em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\"><a href=\"http://code.google.com/p/arduino-tone/\">http://code.google.com/p/arduino-tone/</a></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }</em></p>\n\n<p>This video shows using 3 analog resistors to make a make-shift instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990488\">Phsycomp Lab4 - Three analog inputs</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n Here is the code</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor &lt; 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }</em></p>\n\n<p>Finally I made an instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990438\">Physcomp Lab4 - Musical Instrument</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n<em>#include <Tone.h></em> <br />\n<em>Tone noiseMaker; // instance of the tone library</em> <br />\n<em>int notes[] = {</em> <br />\n<em>NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };</em> <br />\n<em>int durations[] = {</em> <br />\n<em>100, 100, 100, 100, 100};</em> <br />\n<em>void setup() {</em> <br />\n<em>// start the music:</em> <br />\n<em>noiseMaker.begin(8);</em> <br />\n<em>Serial.begin(9600);</em> <br />\n<em>}</em> <br />\n<em>void loop() {</em> <br />\n<em>int pot = analogRead(5);</em> <br />\n<em>pot = pot/4;</em> <br />\n<em>Serial.println(pot);</em> <br />\n<em>//depending on were the pot is play series of tones at differnt pitches</em> <br />\n<em>if(pot > 204){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[0]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 204) &amp;&amp; (pot > 153)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[1]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 153) &amp;&amp; (pot > 102)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[2]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 102) &amp;&amp; (pot > 51)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[3]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 51) &amp;&amp; (pot >= 0)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[4]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n } <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n** <br />\n Now using the servo</p>\n\n<p>The servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.</p>\n\n<p>**</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990504\">Physcomp Lab4 – Using Pulse code</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code does not use the arduino servo library</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw &amp; Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\"><em>/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990466\">Physcomp Lab4 - Using Servo Library</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. *<span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include &lt;<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255210186000,"created_by":1,"updated_at":1396136072000,"updated_by":1,"published_at":null,"published_by":1},{"id":92,"uuid":"2cd4fc32-b269-44fb-b0a3-82ae91a5544d","title":"Stupid Pet Trick: The Nurse Station","slug":"stupid-pet-trick-the-nurse-station","markdown":"\nThe Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: The Nurse Station](http://vimeo.com/7003116) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: Internals](http://vimeo.com/7003141) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nHere is the code\n\n*#include <Servo.h>  \n Servo servoMotor;*\n\n*int fsrPin = 0; // Analog input pin that the potentiometer is attached to  \n int fsrValue = 0; // value read from the pot  \n int fsrRef = 10; // value read from the pot  \n int redLed = 4;  \n int yellowLed = 3;  \n int greenLed = 2;  \n int servoPin = 8;  \n long time = 0;  \n long lastTime = 0;  \n boolean setTime=true;*\n\n*void setup() {  \n // initialize serial communications at 9600 bps:  \n Serial.begin(9600);  \n // declare the led pin as an output:  \n pinMode(redLed, OUTPUT);  \n pinMode(greenLed, OUTPUT);  \n pinMode(yellowLed, OUTPUT);  \n //pinMode(speakerPin, OUTPUT);  \n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin  \n // pulse = minPulse;  \n servoMotor.attach(servoPin);  \n //noiseMaker.begin(9);*\n\n*}*\n\n*void loop() {*\n\n*fsrValue = analogRead(fsrPin); // read the pot value  \n Serial.println(fsrValue);  \n if(fsrValue < 60){  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n digitalWrite(greenLed, LOW);  \n // Serial.println(“this is when the fsr is not pressed”);  \n //Serial.println(time);  \n servoMotor.write(0);  \n setTime=true;  \n // Serial.println(lastTime);*\n\n*}*\n\n*if(fsrValue > 60 && setTime == true){  \n lastTime= millis();  \n //Serial.println(“START TIMER”);  \n setTime=false;  \n //Serial.println(lastTime);  \n }*\n\n*if(fsrValue > 60) {  \n if(millis() – lastTime < 5000){  \n digitalWrite(greenLed, HIGH);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n servoMotor.write(27);*\n\n*}  \n if((millis() – lastTime >= 5000) && (millis() – lastTime <10000)){*\n\n*digitalWrite(greenLed, LOW);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, HIGH);  \n servoMotor.write(50);  \n // Serial.println(“TEN SECOND LOOP”);  \n //Serial.println(lastTime);  \n }*\n\n*if (millis() – lastTime >= 10000 ){  \n //Serial.println(“20 SECOND LOOP”);*\n\n*digitalWrite(yellowLed, LOW);  \n digitalWrite(redLed, HIGH);  \n digitalWrite(greenLed, LOW);  \n servoMotor.write(75);  \n //Serial.println(lastTime);  \n }  \n delay(100);  \n }*\n\n*//Serial.println(lastTime);  \n }*\n\nThe next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.\n\n\n","html":"<p>The Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003116\">Stupid Pet Trick: The Nurse Station</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003141\">Stupid Pet Trick: Internals</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Here is the code</p>\n\n<p><em>#include <Servo.h> <br />\n Servo servoMotor;</em></p>\n\n<p><em>int fsrPin = 0; // Analog input pin that the potentiometer is attached to <br />\n int fsrValue = 0; // value read from the pot <br />\n int fsrRef = 10; // value read from the pot <br />\n int redLed = 4; <br />\n int yellowLed = 3; <br />\n int greenLed = 2; <br />\n int servoPin = 8; <br />\n long time = 0; <br />\n long lastTime = 0; <br />\n boolean setTime=true;</em></p>\n\n<p><em>void setup() { <br />\n // initialize serial communications at 9600 bps: <br />\n Serial.begin(9600); <br />\n // declare the led pin as an output: <br />\n pinMode(redLed, OUTPUT); <br />\n pinMode(greenLed, OUTPUT); <br />\n pinMode(yellowLed, OUTPUT); <br />\n //pinMode(speakerPin, OUTPUT); <br />\n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin <br />\n // pulse = minPulse; <br />\n servoMotor.attach(servoPin); <br />\n //noiseMaker.begin(9);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void loop() {</em></p>\n\n<p><em>fsrValue = analogRead(fsrPin); // read the pot value <br />\n Serial.println(fsrValue); <br />\n if(fsrValue &lt; 60){ <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n digitalWrite(greenLed, LOW); <br />\n // Serial.println(“this is when the fsr is not pressed”); <br />\n //Serial.println(time); <br />\n servoMotor.write(0); <br />\n setTime=true; <br />\n // Serial.println(lastTime);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>if(fsrValue > 60 &amp;&amp; setTime == true){ <br />\n lastTime= millis(); <br />\n //Serial.println(“START TIMER”); <br />\n setTime=false; <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if(fsrValue > 60) { <br />\n if(millis() – lastTime &lt; 5000){ <br />\n digitalWrite(greenLed, HIGH); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n servoMotor.write(27);</em></p>\n\n<p><em>} <br />\n if((millis() – lastTime >= 5000) &amp;&amp; (millis() – lastTime &lt;10000)){</em></p>\n\n<p><em>digitalWrite(greenLed, LOW); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, HIGH); <br />\n servoMotor.write(50); <br />\n // Serial.println(“TEN SECOND LOOP”); <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if (millis() – lastTime >= 10000 ){ <br />\n //Serial.println(“20 SECOND LOOP”);</em></p>\n\n<p><em>digitalWrite(yellowLed, LOW); <br />\n digitalWrite(redLed, HIGH); <br />\n digitalWrite(greenLed, LOW); <br />\n servoMotor.write(75); <br />\n //Serial.println(lastTime); <br />\n } <br />\n delay(100); <br />\n }</em></p>\n\n<p><em>//Serial.println(lastTime); <br />\n }</em></p>\n\n<p>The next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255211616000,"created_by":1,"updated_at":1396136102000,"updated_by":1,"published_at":1255211616000,"published_by":1},{"id":93,"uuid":"5a3f1f30-5d19-42fe-b7c6-14df8d1bca09","title":"ICM Week5 XML and Processing","slug":"icm-week5-xml-and-processing","markdown":"\nThis project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.\n\n![week5](http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\")\n\nHere is the code\n\n[Main code](http://www.zevenwolf.com/itp/icm/week5/week5_2.pde)\n\n[Letter Object](http://www.zevenwolf.com/itp/icm/week5/letter.pde)\n\n*import simpleML.*;  \n letter[] table = new letter[26];  \n char[] rssTemp;  \n int rssLength = 0;  \n String[] headlines;  \n String headlinesTemp;  \n int row = 0;  \n int modInterval = 6;  \n int modNumber = 0;  \n int[] letterAmount = new int[26];  \n PFont f;  \n int letterPosX = 0;  \n int letterPosY = 0;*\n\n*void setup(){  \n size(635,480);  \n smooth();  \n background(255);  \n f = createFont( ” Arial ” ,3,true); // Loading font  \n for(int i = 0; i  \n*\n\n* if(i < 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) && (i<12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) && (i<18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) && (i<24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){  \n row = 384;  \n modNumber = i%modInterval;  \n table[i] = new letter( modNumber , row ,106,96);  \n }*\n\n* }*\n\n* //end of array parsing  \n XMLRequest xreq = new XMLRequest(this,”http://rss.netflix.com/Top100RSS”);  \n xreq.makeRequest();*\n\n*}*\n\n*void draw(){  \n for(int i = 0; i  \n 0){  \n for(int i =0; i< rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 && c <= 122) {  \n letterAmount[c-97]++;  \n }  \n //println(c);  \n }// end of i for loop*\n\n* }//end of b loop*\n\n* for(int i = 0; i < letterAmount.length; i++){  \n //println((char) (z+97) + ” ” + letterAmount[z]);  \n table[i].setAmount(letterAmount[i]);*\n\n* textFont(f,16);  \n textAlign(LEFT);  \n text(letterAmount[i],letterPosX + 10,letterPosY +10);  \n /*  \n if(i < 6){ letterPosY = 0; letterPosX = i*106; } if((i >=6) && (i<12)){ letterPosY = 96; letterPosX = ((i%modInterval)*106); } if((i >=12) && (i<18)){ letterPosY = 192; letterPosX = ((i%modInterval)*106); } if((i >=18) && (i<24)){ letterPosY = 288; letterPosX = ((i%modInterval)*106); } if(i>=24){  \n letterPosY = 384;  \n letterPosX = ((i%modInterval)*106);*\n\n* }*\n\n* */*\n\n* }*\n\n*}*\n\n*Letter Object*\n\n*class letter{  \n float x;  \n float y;  \n float letterWidth;  \n float letterHeight;*\n\n*int totalAmount = 0;*\n\n*letter(float tempX, float tempY, float widthLetter, float heightLetter){*\n\n*x = tempX;  \n y = tempY;  \n letterWidth = widthLetter;  \n letterHeight = heightLetter;*\n\n*}*\n\n*void display(){*\n\n*fill(totalAmount);  \n noStroke();  \n rect(x*106,y,letterWidth,letterHeight);  \n }*\n\n*/*  \n void letterdisplay(char letterBig){  \n //takes in a letter and displays it at the top right with a margin of 10  \n textFont(f,16);  \n textAlign(LEFT);  \n text(letterBig,x*106 + 10,y +10);*\n\n*}*/  \n void setAmount(int tempAmount){*\n\n*totalAmount = tempAmount;  \n /*  \n takes the total amount and displays it*\n\n**/*\n\n*}*\n\n*}*\n\n**\n\n\n","html":"<p>This project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\"\" alt=\"week5\" /></p>\n\n<p>Here is the code</p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/week5_2.pde\">Main code</a></p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/letter.pde\">Letter Object</a></p>\n\n<p><em>import simpleML.</em>; <br />\n letter[] table = new letter[26]; <br />\n char[] rssTemp; <br />\n int rssLength = 0; <br />\n String[] headlines; <br />\n String headlinesTemp; <br />\n int row = 0; <br />\n int modInterval = 6; <br />\n int modNumber = 0; <br />\n int[] letterAmount = new int[26]; <br />\n PFont f; <br />\n int letterPosX = 0; <br />\n int letterPosY = 0;*</p>\n\n<p>*void setup(){ <br />\n size(635,480); <br />\n smooth(); <br />\n background(255); <br />\n f = createFont( ” Arial ” ,3,true); // Loading font <br />\n for(int i = 0; i <br />\n*</p>\n\n<ul>\n<li><p>if(i &lt; 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) &amp;&amp; (i&lt;12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) &amp;&amp; (i&lt;18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) &amp;&amp; (i&lt;24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){ <br />\nrow = 384; <br />\nmodNumber = i%modInterval; <br />\ntable[i] = new letter( modNumber , row ,106,96); <br />\n}*</p></li>\n<li><p>}*</p></li>\n<li><p>//end of array parsing <br />\nXMLRequest xreq = new XMLRequest(this,”<a href=\"http://rss.netflix.com/Top100RSS”\">http://rss.netflix.com/Top100RSS”</a>); <br />\nxreq.makeRequest();*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>void draw(){ <br />\n for(int i = 0; i <br />\n 0){ <br />\n for(int i =0; i&lt; rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 &amp;&amp; c &lt;= 122) { <br />\n letterAmount[c-97]++; <br />\n } <br />\n //println(c); <br />\n }// end of i for loop</em></p>\n\n<ul>\n<li><p>}//end of b loop*</p></li>\n<li><p>for(int i = 0; i &lt; letterAmount.length; i++){ <br />\n//println((char) (z+97) + ” ” + letterAmount[z]); <br />\ntable[i].setAmount(letterAmount[i]);*</p></li>\n<li><p>textFont(f,16); <br />\ntextAlign(LEFT); <br />\ntext(letterAmount[i],letterPosX + 10,letterPosY +10); <br />\n/* <br />\nif(i &lt; 6){ letterPosY = 0; letterPosX = i<em>106; } if((i >=6) &amp;&amp; (i&lt;12)){ letterPosY = 96; letterPosX = ((i%modInterval)</em>106); } if((i >=12) &amp;&amp; (i&lt;18)){ letterPosY = 192; letterPosX = ((i%modInterval)<em>106); } if((i >=18) &amp;&amp; (i&lt;24)){ letterPosY = 288; letterPosX = ((i%modInterval)</em>106); } if(i>=24){ <br />\nletterPosY = 384; <br />\nletterPosX = ((i%modInterval)<em>106);</em></p></li>\n<li><p>}*</p></li>\n<li><p><em>/</em></p></li>\n<li><p>}*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>Letter Object</em></p>\n\n<p><em>class letter{ <br />\n float x; <br />\n float y; <br />\n float letterWidth; <br />\n float letterHeight;</em></p>\n\n<p><em>int totalAmount = 0;</em></p>\n\n<p><em>letter(float tempX, float tempY, float widthLetter, float heightLetter){</em></p>\n\n<p><em>x = tempX; <br />\n y = tempY; <br />\n letterWidth = widthLetter; <br />\n letterHeight = heightLetter;</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void display(){</em></p>\n\n<p><em>fill(totalAmount); <br />\n noStroke(); <br />\n rect(x</em>106,y,letterWidth,letterHeight); <br />\n }*</p>\n\n<p><em>/</em> <br />\n void letterdisplay(char letterBig){ <br />\n //takes in a letter and displays it at the top right with a margin of 10 <br />\n textFont(f,16); <br />\n textAlign(LEFT); <br />\n text(letterBig,x<em>106 + 10,y +10);</em></p>\n\n<p><em>}</em>/ <br />\n void setAmount(int tempAmount){*</p>\n\n<p><em>totalAmount = tempAmount; <br />\n /</em> <br />\n takes the total amount and displays it*</p>\n\n<p><em>*/</em></p>\n\n<p><em>}</em></p>\n\n<p><em>}</em></p>\n\n<p>**</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255506019000,"created_by":1,"updated_at":1396136113000,"updated_by":1,"published_at":null,"published_by":1},{"id":94,"uuid":"d9f9f8b5-106b-4025-aa61-c84ab057dcce","title":"Physcomp Lab6 - Serial Communication","slug":"physcomp-lab6-serial-communication","markdown":"\nUsing Serial Communication with Arduino and Processing was not too bad.\n\nThe arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.\n\n<span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }\n\nOnce you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code.  \n import processing.serial.*;\n\nSerial myPort; // The serial port  \n int graphXPos = 1; // the horizontal position of the graph:  \n float randNum = 0;  \n void setup () {  \n size(640, 480); // window size\n\n// List all the available serial ports  \n println(Serial.list());  \n // I know that the fisrt port in the serial list on my mac  \n // is usually my Arduino module, so I open Serial.list()[0].  \n // Open whatever port is the one you’re using.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// set inital background:  \n background(255);  \n smooth();  \n }  \n void draw () {  \n // nothing happens in draw. It all happens in SerialEvent()  \n }\n\nvoid serialEvent (Serial myPort) {  \n // get the byte:  \n int inByte = myPort.read();  \n randNum = random(255);  \n // print it:  \n println(inByte);  \n // set the drawing color. Pick a pretty color:  \n fill(randNum, randNum);  \n noStroke();  \n // draw the ellipse:  \n ellipse(graphXPos, inByte*2, 100, 100);\n\n// at the edge of the screen, go back to the beginning:  \n if (graphXPos >= width) {  \n graphXPos = 0;\n\n}  \n else {  \n // increment the horizontal position for the next reading:  \n graphXPos++;  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab6 – Serial Communication](http://vimeo.com/7165637) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>Using Serial Communication with Arduino and Processing was not too bad.</p>\n\n<p>The arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.</p>\n\n<p><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }</p>\n\n<p>Once you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code. <br />\n import processing.serial.*;</p>\n\n<p>Serial myPort; // The serial port <br />\n int graphXPos = 1; // the horizontal position of the graph: <br />\n float randNum = 0; <br />\n void setup () { <br />\n size(640, 480); // window size</p>\n\n<p>// List all the available serial ports <br />\n println(Serial.list()); <br />\n // I know that the fisrt port in the serial list on my mac <br />\n // is usually my Arduino module, so I open Serial.list()[0]. <br />\n // Open whatever port is the one you’re using. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// set inital background: <br />\n background(255); <br />\n smooth(); <br />\n } <br />\n void draw () { <br />\n // nothing happens in draw. It all happens in SerialEvent() <br />\n }</p>\n\n<p>void serialEvent (Serial myPort) { <br />\n // get the byte: <br />\n int inByte = myPort.read(); <br />\n randNum = random(255); <br />\n // print it: <br />\n println(inByte); <br />\n // set the drawing color. Pick a pretty color: <br />\n fill(randNum, randNum); <br />\n noStroke(); <br />\n // draw the ellipse: <br />\n ellipse(graphXPos, inByte*2, 100, 100);</p>\n\n<p>// at the edge of the screen, go back to the beginning: <br />\n if (graphXPos >= width) { <br />\n graphXPos = 0;</p>\n\n<p>} <br />\n else { <br />\n // increment the horizontal position for the next reading: <br />\n graphXPos++; <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7165637\">Physcomp Lab6 – Serial Communication</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256047253000,"created_by":1,"updated_at":1396136121000,"updated_by":1,"published_at":null,"published_by":1},{"id":95,"uuid":"c162051d-fa85-40c6-970a-2168f34cd2f6","title":"Observation: The Brita Filter","slug":"observation-the-brita-filter","markdown":"\nObservation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.\n\n![filter](http://zevenwolf.com/itp/uploads/filter.jpg \"filter\")\n\nReaction\n\nThe piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.\n\nI think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.\n\n\n","html":"<p>Observation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/filter.jpg \"filter\"\" alt=\"filter\" /></p>\n\n<p>Reaction</p>\n\n<p>The piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.</p>\n\n<p>I think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256084418000,"created_by":1,"updated_at":1396136128000,"updated_by":1,"published_at":null,"published_by":1},{"id":96,"uuid":"42c1b3a7-cce8-4d89-9a57-7c625fd1b771","title":"Lab 7 - Serial Communication 2 and Handshaking","slug":"lab-7-serial-communication-2-and-handshaking","markdown":"\nFor this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.\n\nThis arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.\n\n***Arduino Code***\n\nint analogOne = 0; // analog input  \n int analogTwo = 1; // analog input  \n int analogThree = 2; // digital input\n\nint sensorValue = 0; // reading from the sensor\n\nvoid setup() {  \n // configure the serial connection:  \n Serial.begin(9600);  \n // configure the digital input:  \n // pinMode(digitalOne, INPUT);  \n establishContact();  \n }\n\nvoid loop() {  \n if(Serial.available()>0){  \n // read the sensor:  \n sensorValue = analogRead(analogOne);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogTwo);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogThree);  \n // print the last sensor value with a println() so that  \n // each set of four readings prints on a line by itself:  \n Serial.println(sensorValue, DEC);  \n }  \n }  \n void establishContact() {  \n while (Serial.available() <= 0) {  \n Serial.println(“hello”); // send a starting message  \n delay(300);  \n }  \n }\n\n***Processing Code***  \n import processing.serial.*; // import the Processing serial library  \n Serial myPort; // The serial port\n\nfloat bgcolor; // Background color  \n float fgcolor; // Fill color  \n float xpos, ypos; // Starting position of the ball  \n boolean firstContact = false; // Whether we’ve heard from the microcontroller\n\nvoid setup() {  \n size(640,480);  \n background(255);  \n smooth();  \n // List all the available serial ports  \n println(Serial.list());\n\n// I know that the first port in the serial list on my mac  \n // is always my Arduino module, so I open Serial.list()[0].  \n // Change the 0 to the appropriate number of the serial port  \n // that your microcontroller is attached to.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// read bytes into a buffer until you get a linefeed (ASCII 10):  \n myPort.bufferUntil(‘n’);\n\n}\n\nvoid draw() {\n\nfill(random(255),fgcolor,random(255), random(255));  \n noStroke();  \n // Draw the shape  \n ellipse(xpos, ypos, 100, 100);  \n }\n\n// serialEvent method is run automatically by the Processing applet  \n // whenever the buffer reaches the byte value set in the bufferUntil()  \n // method in the setup():\n\nvoid serialEvent(Serial myPort) {  \n // read the serial buffer:  \n String myString = myPort.readStringUntil(‘n’);  \n // if you got any bytes other than the linefeed:  \n if (myString != null) {\n\nmyString = trim(myString);\n\nif (firstContact == false) {  \n if (myString.equals(“hello”)) {  \n myPort.clear(); // clear the serial port buffer  \n firstContact = true; // you’ve had first contact from the microcontroller  \n myPort.write(‘A’); // ask for more  \n }  \n }\n\nelse{\n\n// split the string at the commas  \n // and convert the sections into integers:  \n int sensors[] = int(split(myString, ‘,’));\n\n// print out the values you got:  \n for (int sensorNum = 0; sensorNum < sensors.length; sensorNum++) {  \n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”);  \n }  \n // add a linefeed after all the sensor values are printed:  \n println();  \n if (sensors.length > 1) {  \n xpos = map(sensors[0], 0,400,0,width/2);  \n ypos = map(sensors[1], 0,400,0,height/2);  \n fgcolor = sensors[2] / 4;  \n }\n\n}  \n myPort.write(“A”);  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab7 – Serial Lab 2](http://vimeo.com/7302074) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>For this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.</p>\n\n<p>This arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.</p>\n\n<p><strong><em>Arduino Code</em></strong></p>\n\n<p>int analogOne = 0; // analog input <br />\n int analogTwo = 1; // analog input <br />\n int analogThree = 2; // digital input</p>\n\n<p>int sensorValue = 0; // reading from the sensor</p>\n\n<p>void setup() { <br />\n // configure the serial connection: <br />\n Serial.begin(9600); <br />\n // configure the digital input: <br />\n // pinMode(digitalOne, INPUT); <br />\n establishContact(); <br />\n }</p>\n\n<p>void loop() { <br />\n if(Serial.available()>0){ <br />\n // read the sensor: <br />\n sensorValue = analogRead(analogOne); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogTwo); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogThree); <br />\n // print the last sensor value with a println() so that <br />\n // each set of four readings prints on a line by itself: <br />\n Serial.println(sensorValue, DEC); <br />\n } <br />\n } <br />\n void establishContact() { <br />\n while (Serial.available() &lt;= 0) { <br />\n Serial.println(“hello”); // send a starting message <br />\n delay(300); <br />\n } <br />\n }</p>\n\n<p><strong><em>Processing Code</em></strong> <br />\n import processing.serial.*; // import the Processing serial library <br />\n Serial myPort; // The serial port</p>\n\n<p>float bgcolor; // Background color <br />\n float fgcolor; // Fill color <br />\n float xpos, ypos; // Starting position of the ball <br />\n boolean firstContact = false; // Whether we’ve heard from the microcontroller</p>\n\n<p>void setup() { <br />\n size(640,480); <br />\n background(255); <br />\n smooth(); <br />\n // List all the available serial ports <br />\n println(Serial.list());</p>\n\n<p>// I know that the first port in the serial list on my mac <br />\n // is always my Arduino module, so I open Serial.list()[0]. <br />\n // Change the 0 to the appropriate number of the serial port <br />\n // that your microcontroller is attached to. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// read bytes into a buffer until you get a linefeed (ASCII 10): <br />\n myPort.bufferUntil(‘n’);</p>\n\n<p>}</p>\n\n<p>void draw() {</p>\n\n<p>fill(random(255),fgcolor,random(255), random(255)); <br />\n noStroke(); <br />\n // Draw the shape <br />\n ellipse(xpos, ypos, 100, 100); <br />\n }</p>\n\n<p>// serialEvent method is run automatically by the Processing applet <br />\n // whenever the buffer reaches the byte value set in the bufferUntil() <br />\n // method in the setup():</p>\n\n<p>void serialEvent(Serial myPort) { <br />\n // read the serial buffer: <br />\n String myString = myPort.readStringUntil(‘n’); <br />\n // if you got any bytes other than the linefeed: <br />\n if (myString != null) {</p>\n\n<p>myString = trim(myString);</p>\n\n<p>if (firstContact == false) { <br />\n if (myString.equals(“hello”)) { <br />\n myPort.clear(); // clear the serial port buffer <br />\n firstContact = true; // you’ve had first contact from the microcontroller <br />\n myPort.write(‘A’); // ask for more <br />\n } <br />\n }</p>\n\n<p>else{</p>\n\n<p>// split the string at the commas <br />\n // and convert the sections into integers: <br />\n int sensors[] = int(split(myString, ‘,’));</p>\n\n<p>// print out the values you got: <br />\n for (int sensorNum = 0; sensorNum &lt; sensors.length; sensorNum++) { <br />\n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”); <br />\n } <br />\n // add a linefeed after all the sensor values are printed: <br />\n println(); <br />\n if (sensors.length > 1) { <br />\n xpos = map(sensors[0], 0,400,0,width/2); <br />\n ypos = map(sensors[1], 0,400,0,height/2); <br />\n fgcolor = sensors[2] / 4; <br />\n }</p>\n\n<p>} <br />\n myPort.write(“A”); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7302074\">Physcomp Lab7 – Serial Lab 2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256687500000,"created_by":1,"updated_at":1396136142000,"updated_by":1,"published_at":null,"published_by":1},{"id":97,"uuid":"47c6539a-8585-46bc-bd00-cd94c310aab3","title":"ICM Midterm Project","slug":"icm-midterm-project","markdown":"\nFor my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: [http://www.zevenrodriguez.com/itp/icm/midterm/](http://www.zevenrodriguez.com/itp/icm/midterm/)\n\nThis would be the first prompt\n\n![firstpage](http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\")\n\nAfter to press start it should either take a video capture or a image of you and create the display below\n\n![output](http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\")\n\n\n","html":"<p>For my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: <a href=\"http://www.zevenrodriguez.com/itp/icm/midterm/\">http://www.zevenrodriguez.com/itp/icm/midterm/</a></p>\n\n<p>This would be the first prompt</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\"\" alt=\"firstpage\" /></p>\n\n<p>After to press start it should either take a video capture or a image of you and create the display below</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\"\" alt=\"output\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256732391000,"created_by":1,"updated_at":1396136182000,"updated_by":1,"published_at":1256732391000,"published_by":1},{"id":98,"uuid":"4938831c-6b59-4e53-8163-1e1269370824","title":"PComp Midterm-MIDI Light Table: Making the table","slug":"pcomp-midterm-midi-light-table-making-the-table","markdown":"\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nFor our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Midterm – MIDI Light Table](http://vimeo.com/7494936) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nOne day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.\n\n![1cardboardframe](http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\")\n\nWe decided to use foil to help with the diffusion of light.\n\n![2wiredandfoiled](http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\")\n\nAfter soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.\n\n![3juliofirstwiring](http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\")\n\nWe decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.![4woodtrackwithredlightsonly](http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg \"4woodtrackwithredlightsonly\")\n\nThe wooden block between the tracks contains bearings which help guide the wood easier along the tracks.\n\n![5woodtrackcloseup](http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\")\n\nWe used a resistor ladder to control the brightness of the lights.\n\n![6resistorladderforlights](http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\")\n\nDue to the high friction and the lack of rigidity of wood, metal was used to fix this issue.\n\n![7usingmetal](http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\")\n\nThis was the first time we started testing the brightness of the LEDs and the readings from the photocells.\n\n![8lightgradationtest](http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\")\n\nWe decided to use 2 photocells per cell because after trying one per cell we were getting better readings.\n\n![10undertheobject](http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\")\n\nAfter the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.![11vellumgradtest](http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg \"11vellumgradtest\")The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.\n\n![12aftertheladder](http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\")\n\nAfter testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.\n\n![13testing](http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\")\n\nHere are Julio and Mike doing some testing and calibration.\n\n![14theguystesting](http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\")\n\nThis is the final pot ladder for the lights.\n\n![15finalptladder](http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\")\n\nThis is was the lights looked like when they were tuned.\n\n![16itsworkingkinda](http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\")\n\nOur puck turned out to be a cool little mascot\n\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nIn the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit [Julio Terra’s blog](http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp)\n\n\n","html":"<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>For our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494936\">Physcomp Midterm – MIDI Light Table</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>One day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\"\" alt=\"1cardboardframe\" /></p>\n\n<p>We decided to use foil to help with the diffusion of light.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\"\" alt=\"2wiredandfoiled\" /></p>\n\n<p>After soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\"\" alt=\"3juliofirstwiring\" /></p>\n\n<p>We decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.<img src=\"http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg\" alt=\"4woodtrackwithredlightsonly\" title=\"4woodtrackwithredlightsonly\" /></p>\n\n<p>The wooden block between the tracks contains bearings which help guide the wood easier along the tracks.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\"\" alt=\"5woodtrackcloseup\" /></p>\n\n<p>We used a resistor ladder to control the brightness of the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\"\" alt=\"6resistorladderforlights\" /></p>\n\n<p>Due to the high friction and the lack of rigidity of wood, metal was used to fix this issue.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\"\" alt=\"7usingmetal\" /></p>\n\n<p>This was the first time we started testing the brightness of the LEDs and the readings from the photocells.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\"\" alt=\"8lightgradationtest\" /></p>\n\n<p>We decided to use 2 photocells per cell because after trying one per cell we were getting better readings.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\"\" alt=\"10undertheobject\" /></p>\n\n<p>After the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.<img src=\"http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg\" alt=\"11vellumgradtest\" title=\"11vellumgradtest\" />The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\"\" alt=\"12aftertheladder\" /></p>\n\n<p>After testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\"\" alt=\"13testing\" /></p>\n\n<p>Here are Julio and Mike doing some testing and calibration.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\"\" alt=\"14theguystesting\" /></p>\n\n<p>This is the final pot ladder for the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\"\" alt=\"15finalptladder\" /></p>\n\n<p>This is was the lights looked like when they were tuned.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\"\" alt=\"16itsworkingkinda\" /></p>\n\n<p>Our puck turned out to be a cool little mascot</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>In the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit <a href=\"http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp\">Julio Terra’s blog</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257378870000,"created_by":1,"updated_at":1396136195000,"updated_by":1,"published_at":1257378870000,"published_by":1},{"id":99,"uuid":"1969fa69-b913-4d25-b0b3-65b1cc207fc7","title":"Physcomp Lab8 - Transistors and HBridge","slug":"physcomp-lab8-transistors-and-hbridge","markdown":"\nThis week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy.  \n![P1000245-w400](http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\")\n\nThis code is to program the arduino to speed up and slow done the motor.\n\n const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab8 – Transistor](http://vimeo.com/7495071) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nNow to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.\n\n![](http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg)This is my wiring.\n\n![P1000237-w400](http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\")\n\nHere is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.\n\nconst int switchPin = 2; // switch input  \n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A)  \n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A)  \n const int enablePin = 9; // H-bridge enable pin  \n const int ledPin = 13; // LED  \n int pot= 0;  \n int potValue = 0;  \n void setup() {  \n Serial.begin(9600);  \n // set the switch as an input:  \n pinMode(switchPin, INPUT);\n\n// set all the other pins you’re using as outputs:  \n pinMode(motor1Pin, OUTPUT);  \n pinMode(motor2Pin, OUTPUT);  \n pinMode(enablePin, OUTPUT);  \n pinMode(ledPin, OUTPUT);\n\n// set enablePin high so that motor can turn on:  \n //digitalWrite(enablePin, HIGH);\n\n// blink the LED 3 times. This should happen only once.  \n // if you see the LED blink three times, it means that the module  \n // reset itself,. probably because the motor caused a brownout  \n // or a short.  \n blink(ledPin, 3, 100);  \n }\n\nvoid loop() {  \n potValue = analogRead(pot);  \n Serial.println(potValue);\n\n// if the switch is high, motor will turn on one direction:  \n if (digitalRead(switchPin) == HIGH) {\n\nanalogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low  \n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high  \n }  \n // if the switch is low, motor will turn in the other direction:  \n else {  \n analogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high  \n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low  \n }  \n }\n\n/*  \n blinks an LED  \n */  \n void blink(int whatPin, int howManyTimes, int milliSecs) {  \n int i = 0;  \n for ( i = 0; i < howManyTimes; i++) {  \n digitalWrite(whatPin, HIGH);  \n delay(milliSecs/2);  \n digitalWrite(whatPin, LOW);  \n delay(milliSecs/2);  \n }  \n }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab8 – HBridge with Pot](http://vimeo.com/7494976) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy. <br />\n<img src=\"http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\"\" alt=\"P1000245-w400\" /></p>\n\n<p>This code is to program the arduino to speed up and slow done the motor.</p>\n\n<p>const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7495071\">Physcomp Lab8 – Transistor</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Now to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.</p>\n\n<p><img src=\"http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg\" alt=\"\" title=\"\" />This is my wiring.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\"\" alt=\"P1000237-w400\" /></p>\n\n<p>Here is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.</p>\n\n<p>const int switchPin = 2; // switch input <br />\n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A) <br />\n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A) <br />\n const int enablePin = 9; // H-bridge enable pin <br />\n const int ledPin = 13; // LED <br />\n int pot= 0; <br />\n int potValue = 0; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n // set the switch as an input: <br />\n pinMode(switchPin, INPUT);</p>\n\n<p>// set all the other pins you’re using as outputs: <br />\n pinMode(motor1Pin, OUTPUT); <br />\n pinMode(motor2Pin, OUTPUT); <br />\n pinMode(enablePin, OUTPUT); <br />\n pinMode(ledPin, OUTPUT);</p>\n\n<p>// set enablePin high so that motor can turn on: <br />\n //digitalWrite(enablePin, HIGH);</p>\n\n<p>// blink the LED 3 times. This should happen only once. <br />\n // if you see the LED blink three times, it means that the module <br />\n // reset itself,. probably because the motor caused a brownout <br />\n // or a short. <br />\n blink(ledPin, 3, 100); <br />\n }</p>\n\n<p>void loop() { <br />\n potValue = analogRead(pot); <br />\n Serial.println(potValue);</p>\n\n<p>// if the switch is high, motor will turn on one direction: <br />\n if (digitalRead(switchPin) == HIGH) {</p>\n\n<p>analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low <br />\n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high <br />\n } <br />\n // if the switch is low, motor will turn in the other direction: <br />\n else { <br />\n analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high <br />\n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low <br />\n } <br />\n }</p>\n\n<p>/* <br />\n blinks an LED <br />\n */ <br />\n void blink(int whatPin, int howManyTimes, int milliSecs) { <br />\n int i = 0; <br />\n for ( i = 0; i &lt; howManyTimes; i++) { <br />\n digitalWrite(whatPin, HIGH); <br />\n delay(milliSecs/2); <br />\n digitalWrite(whatPin, LOW); <br />\n delay(milliSecs/2); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494976\">Phsycomp Lab8 – HBridge with Pot</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257676898000,"created_by":1,"updated_at":1396136223000,"updated_by":1,"published_at":null,"published_by":1},{"id":100,"uuid":"4e9db01f-06e9-4fe1-9caf-b768f57cf184","title":"Pcomp Final Concept Drawing","slug":"pcomp-final-concept-drawing","markdown":"\nThe Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.\n\n![design](http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\")\n\n\n","html":"<p>The Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\"\" alt=\"design\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257891131000,"created_by":1,"updated_at":1396136274000,"updated_by":1,"published_at":1257891131000,"published_by":1},{"id":101,"uuid":"86e40b6f-cb90-4dc5-bec3-e58f1a7a468f","title":"The Helper","slug":"thehelper","markdown":"\nThe helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.\n\n![design2](http://zevenwolf.com/blog/uploads/design2.jpg \"design2\")\n\nThe grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\">![For the controller we used bowls because they would be easier to rotate with the palm of your hand.](http://zevenwolf.com/blog/uploads/bowl1.jpg \"bowl1\")</dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\">![The controller was designed to be anbidextrous.](http://zevenwolf.com/blog/uploads/internaldesign.jpg \"internaldesign\")The controller was designed to be anbidextrous.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\">![We installed buttons to allow for preset commands such as \"Bring it to me\" and \"Grab item\"](http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg \"internalswithbuttons\")We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”\n\n</div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\">![This is before the controller was wired in to the breadboard and arduino.](http://zevenwolf.com/blog/uploads/controllerfinal.jpg \"controllerfinal\")This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\">![The helper is controlled by two 360 potentiometer and two lighted big buttons.](http://zevenwolf.com/blog/uploads/internalwiring.jpg \"internalwiring\")The helper is controlled by two 360 potentiometer and two lighted big buttons.\n\n</div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\">![Russ started with a cardboard mock up of how the grabber will operate.](http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg \"cardboard-mock-up\")Russ started with a cardboard mock up of how the grabber will operate.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\">![Parts are in for the Grabber and Servo for the Arm.](http://zevenwolf.com/blog/uploads/grabberparts.jpg \"grabberparts\")Parts are in for the Grabber and Servo for the Arm.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\">![The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.](http://zevenwolf.com/blog/uploads/grabberside1.jpg \"grabberside1\")The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\">![This is the top design of 1st interation of the grabber.](http://zevenwolf.com/blog/uploads/grabbertop1.jpg \"grabbertop1\")We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\">![This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.](http://zevenwolf.com/blog/uploads/grabbernew1.jpg \"grabbernew1\")This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\">![This is the side view of the interim design for the grabber.](http://zevenwolf.com/blog/uploads/grabbernewside.jpg \"grabbernewside\")This is the side view of the interim design for the grabber.\n\n</div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\">![One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.](http://zevenwolf.com/blog/uploads/redesigning-internals.jpg \"redesigning-internals\")One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\">![Quick test to see if the servo can lift the Grabber from it's new mounting point.](http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg \"grabberweightdistro\")Quick test to see if the servo can lift the Grabber from it’s new mounting point.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\">![Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.](http://zevenwolf.com/blog/uploads/smallservobefore.jpg \"smallservobefore\")Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\">![The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.](http://zevenwolf.com/blog/uploads/motorbracket.jpg \"motorbracket\")The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\">![This is the final version of the grabber.](http://zevenwolf.com/blog/uploads/grabberfinal.jpg \"grabberfinal\")This is the final version of the grabber. We are using a motor to drive the Grabber motion.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\">![We are using springs to lift the Grabber above the items it intends to grab.](http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg \"grabberwithsprings\")We are using springs to lift the Grabber above the items it intends to grab.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\">![Russ testing everything out.](http://zevenwolf.com/blog/uploads/russtest.jpg \"russtest\")Russ making sure everything works.\n\n</div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n</div>[Pcomp Final – The Helper](http://vimeo.com/8206417) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nCODE\n\n#include\n\nint analogPin0 = 0; // blue up and down  \n int analogPin1 = 1; // green left right pot  \n int analogPin2 = 2; // blue pot to control hbridge speed\n\n// pins for buttons  \n int redButton = 2; // red wire to pin 2  \n int greenButton = 5; // green wire to pin 5\n\n// pins for lights  \n int redLight = 10; // yellow wire to pin 10  \n int greenLight = 11; // white wire to pin 11\n\n// pins for motors  \n int servo1 = 6; // no color yet left right  \n int servo2 = 7; // no color yet up down  \n int motor1 = 9; // pulse pin for the hbridge\n\nint red = 0;  \n int green = 0;\n\nint analogSensorPin = 0; // select the input pin for the potentiometer  \n int analogSensorPin1 = 1; // select the input pin for the potentiometer\n\nint formerValue = 0;  \n int nowValue = 0;  \n float difference = 0;  \n float deg = 83;\n\nint formerValue1 = 0;  \n int nowValue1 = 0;  \n float difference1 = 0;  \n float deg1 = 0;\n\nServo updown;  \n Servo leftright;  \n void setup() {  \n Serial.begin(9600);  \n updown.attach(8);  \n leftright.attach(7);  \n pinMode(redButton, INPUT);  \n pinMode(greenButton,INPUT);  \n }\n\nvoid loop()  \n {  \n // read the value from the sensor:\n\n// this reads pot 1  \n nowValue = analogRead(analogSensorPin);  \n //Serial.print(“this is pot”);  \n //Serial.println(nowValue);  \n difference = nowValue – formerValue;\n\nif(abs(difference) > 500)  \n {  \n if(difference > 0)  \n {  \n difference = formerValue + (1023 – nowValue);  \n }  \n else  \n {  \n difference = (1023 – formerValue) + nowValue;  \n }  \n }\n\ndeg += difference / 30;\n\nif(deg < 0) { deg = 0; } else if(deg > 180)  \n {  \n deg = 180;  \n }\n\n// Serial.println(deg);\n\nformerValue = nowValue;\n\n// this reads pot 2  \n nowValue1 = analogRead(analogSensorPin1);  \n //Serial.print(“this is pot1″);  \n //Serial.println(nowValue1);  \n difference1 = nowValue1 – formerValue1;\n\nif(abs(difference1) > 500)  \n {  \n if(difference1 > 0)  \n {  \n difference1 = formerValue1 + (1023 – nowValue1);  \n }  \n else  \n {  \n difference1 = (1023 – formerValue1) + nowValue1;  \n }  \n }\n\ndeg1 += difference1 / 30;\n\nif(deg1 < 0) { deg1 = 0; } else if(deg1 > 180)  \n {  \n deg1 = 180;  \n }\n\n// Serial.println(deg1);\n\nformerValue = nowValue;\n\nupdown.write(deg);  \n Serial.println(deg);  \n leftright.write(deg1);\n\nred = digitalRead(redButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n green = digitalRead(greenButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n }\n\n\n","html":"<p>The helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/design2.jpg \"design2\"\" alt=\"design2\" /></p>\n\n<p>The grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\"><img src=\"http://zevenwolf.com/blog/uploads/bowl1.jpg\" alt=\"For the controller we used bowls because they would be easier to rotate with the palm of your hand.\" title=\"bowl1\" /></dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internaldesign.jpg\" alt=\"The controller was designed to be anbidextrous.\" title=\"internaldesign\" />The controller was designed to be anbidextrous.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg\" alt=\"We installed buttons to allow for preset commands such as &quot;Bring it to me&quot; and &quot;Grab item&quot;\" title=\"internalswithbuttons\" />We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”</p>\n\n<p></div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/controllerfinal.jpg\" alt=\"This is before the controller was wired in to the breadboard and arduino.\" title=\"controllerfinal\" />This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalwiring.jpg\" alt=\"The helper is controlled by two 360 potentiometer and two lighted big buttons.\" title=\"internalwiring\" />The helper is controlled by two 360 potentiometer and two lighted big buttons.</p>\n\n<p></div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg\" alt=\"Russ started with a cardboard mock up of how the grabber will operate.\" title=\"cardboard-mock-up\" />Russ started with a cardboard mock up of how the grabber will operate.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberparts.jpg\" alt=\"Parts are in for the Grabber and Servo for the Arm.\" title=\"grabberparts\" />Parts are in for the Grabber and Servo for the Arm.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberside1.jpg\" alt=\"The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\" title=\"grabberside1\" />The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbertop1.jpg\" alt=\"This is the top design of 1st interation of the grabber.\" title=\"grabbertop1\" />We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernew1.jpg\" alt=\"This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\" title=\"grabbernew1\" />This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernewside.jpg\" alt=\"This is the side view of the interim design for the grabber.\" title=\"grabbernewside\" />This is the side view of the interim design for the grabber.</p>\n\n<p></div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.\" title=\"grabberfirst-install\" />The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.\" title=\"grabberfirst-install\" />In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/redesigning-internals.jpg\" alt=\"One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.\" title=\"redesigning-internals\" />One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg\" alt=\"Quick test to see if the servo can lift the Grabber from it's new mounting point.\" title=\"grabberweightdistro\" />Quick test to see if the servo can lift the Grabber from it’s new mounting point.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/smallservobefore.jpg\" alt=\"Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\" title=\"smallservobefore\" />Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/motorbracket.jpg\" alt=\"The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\" title=\"motorbracket\" />The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfinal.jpg\" alt=\"This is the final version of the grabber.\" title=\"grabberfinal\" />This is the final version of the grabber. We are using a motor to drive the Grabber motion.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg\" alt=\"We are using springs to lift the Grabber above the items it intends to grab.\" title=\"grabberwithsprings\" />We are using springs to lift the Grabber above the items it intends to grab.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/russtest.jpg\" alt=\"Russ testing everything out.\" title=\"russtest\" />Russ making sure everything works.</p>\n\n<p></div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p></div><a href=\"http://vimeo.com/8206417\">Pcomp Final – The Helper</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>CODE</p>\n\n<h1 id=\"include\">include</h1>\n\n<p>int analogPin0 = 0; // blue up and down <br />\n int analogPin1 = 1; // green left right pot <br />\n int analogPin2 = 2; // blue pot to control hbridge speed</p>\n\n<p>// pins for buttons <br />\n int redButton = 2; // red wire to pin 2 <br />\n int greenButton = 5; // green wire to pin 5</p>\n\n<p>// pins for lights <br />\n int redLight = 10; // yellow wire to pin 10 <br />\n int greenLight = 11; // white wire to pin 11</p>\n\n<p>// pins for motors <br />\n int servo1 = 6; // no color yet left right <br />\n int servo2 = 7; // no color yet up down <br />\n int motor1 = 9; // pulse pin for the hbridge</p>\n\n<p>int red = 0; <br />\n int green = 0;</p>\n\n<p>int analogSensorPin = 0; // select the input pin for the potentiometer <br />\n int analogSensorPin1 = 1; // select the input pin for the potentiometer</p>\n\n<p>int formerValue = 0; <br />\n int nowValue = 0; <br />\n float difference = 0; <br />\n float deg = 83;</p>\n\n<p>int formerValue1 = 0; <br />\n int nowValue1 = 0; <br />\n float difference1 = 0; <br />\n float deg1 = 0;</p>\n\n<p>Servo updown; <br />\n Servo leftright; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n updown.attach(8); <br />\n leftright.attach(7); <br />\n pinMode(redButton, INPUT); <br />\n pinMode(greenButton,INPUT); <br />\n }</p>\n\n<p>void loop() <br />\n { <br />\n // read the value from the sensor:</p>\n\n<p>// this reads pot 1 <br />\n nowValue = analogRead(analogSensorPin); <br />\n //Serial.print(“this is pot”); <br />\n //Serial.println(nowValue); <br />\n difference = nowValue – formerValue;</p>\n\n<p>if(abs(difference) > 500) <br />\n { <br />\n if(difference > 0) <br />\n { <br />\n difference = formerValue + (1023 – nowValue); <br />\n } <br />\n else <br />\n { <br />\n difference = (1023 – formerValue) + nowValue; <br />\n } <br />\n }</p>\n\n<p>deg += difference / 30;</p>\n\n<p>if(deg &lt; 0) { deg = 0; } else if(deg > 180) <br />\n { <br />\n deg = 180; <br />\n }</p>\n\n<p>// Serial.println(deg);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>// this reads pot 2 <br />\n nowValue1 = analogRead(analogSensorPin1); <br />\n //Serial.print(“this is pot1″); <br />\n //Serial.println(nowValue1); <br />\n difference1 = nowValue1 – formerValue1;</p>\n\n<p>if(abs(difference1) > 500) <br />\n { <br />\n if(difference1 > 0) <br />\n { <br />\n difference1 = formerValue1 + (1023 – nowValue1); <br />\n } <br />\n else <br />\n { <br />\n difference1 = (1023 – formerValue1) + nowValue1; <br />\n } <br />\n }</p>\n\n<p>deg1 += difference1 / 30;</p>\n\n<p>if(deg1 &lt; 0) { deg1 = 0; } else if(deg1 > 180) <br />\n { <br />\n deg1 = 180; <br />\n }</p>\n\n<p>// Serial.println(deg1);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>updown.write(deg); <br />\n Serial.println(deg); <br />\n leftright.write(deg1);</p>\n\n<p>red = digitalRead(redButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n green = digitalRead(greenButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n }</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258494603000,"created_by":1,"updated_at":1396136290000,"updated_by":1,"published_at":1258494603000,"published_by":1},{"id":102,"uuid":"3501e8a4-7aec-4769-a3be-93520eb65efc","title":"Solar Design Presentation","slug":"solar-design-presentation","markdown":"\n[Solar Design Presentation ](https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&hl=en)\n\n\n","html":"<p><a href=\"https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&amp;hl=en\">Solar Design Presentation </a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258745619000,"created_by":1,"updated_at":1396136335000,"updated_by":1,"published_at":1258745619000,"published_by":1},{"id":103,"uuid":"11803aa9-371c-4826-8673-64fc29053eaa","title":"ICM Final","slug":"icm-final","markdown":"\nI wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[ICM Final](http://vimeo.com/8209038) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>Here is the code for this project\n\n[final](http://zevenwolf.com/blog/icm/final.zip)\n\n\n","html":"<p>I wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/8209038\">ICM Final</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div>Here is the code for this project</p>\n\n<p><a href=\"http://zevenwolf.com/blog/icm/final.zip\">final</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1260917515000,"created_by":1,"updated_at":1396136345000,"updated_by":1,"published_at":1260917515000,"published_by":1},{"id":104,"uuid":"28a300a4-f6ab-437d-aba1-cc08282ff260","title":"obra nueva","slug":"obra-nueva","markdown":"\nslsl\n\n\n","html":"<p>slsl</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1262792503000,"created_by":1,"updated_at":1390233393000,"updated_by":1,"published_at":null,"published_by":1},{"id":105,"uuid":"07a52150-249b-4d66-8d38-e4310877fcd9","title":"Hospitable Room - Assignment 1","slug":"hospitable-room-assignment-1","markdown":"\nSo tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,\n\n[![](http://zevenwolf.com/blog/uploads/assignment1.jpg \"assignment1\")](http://zevenwolf.com/blog/uploads/assignment1.jpg)\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key == ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>\n","html":"<p>So tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\" alt=\"\" title=\"assignment1\" /></a></p>\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key <mark> ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key <mark> ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1264511262000,"created_by":1,"updated_at":1396136368000,"updated_by":1,"published_at":1264511262000,"published_by":1},{"id":106,"uuid":"0d9cb609-5ae5-41c0-a21b-8915b4eefb2d","title":"Hospitable Room: Initial Pitch","slug":"hospitable-room-initial-pitch","markdown":"\nKatherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.\n\n[http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/](http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/ \"Initial Idea\")\n\n\n","html":"<p>Katherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/\" title=\"Initial Idea\">http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265116569000,"created_by":1,"updated_at":1396136403000,"updated_by":1,"published_at":null,"published_by":1},{"id":107,"uuid":"e24cc12c-9904-4456-96d0-064ddba08364","title":"Wildlife/People Observation","slug":"wildlifepeople-observation","markdown":"\nWe went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected\n\n[Monkey observation](http://zevenwolf.com/blog/uploads/Monkey-observation.xls)\n\n\n","html":"<p>We went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/Monkey-observation.xls\">Monkey observation</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265208015000,"created_by":1,"updated_at":1396136421000,"updated_by":1,"published_at":null,"published_by":1},{"id":108,"uuid":"a22b8842-9328-4f3d-aca1-3c941061118a","title":"Pan-Ball Flute","slug":"pan-ball-flute","markdown":"\nThe Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers\n\n[![](http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg \"piezogenerator\")](http://zevenwolf.com/blog/uploads/piezogenerator.jpg)\n\n\n","html":"<p>The Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/piezogenerator.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg\" alt=\"\" title=\"piezogenerator\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265243492000,"created_by":1,"updated_at":1396136451000,"updated_by":1,"published_at":1265243492000,"published_by":1},{"id":109,"uuid":"daa37d91-b36b-4af0-a5f3-b37446cdd936","title":"Reading and Writing Text Homework 1","slug":"reading-and-writing-text-homework-1","markdown":"\nFor this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.\n\nI started with\n\n*cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt*\n\nThis is how I combined multiple files.\n\nI ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5\n\n**This is the code for hwfeb05.py this code divides the poem in half**  \n [cc lang=\"python\"]  \n import sys\n\ncount = 0\n\nfor line in sys.stdin:\n\nline = line.strip()\n\nif count % 2 == 0:\n\noutput = line\n\nelse:\n\noutput = “”\n\nprint output\n\ncount += 1  \n [/cc]  \n Then I ran python Â hwfeb05replace.py< charles5.txt>charlesreplace.txt\n\n**Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.**  \n [cc lang=\"python\"]]  \n import sys\n\nfor line in sys.stdin:  \n line = line.strip()  \n line = line.replace(‘death’, ‘pandas’)  \n line = line.replace(‘corpses’, ‘puppies’)  \n line = line.replace(‘corpse’, ‘puppy’)  \n line = line.replace(‘drink’, ‘hug’)  \n line = line.replace(‘dark’, ‘puppy-eyed’)  \n line = line.replace(‘drinks’, ‘hugs’)  \n line = line.replace(‘ladies’, ‘unicorns’)  \n line = line.replace(‘lady’, ‘unicorn’)  \n line = line.replace(‘crime’,'party’)  \n line = line.replace(‘enemy’,'buddy’)  \n line = line.replace(‘enemies’,'buddies’)  \n line = line.replace(‘bar’,'playground’)  \n line = line.replace(‘alone’,'holding hands’)  \n line = line.replace(‘body’,'kitten’)  \n line = line.replace(‘bodies’,'kittens’)  \n print line\n\n[/cc]\n\nFinally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt\n\n[cc lang=\"python\"]  \n import sys  \n for line in sys.stdin:  \n line = line.strip()  \n offset = line.find(“pandas”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppies”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy”)  \n if offset != -1:  \n print line  \n offset = line.find(“hug”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy-eyed”)  \n if offset != -1:  \n print line  \n offset = line.find(“hugs”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorns”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorn”)  \n if offset != -1:  \n print line  \n offset = line.find(“party”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddy”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddies”)  \n if offset != -1:  \n print line  \n offset = line.find(“playground”)  \n if offset != -1:  \n print line  \n offset = line.find(“holding hands”)  \n if offset != -1:  \n print line  \n offset = line.find(“kitten”)  \n if offset != -1:  \n print line  \n offset = line.find(“kittens”)  \n if offset != -1:  \n print line\n\n[/cc]  \n That gave me this output:\n\n<div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines\n\n\n","html":"<p>For this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.</p>\n\n<p>I started with</p>\n\n<p><em>cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt</em></p>\n\n<p>This is how I combined multiple files.</p>\n\n<p>I ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5</p>\n\n<p><strong>This is the code for hwfeb05.py this code divides the poem in half</strong> <br />\n [cc lang=\"python\"] <br />\n import sys</p>\n\n<p>count = 0</p>\n\n<p>for line in sys.stdin:</p>\n\n<p>line = line.strip()</p>\n\n<p>if count % 2 == 0:</p>\n\n<p>output = line</p>\n\n<p>else:</p>\n\n<p>output = “”</p>\n\n<p>print output</p>\n\n<p>count += 1 <br />\n [/cc] <br />\n Then I ran python Â hwfeb05replace.py&lt; charles5.txt>charlesreplace.txt</p>\n\n<p><strong>Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.</strong> <br />\n [cc lang=\"python\"]] <br />\n import sys</p>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line = line.replace(‘death’, ‘pandas’) <br />\n line = line.replace(‘corpses’, ‘puppies’) <br />\n line = line.replace(‘corpse’, ‘puppy’) <br />\n line = line.replace(‘drink’, ‘hug’) <br />\n line = line.replace(‘dark’, ‘puppy-eyed’) <br />\n line = line.replace(‘drinks’, ‘hugs’) <br />\n line = line.replace(‘ladies’, ‘unicorns’) <br />\n line = line.replace(‘lady’, ‘unicorn’) <br />\n line = line.replace(‘crime’,'party’) <br />\n line = line.replace(‘enemy’,'buddy’) <br />\n line = line.replace(‘enemies’,'buddies’) <br />\n line = line.replace(‘bar’,'playground’) <br />\n line = line.replace(‘alone’,'holding hands’) <br />\n line = line.replace(‘body’,'kitten’) <br />\n line = line.replace(‘bodies’,'kittens’) <br />\n print line</p>\n\n<p>[/cc]</p>\n\n<p>Finally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n for line in sys.stdin: <br />\n line = line.strip() <br />\n offset = line.find(“pandas”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hug”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy-eyed”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hugs”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorns”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorn”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“party”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“playground”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“holding hands”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kitten”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kittens”) <br />\n if offset != -1: <br />\n print line</p>\n\n<p>[/cc] <br />\n That gave me this output:</p>\n\n<p><div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265385956000,"created_by":1,"updated_at":1396136480000,"updated_by":1,"published_at":1265385956000,"published_by":1},{"id":110,"uuid":"87b99282-0b00-480d-9a5b-632e61ecf2aa","title":"Wildlife Tracking: RFID research","slug":"wildlife-tracking-rfid-research","markdown":"\nSo I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.\n\n**Active vs Passive**\n\n****Active  \n Power: Battery powered, average 7000 hrs **depending onÂ receiver*  \n Signal Strength needed: Low Signal  \n Range: up to 100m  \n Data Storage: 128kb read/write search and access to data\n\nPassive  \n Power: comes from RF reader  \n Signal Strength needed: High signal\n\nRange: 3-5m or less\n\nData Storage: 128 bytes of read/write\n\nDepending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in\n\nThis link is a diy aduino based RFID reader\n\n[http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/](http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/)\n\nThis is a couple of data sheets from different companies\n\n[http://www.ananiahelectronics.com/RF40315T-s.htm](http://www.ananiahelectronics.com/RF40315T-s.htm)\n\n[http://www.activewaveinc.com/products_datasheets.php](http://www.activewaveinc.com/products_datasheets.php)\n\n[http://cliste.sailwhatcom.com/catalog/1](http://cliste.sailwhatcom.com/catalog/1)\n\nThis link has standard pricing options\n\n[http://www.rfidexchange.com/purchasing.aspx](http://www.rfidexchange.com/purchasing.aspx)\n\nTracking Cows\n\n[http://www.zigbeef.com/index.html](http://www.zigbeef.com/index.html)\n\n\n","html":"<p>So I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.</p>\n\n<p><strong>Active vs Passive</strong></p>\n\n<p><em>*</em><em>Active <br />\n Power: Battery powered, average 7000 hrs *</em>depending onÂ receiver* <br />\n Signal Strength needed: Low Signal <br />\n Range: up to 100m <br />\n Data Storage: 128kb read/write search and access to data</p>\n\n<p>Passive <br />\n Power: comes from RF reader <br />\n Signal Strength needed: High signal</p>\n\n<p>Range: 3-5m or less</p>\n\n<p>Data Storage: 128 bytes of read/write</p>\n\n<p>Depending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in</p>\n\n<p>This link is a diy aduino based RFID reader</p>\n\n<p><a href=\"http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/\">http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/</a></p>\n\n<p>This is a couple of data sheets from different companies</p>\n\n<p><a href=\"http://www.ananiahelectronics.com/RF40315T-s.htm\">http://www.ananiahelectronics.com/RF40315T-s.htm</a></p>\n\n<p><a href=\"http://www.activewaveinc.com/products_datasheets.php\">http://www.activewaveinc.com/products_datasheets.php</a></p>\n\n<p><a href=\"http://cliste.sailwhatcom.com/catalog/1\">http://cliste.sailwhatcom.com/catalog/1</a></p>\n\n<p>This link has standard pricing options</p>\n\n<p><a href=\"http://www.rfidexchange.com/purchasing.aspx\">http://www.rfidexchange.com/purchasing.aspx</a></p>\n\n<p>Tracking Cows</p>\n\n<p><a href=\"http://www.zigbeef.com/index.html\">http://www.zigbeef.com/index.html</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265804026000,"created_by":1,"updated_at":1396136511000,"updated_by":1,"published_at":1265804026000,"published_by":1},{"id":111,"uuid":"0c645cf1-0887-4fa7-b459-b603194ea2cb","title":"Solar Presentation","slug":"solar-presentation","markdown":"\n[Solar Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&amp;hl=en\">Solar Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266487280000,"created_by":1,"updated_at":1396136650000,"updated_by":1,"published_at":1266487280000,"published_by":1},{"id":112,"uuid":"c32c1805-3b2c-40ae-9508-2fc7c2524b17","title":"Python HW Feb 19 Reddit Headlines","slug":"python-hw-feb-19-reddit-headlines","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266596891000,"created_by":1,"updated_at":1396136770000,"updated_by":1,"published_at":null,"published_by":1},{"id":113,"uuid":"6a531e33-b6f6-4cea-9124-ab25660e449f","title":"ASCII Art Presentation","slug":"ascii-art-presentation","markdown":"\n[ASCII Art Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&amp;hl=en\">ASCII Art Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267134108000,"created_by":1,"updated_at":1396136785000,"updated_by":1,"published_at":1267134108000,"published_by":1},{"id":114,"uuid":"a472b18c-4fe8-473e-a7d9-dff58bcd802c","title":"Pan Ball Flute Update","slug":"pan-ball-flute-update","markdown":"\nFor the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet.  \n[![](http://zevenwolf.com/blog/uploads/panball1-168x300.jpg \"panball1\")](http://zevenwolf.com/blog/uploads/panball1.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[Shaker](http://vimeo.com/9761290) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>[![](http://zevenwolf.com/blog/uploads/panball2-168x300.jpg \"panball2\")](http://zevenwolf.com/blog/uploads/panball2.jpg)  \n[![](http://zevenwolf.com/blog/uploads/panball3-189x300.jpg \"panball3\")](http://zevenwolf.com/blog/uploads/panball3.jpg)\n\nThese are just some basic numbers on the solo shaker  \n The Open Circuit Voltage = 10v  \n The Test Capcitor = 1 Farad  \n Start and End Voltage = 100mV-3V  \n Change in Joules = 4.5J  \n*E = 1/2 C * V 2  \n*  \n Time to Charge = 20 sec  \n Observed Power (watts) = .225 watts  \n*Energy / Time  \n*\n\n\n","html":"<p>For the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball1-168x300.jpg\" alt=\"\" title=\"panball1\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/9761290\">Shaker</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div><a href=\"http://zevenwolf.com/blog/uploads/panball2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball2-168x300.jpg\" alt=\"\" title=\"panball2\" /></a> <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball3-189x300.jpg\" alt=\"\" title=\"panball3\" /></a></p>\n\n<p>These are just some basic numbers on the solo shaker <br />\n The Open Circuit Voltage = 10v <br />\n The Test Capcitor = 1 Farad <br />\n Start and End Voltage = 100mV-3V <br />\n Change in Joules = 4.5J <br />\n*E = 1/2 C * V 2 <br />\n* <br />\n Time to Charge = 20 sec <br />\n Observed Power (watts) = .225 watts <br />\n*Energy / Time <br />\n*</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267195457000,"created_by":1,"updated_at":1396136802000,"updated_by":1,"published_at":1267195457000,"published_by":1},{"id":115,"uuid":"ccda6c64-60af-4ab8-b356-5c57ba10cc99","title":"RWET Midterm: SOS Poem","slug":"rwet-midterm-sos-poem","markdown":"\nThe SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.\n\nThe source text is a list of congress people and the Obama Health Care bill\n\nLee and Jos gradually clarifying gradually Lee and Jos  \n Ken and Ron currently conducting currently Ken and Ron  \n Dan and Max seriously increased seriously Dan and Max  \n Ike and Joe primarily empowering primarily Ike and Joe\n\nFor and Fee gradually clarifying gradually For and Fee  \n All and One currently conducting currently All and One  \n But and Tax seriously increased seriously But and Tax  \n Act and Key primarily empowering primarily Act and Key\n\n[cc lang=\"python\"]  \n import sys  \n import re  \n congress = set()  \n congressName = list()  \n bill = set()  \n billWords = list()  \n verbs = set()  \n verbsList = list()  \n adverbs = set()  \n adverbsList = list()  \n state = “New”  \n name = ” ”  \n words = ” ”  \n verb = ” ”  \n adverb = ” ”  \n congressCounter = 0  \n verbCounter = 0  \n adverbCounter = 0  \n displayCounter = 0  \n fileObj = open(‘obamacare.txt’)\n\nlines = fileObj.readlines()\n\nfor line in sys.stdin:  \n line.strip()  \n for matching_string in re.findall(r’s[A-Z][a-z][a-z]b’, line):  \n name = matching_string  \n congress.add(name)\n\ncongress.remove(” New”)\n\ncongressCounter = len(congress)  \n for num in range(0,congressCounter):  \n name = congress.pop()  \n name=name[1:]  \n congressName.append(name)\n\nfor words in lines:  \n words.strip()  \n for matching_verb in re.findall(r”bw{7}ed|bw{7}ing”,words):  \n verb = matching_verb  \n verb = verb.lower()  \n verbs.add(verb)\n\nverbCounter = len(verbs)  \n for num in range(0,verbCounter):  \n verb = verbs.pop()  \n verbsList.append(verb)\n\nfor words in lines:  \n words.strip()  \n for matching_adverb in re.findall(r”bw{7}ly”,words):  \n adverb = matching_adverb  \n adverb = adverb.lower()  \n adverbs.add(adverb)\n\nadverbCounter = len(adverbs)  \n for num in range(0,adverbCounter):  \n adverb = adverbs.pop()  \n adverbsList.append(adverb)\n\nif congressCounter < verbCounter and congressCounter < adverbCounter:  \n displayCounter = congressCounter  \n elif verbCounter < congressCounter and verbCounter < adverbCounter:  \n displayCounter = verbCounter  \n elif adverbCounter < verbCounter and adverbCounter < congressCounter:  \n displayCounter = adverbCounter\n\nfor num in range(0,displayCounter,2):  \n #print num  \n if num < displayCounter:  \n nameone = congressName[num]  \n nametwo = congressName[num +1]  \n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)\n\n[/cc]\n\n[Congress Text](http://www.zevenwolf.com/blog/rwet/congress.txt)  \n[Obama Care Text](http://www.zevenwolf.com/blog/rwet/obamacare.txt)\n\n\n","html":"<p>The SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.</p>\n\n<p>The source text is a list of congress people and the Obama Health Care bill</p>\n\n<p>Lee and Jos gradually clarifying gradually Lee and Jos <br />\n Ken and Ron currently conducting currently Ken and Ron <br />\n Dan and Max seriously increased seriously Dan and Max <br />\n Ike and Joe primarily empowering primarily Ike and Joe</p>\n\n<p>For and Fee gradually clarifying gradually For and Fee <br />\n All and One currently conducting currently All and One <br />\n But and Tax seriously increased seriously But and Tax <br />\n Act and Key primarily empowering primarily Act and Key</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n import re <br />\n congress = set() <br />\n congressName = list() <br />\n bill = set() <br />\n billWords = list() <br />\n verbs = set() <br />\n verbsList = list() <br />\n adverbs = set() <br />\n adverbsList = list() <br />\n state = “New” <br />\n name = ” ” <br />\n words = ” ” <br />\n verb = ” ” <br />\n adverb = ” ” <br />\n congressCounter = 0 <br />\n verbCounter = 0 <br />\n adverbCounter = 0 <br />\n displayCounter = 0 <br />\n fileObj = open(‘obamacare.txt’)</p>\n\n<p>lines = fileObj.readlines()</p>\n\n<p>for line in sys.stdin: <br />\n line.strip() <br />\n for matching<em>string in re.findall(r’s[A-Z][a-z][a-z]b’, line): <br />\n name = matching</em>string <br />\n congress.add(name)</p>\n\n<p>congress.remove(” New”)</p>\n\n<p>congressCounter = len(congress) <br />\n for num in range(0,congressCounter): <br />\n name = congress.pop() <br />\n name=name[1:] <br />\n congressName.append(name)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>verb in re.findall(r”bw{7}ed|bw{7}ing”,words): <br />\n verb = matching</em>verb <br />\n verb = verb.lower() <br />\n verbs.add(verb)</p>\n\n<p>verbCounter = len(verbs) <br />\n for num in range(0,verbCounter): <br />\n verb = verbs.pop() <br />\n verbsList.append(verb)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>adverb in re.findall(r”bw{7}ly”,words): <br />\n adverb = matching</em>adverb <br />\n adverb = adverb.lower() <br />\n adverbs.add(adverb)</p>\n\n<p>adverbCounter = len(adverbs) <br />\n for num in range(0,adverbCounter): <br />\n adverb = adverbs.pop() <br />\n adverbsList.append(adverb)</p>\n\n<p>if congressCounter &lt; verbCounter and congressCounter &lt; adverbCounter: <br />\n displayCounter = congressCounter <br />\n elif verbCounter &lt; congressCounter and verbCounter &lt; adverbCounter: <br />\n displayCounter = verbCounter <br />\n elif adverbCounter &lt; verbCounter and adverbCounter &lt; congressCounter: <br />\n displayCounter = adverbCounter</p>\n\n<p>for num in range(0,displayCounter,2): <br />\n #print num <br />\n if num &lt; displayCounter: <br />\n nameone = congressName[num] <br />\n nametwo = congressName[num +1] <br />\n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)</p>\n\n<p>[/cc]</p>\n\n<p><a href=\"http://www.zevenwolf.com/blog/rwet/congress.txt\">Congress Text</a> <br />\n<a href=\"http://www.zevenwolf.com/blog/rwet/obamacare.txt\">Obama Care Text</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1268394198000,"created_by":1,"updated_at":1396136835000,"updated_by":1,"published_at":1268394198000,"published_by":1},{"id":116,"uuid":"9e73cbf9-e6de-4a5b-912b-8fceee634b4c","title":"RF Radios","slug":"rf-radios","markdown":"\nMy group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: [transmitter ](http://www.sparkfun.com/commerce/product_info.php?products_id=8946)and [receiver](http://www.sparkfun.com/commerce/product_info.php?products_id=8949).\n\nOne of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.\n\n[![](http://zevenwolf.com/blog/uploads/reciever.jpg \"reciever\")](http://zevenwolf.com/blog/uploads/reciever.jpg)\n\nThe receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.\n\n[![](http://zevenwolf.com/blog/uploads/transmitter.jpg \"transmitter\")](http://zevenwolf.com/blog/uploads/transmitter.jpg)\n\n\n","html":"<p>My group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8946\">transmitter </a>and <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8949\">receiver</a>.</p>\n\n<p>One of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/reciever.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/reciever.jpg\" alt=\"\" title=\"reciever\" /></a></p>\n\n<p>The receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\" alt=\"\" title=\"transmitter\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269441969000,"created_by":1,"updated_at":1396136866000,"updated_by":1,"published_at":1269441969000,"published_by":1},{"id":117,"uuid":"55047738-be13-433d-9e1d-8d7a46489df6","title":"Charlotte's Web","slug":"charlottes-web","markdown":"\nZeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.\n\nWe are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts.  \n[![](http://zevenwolf.com/blog/uploads/audiocircuit.jpg \"audiocircuit\")](http://zevenwolf.com/blog/uploads/audiocircuit.jpg)\n\nThe Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit.  \n[![](http://zevenwolf.com/blog/uploads/miller-engine.jpg \"miller-engine\")](http://zevenwolf.com/blog/uploads/miller-engine.jpg)\n\nRight now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.\n\n\n","html":"<p>Zeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.</p>\n\n<p>We are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\" alt=\"\" title=\"audiocircuit\" /></a></p>\n\n<p>The Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\" alt=\"\" title=\"miller-engine\" /></a></p>\n\n<p>Right now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269613841000,"created_by":1,"updated_at":1396136904000,"updated_by":1,"published_at":1269613841000,"published_by":1},{"id":118,"uuid":"49b6ef4b-6fa2-4058-b41d-91f9d0ad955a","title":"Power Consumption Calculation for xbee 900","slug":"power-consumption-calculation-for-xbee-900","markdown":"\nFirst we calculate our [battery ](http://www.sparkfun.com/commerce/product_info.php?products_id=8818)  \n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.\n\nTo calculate the Watt hours = voltage * Amps  \n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours\n\nNow we Calculate the xbee 900 which run at 3.3v:  \n The xbee has 3 modes we have to deal with their consumption:  \n sleep mode: 60 micro amp hours  \n transmit mode: 210,000 micro amp hours  \n receive mode: 80,000 micro amp hours\n\nnext is calculating the time ratio  \n We are sending and receiving 100 times a day  \n each takes 1 second  \n thats 200 seconds everyday 73,000 seconds  \n 31,556,926 seconds in one year  \n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year\n\nWe have combined the 2 events so we can average:  \n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps\n\nNow that we have a time ratio we calculate  \n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours  \n The right side of our calculation gives use Watts and the left gives us Watt hours\n\n891 watts + 197 watts = 740,000 micro amp hours  \n 1088 watts = 740,000 micro amp hours  \n 740,000/1088 = 680 hours or 35 days on one battery  \n we need this to last at least a year and a half  \n That will be 27 batteries but we’ll need closer to 36 batteries to be safe\n\nThe most important number is that for a year and a half we need more then 3600 milliamps at 3.3v\n\n\n","html":"<p>First we calculate our <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8818\">battery </a> <br />\n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.</p>\n\n<p>To calculate the Watt hours = voltage * Amps <br />\n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours</p>\n\n<p>Now we Calculate the xbee 900 which run at 3.3v: <br />\n The xbee has 3 modes we have to deal with their consumption: <br />\n sleep mode: 60 micro amp hours <br />\n transmit mode: 210,000 micro amp hours <br />\n receive mode: 80,000 micro amp hours</p>\n\n<p>next is calculating the time ratio <br />\n We are sending and receiving 100 times a day <br />\n each takes 1 second <br />\n thats 200 seconds everyday 73,000 seconds <br />\n 31,556,926 seconds in one year <br />\n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year</p>\n\n<p>We have combined the 2 events so we can average: <br />\n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps</p>\n\n<p>Now that we have a time ratio we calculate <br />\n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours <br />\n The right side of our calculation gives use Watts and the left gives us Watt hours</p>\n\n<p>891 watts + 197 watts = 740,000 micro amp hours <br />\n 1088 watts = 740,000 micro amp hours <br />\n 740,000/1088 = 680 hours or 35 days on one battery <br />\n we need this to last at least a year and a half <br />\n That will be 27 batteries but we’ll need closer to 36 batteries to be safe</p>\n\n<p>The most important number is that for a year and a half we need more then 3600 milliamps at 3.3v</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270646103000,"created_by":1,"updated_at":1396136938000,"updated_by":1,"published_at":1270646103000,"published_by":1},{"id":119,"uuid":"2d5db65b-c8c1-4821-ae50-d5db4e0ed3da","title":"Reddit 5-7-5 poems","slug":"reddit-5-7-5-poems","markdown":"\nThis python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem\n\nHere YEARS Here 2 undercover  \n for goes YEARS report. Here is author  \n YEARS evangelical Atheist is church.\n\nconsider understands and seeking understands  \n service host; want understands want no you  \n assuming fucking one you’re Lunarpages.\n\nWas Laid Off Obama? Off  \n Obama? for Obama? Off Employee Was Voting  \n Voting for Was Off Voting\n\nCool infographic infographic Nintendo Nintendo  \n infographic infographic infographic Nintendo Nintendo Cool infographic  \n infographic Cool Cool Nintendo Cool\n\n[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import random\n\ndef haiku(words):\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList1.append(haiku)\n\n print ” “.join(haikuList1)\n\n for i in range(0,7):  \n haiku = random.choice(words)  \n haikuList2.append(haiku)\n\n print ” “.join(haikuList2)\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList3.append(haiku)\n\n print ” “.join(haikuList3)\n\nurl = “http://www.reddit.com/r/reddit.com/”  \n titlesList = list()  \n num = int()  \n haikuList1 = list()  \n haikuList2 = list()  \n haikuList3 = list()\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\nfor tag in soup.findAll(“p”, {“class” : “title”} ):  \n a = tag.findAll(“a”, {“class” : “title “} )  \n titles = a[0].string.encode(‘ascii’, ‘ignore’)  \n titles = titles.strip()  \n titles = titles.split(” “)  \n titlesList.append(titles)\n\nnum = random.randrange(0,len(titlesList))  \n words = titlesList[num]  \n haiku(words)\n\n[/cc]\n\n\n","html":"<p>This python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem</p>\n\n<p>Here YEARS Here 2 undercover <br />\n for goes YEARS report. Here is author <br />\n YEARS evangelical Atheist is church.</p>\n\n<p>consider understands and seeking understands <br />\n service host; want understands want no you <br />\n assuming fucking one you’re Lunarpages.</p>\n\n<p>Was Laid Off Obama? Off <br />\n Obama? for Obama? Off Employee Was Voting <br />\n Voting for Was Off Voting</p>\n\n<p>Cool infographic infographic Nintendo Nintendo <br />\n infographic infographic infographic Nintendo Nintendo Cool infographic <br />\n infographic Cool Cool Nintendo Cool</p>\n\n<p>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import random</p>\n\n<p>def haiku(words):</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList1.append(haiku)</p>\n\n<p>print ” “.join(haikuList1)</p>\n\n<p>for i in range(0,7): <br />\n haiku = random.choice(words) <br />\n haikuList2.append(haiku)</p>\n\n<p>print ” “.join(haikuList2)</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList3.append(haiku)</p>\n\n<p>print ” “.join(haikuList3)</p>\n\n<p>url = “<a href=\"http://www.reddit.com/r/reddit.com/”\">http://www.reddit.com/r/reddit.com/”</a> <br />\n titlesList = list() <br />\n num = int() <br />\n haikuList1 = list() <br />\n haikuList2 = list() <br />\n haikuList3 = list()</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>for tag in soup.findAll(“p”, {“class” : “title”} ): <br />\n a = tag.findAll(“a”, {“class” : “title “} ) <br />\n titles = a[0].string.encode(‘ascii’, ‘ignore’) <br />\n titles = titles.strip() <br />\n titles = titles.split(” “) <br />\n titlesList.append(titles)</p>\n\n<p>num = random.randrange(0,len(titlesList)) <br />\n words = titlesList[num] <br />\n haiku(words)</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270817115000,"created_by":1,"updated_at":1396137354000,"updated_by":1,"published_at":1270817115000,"published_by":1},{"id":120,"uuid":"2d71e7f2-7a15-4f3d-aac3-f1b4c7be978e","title":"Collager","slug":"collager","markdown":"\nCollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.\n\n[![](http://zevenwolf.com/blog/uploads/mattandzeven.jpg \"mattandzeven\")](http://zevenwolf.com/blog/uploads/mattandzeven.jpg)\n\nThe system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.\n\n[![](http://zevenwolf.com/blog/uploads/collager-300x225.jpg \"collager\")](http://zevenwolf.com/blog/uploads/collager.jpg)\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>\n","html":"<p>CollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\" alt=\"\" title=\"mattandzeven\" /></a></p>\n\n<p>The system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/collager.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/collager-300x225.jpg\" alt=\"\" title=\"collager\" /></a></p>\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1271589705000,"created_by":1,"updated_at":1396137285000,"updated_by":1,"published_at":1271589705000,"published_by":1},{"id":121,"uuid":"4381c537-e756-4106-9bca-2f3a51e9cef9","title":"LumiLife","slug":"lumilife","markdown":"\nLumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.\n\n[![](http://zevenwolf.com/blog/uploads/lumilife.jpg \"lumilife\")](http://zevenwolf.com/blog/uploads/lumilife.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[LumiLife](http://vimeo.com/11143650) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the diagram of how it all flows together.\n\n[![](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg \"circuitdiagramsmaller\")](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg)\n\nThe nocturnal circuit is made of a 74AC14\n\n[![](http://zevenwolf.com/blog/uploads/noc.jpg \"noc\")](http://zevenwolf.com/blog/uploads/noc.jpg)\n\nThis is the schematic for the nocturnal circuit from the[ beam wiki site](http://www.beam-wiki.org/wiki/SIMD1).\n\n[![](http://zevenwolf.com/blog/uploads/nocturnal.gif \"nocturnal\")](http://zevenwolf.com/blog/uploads/nocturnal.gif)\n\nThe motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the [beam wiki site.](http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial) The parts include\n\n[74AC14](http://www.beam-wiki.org/wiki/74AC14 \"74AC14\") HexÂ [Schmitt Inverter](http://www.beam-wiki.org/wiki/Schmitt_Inverter \"Schmitt Inverter\") IC (theÂ [MicroCore](http://www.beam-wiki.org/wiki/MicroCore \"MicroCore\") chip).\n\n[74AC240](http://www.beam-wiki.org/wiki/74AC240 \"74AC240\") Octal Buffer / Line Driver with Tri-state Outputs (TheÂ [Motor Driver](http://www.beam-wiki.org/wiki/Motor_Driver \"Motor Driver\")).\n\n.22 uF MonolithicÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Four).\n\n10 uF Monolithic, Electrolytic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Two).\n\n2 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") red-black-green (Four).\n\n4.2 uF Monolithic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (One for the Reversing Circuit).\n\n3 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") orange-black-green (One for the Reversing Circuit).\n\n[1N914](http://www.beam-wiki.org/wiki/1N914 \"1N914\") orÂ [1N4148](http://www.beam-wiki.org/wiki/1N4148 \"1N4148\") Diodes (Two).\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\">[![](http://zevenwolf.com/blog/uploads/Microcore.jpg \"Microcore\")](http://zevenwolf.com/blog/uploads/Microcore.jpg)This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\">[![](http://zevenwolf.com/blog/uploads/walker_driver.jpg \"walker_driver\")](http://zevenwolf.com/blog/uploads/walker_driver.jpg)This is how to wire the 74AC240\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\">[![](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg \"Microcorewalkewithcap\")](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg)The one thing missing from the graphic above is a cap going from pin 20 to pin 1.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\">[![](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg \"Microcore_complete\")](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg)This image shows how to connect the motors and connect the 74AC14 and 74AC240.\n\n</div>![](http://zevenwolf.com/blog/uploads/motor-circuit.jpg \"motor-circuit\")\n\nâ¢Solar Panels  \n â Open circuit:Â 4x 4.5v @ ~20 mA  \n â¢Battery  \n â 3x 1.2v @ 600mAh  \n â¢Motors & LEDs = 3.6 @ 300mAh  \n â 2x Motors  \n â 6x LEDs\n\n\n","html":"<p>LumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\" alt=\"\" title=\"lumilife\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11143650\">LumiLife</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the diagram of how it all flows together.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\" alt=\"\" title=\"circuitdiagramsmaller\" /></a></p>\n\n<p>The nocturnal circuit is made of a 74AC14</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/noc.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/noc.jpg\" alt=\"\" title=\"noc\" /></a></p>\n\n<p>This is the schematic for the nocturnal circuit from the<a href=\"http://www.beam-wiki.org/wiki/SIMD1\"> beam wiki site</a>.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\"><img src=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\" alt=\"\" title=\"nocturnal\" /></a></p>\n\n<p>The motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the <a href=\"http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial\">beam wiki site.</a> The parts include</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC14\" title=\"74AC14\">74AC14</a> HexÂ <a href=\"http://www.beam-wiki.org/wiki/Schmitt_Inverter\" title=\"Schmitt Inverter\">Schmitt Inverter</a> IC (theÂ <a href=\"http://www.beam-wiki.org/wiki/MicroCore\" title=\"MicroCore\">MicroCore</a> chip).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC240\" title=\"74AC240\">74AC240</a> Octal Buffer / Line Driver with Tri-state Outputs (TheÂ <a href=\"http://www.beam-wiki.org/wiki/Motor_Driver\" title=\"Motor Driver\">Motor Driver</a>).</p>\n\n<p>.22 uF MonolithicÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Four).</p>\n\n<p>10 uF Monolithic, Electrolytic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Two).</p>\n\n<p>2 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> red-black-green (Four).</p>\n\n<p>4.2 uF Monolithic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (One for the Reversing Circuit).</p>\n\n<p>3 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> orange-black-green (One for the Reversing Circuit).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/1N914\" title=\"1N914\">1N914</a> orÂ <a href=\"http://www.beam-wiki.org/wiki/1N4148\" title=\"1N4148\">1N4148</a> Diodes (Two).</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\" alt=\"\" title=\"Microcore\" /></a>This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\"><a href=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\" alt=\"\" title=\"walker_driver\" /></a>This is how to wire the 74AC240</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\" alt=\"\" title=\"Microcorewalkewithcap\" /></a>The one thing missing from the graphic above is a cap going from pin 20 to pin 1.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\" alt=\"\" title=\"Microcore_complete\" /></a>This image shows how to connect the motors and connect the 74AC14 and 74AC240.</p>\n\n<p></div><img src=\"http://zevenwolf.com/blog/uploads/motor-circuit.jpg\" alt=\"\" title=\"motor-circuit\" /></p>\n\n<p>â¢Solar Panels <br />\n â Open circuit:Â 4x 4.5v @ ~20 mA <br />\n â¢Battery <br />\n â 3x 1.2v @ 600mAh <br />\n â¢Motors &amp; LEDs = 3.6 @ 300mAh <br />\n â 2x Motors <br />\n â 6x LEDs</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272196657000,"created_by":1,"updated_at":1396137240000,"updated_by":1,"published_at":1272196657000,"published_by":1},{"id":122,"uuid":"582689e9-4911-48f0-ab1a-ff71e7e3a2b4","title":"Nursery Rhyme","slug":"nursery-rhyme","markdown":"\n<div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> \n\n<div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> \n\n<div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> \n\n<div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> \n\n<div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> \n\n<div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> \n\n<div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> \n\n<div></div><div></div><div></div>[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import sys  \n import random\n\nwords = set()  \n wordSet = set()  \n rhyme = dict()  \n rhymeList = list()\n\nurl = “littlemuffet.html”  \n changer = sys.argv[1]  \n name = sys.argv[2]\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\ngenderID1 = “Mr.”  \n genderID2 = “his”\n\n#parses speech  \n for line in sys.stdin:  \n line = line.strip()  \n line_words = line.split(” “)  \n for word in line_words:  \n words.add(word)\n\nfor word in words:  \n wordLength = len(word)  \n if (“.”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“,”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“;”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“?”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“:”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n else:  \n wordSet.add(word)\n\nfor word in wordSet:  \n wordLength = len(word)  \n lastLetter = word[wordLength-2:wordLength]\n\nif lastLetter in rhyme.keys():  \n rhyme[lastLetter].append(word)  \n else:  \n rhyme[lastLetter]=[word]\n\nif “true” in changer:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })\n\nfor i in range(0,len(gender1)):  \n gender1[i].replaceWith(genderID1)  \n for i in range(0,len(gender2)):  \n gender2[i].contents[0].replaceWith(genderID2)  \n else:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n for i in range(0,len(gender1)):  \n origWord = gender1[i].contents[0]  \n gender1[i].replaceWith(origWord)\n\nnamer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ })  \n for i in range(0,len(namer)):  \n namer[i].contents[0].replaceWith(name)\n\n#rhyme 1  \n rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ })  \n baseRhyme1 = str(rhyme1[0].contents[0])  \n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)]  \n rhyme1Search = rhyme[baseRhyme1Last]  \n rhyme1Word = random.choice(rhyme1Search)  \n rhyme1[0].replaceWith(baseRhyme1)  \n rhyme1[1].replaceWith(rhyme1Word)  \n rhyme1[2].replaceWith(baseRhyme1)\n\n#rhyme 1  \n rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ })  \n letters = random.choice(rhyme.keys())  \n randomList = rhyme[letters]  \n rhyme2Word1 = random.choice(randomList)  \n rhyme2Word2 = random.choice(randomList)\n\nrhyme2[0].replaceWith(rhyme2Word1)  \n rhyme2[1].replaceWith(rhyme2Word2)\n\n#rhyme 3  \n rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ })  \n baseRhyme3 = str(rhyme3[0].contents[0])  \n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)]  \n rhyme3Search = rhyme[baseRhyme3Last]  \n rhyme3Word = random.choice(rhyme3Search)  \n rhyme3[0].replaceWith(baseRhyme3)  \n rhyme3[1].replaceWith(rhyme3Word)  \n rhyme3[2].replaceWith(baseRhyme3)\n\nprint soup\n\n[/cc]  \n [cc lang=\"html\"]  \n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span>\n\nEating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span>\n\nAlong came a <span id=\"5\">spider</span>\n\nWho sat down beside <span id=\"4\">her</span>\n\nAnd frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span>\n\n[/cc]\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Political Nursery Rhyme](http://vimeo.com/11550696) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p><div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> </p>\n\n<p><div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> </p>\n\n<p><div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> </p>\n\n<p><div></div><div></div><div></div>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import sys <br />\n import random</p>\n\n<p>words = set() <br />\n wordSet = set() <br />\n rhyme = dict() <br />\n rhymeList = list()</p>\n\n<p>url = “littlemuffet.html” <br />\n changer = sys.argv[1] <br />\n name = sys.argv[2]</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>genderID1 = “Mr.” <br />\n genderID2 = “his”</p>\n\n<h1 id=\"parsesspeech\">parses speech</h1>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line<em>words = line.split(” “) <br />\n for word in line</em>words: <br />\n words.add(word)</p>\n\n<p>for word in words: <br />\n wordLength = len(word) <br />\n if (“.”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“,”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“;”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“?”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“:”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n else: <br />\n wordSet.add(word)</p>\n\n<p>for word in wordSet: <br />\n wordLength = len(word) <br />\n lastLetter = word[wordLength-2:wordLength]</p>\n\n<p>if lastLetter in rhyme.keys(): <br />\n rhyme[lastLetter].append(word) <br />\n else: <br />\n rhyme[lastLetter]=[word]</p>\n\n<p>if “true” in changer: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })</p>\n\n<p>for i in range(0,len(gender1)): <br />\n gender1[i].replaceWith(genderID1) <br />\n for i in range(0,len(gender2)): <br />\n gender2[i].contents[0].replaceWith(genderID2) <br />\n else: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n for i in range(0,len(gender1)): <br />\n origWord = gender1[i].contents[0] <br />\n gender1[i].replaceWith(origWord)</p>\n\n<p>namer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ }) <br />\n for i in range(0,len(namer)): <br />\n namer[i].contents[0].replaceWith(name)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ }) <br />\n baseRhyme1 = str(rhyme1[0].contents[0]) <br />\n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)] <br />\n rhyme1Search = rhyme[baseRhyme1Last] <br />\n rhyme1Word = random.choice(rhyme1Search) <br />\n rhyme1[0].replaceWith(baseRhyme1) <br />\n rhyme1[1].replaceWith(rhyme1Word) <br />\n rhyme1[2].replaceWith(baseRhyme1)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ }) <br />\n letters = random.choice(rhyme.keys()) <br />\n randomList = rhyme[letters] <br />\n rhyme2Word1 = random.choice(randomList) <br />\n rhyme2Word2 = random.choice(randomList)</p>\n\n<p>rhyme2[0].replaceWith(rhyme2Word1) <br />\n rhyme2[1].replaceWith(rhyme2Word2)</p>\n\n<h1 id=\"rhyme3\">rhyme 3</h1>\n\n<p>rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ }) <br />\n baseRhyme3 = str(rhyme3[0].contents[0]) <br />\n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)] <br />\n rhyme3Search = rhyme[baseRhyme3Last] <br />\n rhyme3Word = random.choice(rhyme3Search) <br />\n rhyme3[0].replaceWith(baseRhyme3) <br />\n rhyme3[1].replaceWith(rhyme3Word) <br />\n rhyme3[2].replaceWith(baseRhyme3)</p>\n\n<p>print soup</p>\n\n<p>[/cc] <br />\n [cc lang=\"html\"] <br />\n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span></p>\n\n<p>Eating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span></p>\n\n<p>Along came a <span id=\"5\">spider</span></p>\n\n<p>Who sat down beside <span id=\"4\">her</span></p>\n\n<p>And frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span></p>\n\n<p>[/cc]</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11550696\">Political Nursery Rhyme</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272620955000,"created_by":1,"updated_at":1396137367000,"updated_by":1,"published_at":1272620955000,"published_by":1},{"id":123,"uuid":"2d0b8558-02bd-4eb0-b88d-d96548342a1d","title":"About","slug":"about","markdown":"\nODDGUI blog documents experiments in design, electronics, code, and fabrication by[ Zevensuy Rodriguez](http://www.zevenrodriguez.com).\n\nZevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded [Howlin’ Wolves](http://www.howlinwolves.com) a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.\n\nHe is a part of [Brooklyn Research](http://www.brooklynresearch.org), where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.\n\n\n","html":"<p>ODDGUI blog documents experiments in design, electronics, code, and fabrication by<a href=\"http://www.zevenrodriguez.com\"> Zevensuy Rodriguez</a>.</p>\n\n<p>Zevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded <a href=\"http://www.howlinwolves.com\">Howlin’ Wolves</a> a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.</p>\n\n<p>He is a part of <a href=\"http://www.brooklynresearch.org\">Brooklyn Research</a>, where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1278411804000,"created_by":1,"updated_at":1397059104000,"updated_by":1,"published_at":1278411804000,"published_by":1},{"id":124,"uuid":"20fc44d9-4725-453b-a98d-b7ed6eaff761","title":"Apache 2.2 and mod_wsgi configuration","slug":"apache-2-2-and-mod_wsgi-configuration","markdown":"\nI finally got mod_wsgi to work. mod_wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache\n\nFor information about mod_wsgi and more elaborate explanations on configuration and installation visit http://code.google.com/p/modwsgi/\n\nI am running centos5.4, apache 2.2, and python 2.6.5\n\nFirst create a directory to do the initial download of mod_wsgi’s code\n\ncd into that directory\n\nThen do a wget mod_wsgi’s google code site and find the version you need\n\nThat should look something like this:  \n wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\n\nThis command unpacks the tarball:  \n tar xvfz mod_wsgi-3.3.tar.gz\n\ncd into the unpacked mod_wsgi-3.3 folder\n\ntype: ./configure\n\nonce configured\n\ntype: make\n\ntype: make install\n\nOnce that is done we want to restart the apache server\n\ncd into etc/ from your top most or / directory and\n\ntype: service httpd stop\n\nYou will get and OK if everything is fine\n\ntype: service httpd start\n\nOne way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules\n\nThe most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.\n\nIn CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf\n\ncd into etc/httpd/conf\n\nwhen you type: nano httpd.conf it loads the nano file editor\n\nThe DocumentRoot is where when you visit www.example.com  \n the initial directory that opens when you visit your website\n\nhttpdocs is my root directory. All of my site files are located there\n\nDocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs\n\nApache wants the serverpath of where files like index.html might reside\n\nload module enables mod_wsgi when a person visits the script\n\nThis should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nThis portion of the code tells mod_wsgi that in the python_projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python_projects/  \n there are files that need to run mod_wsgi\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n<directory>  \n Order deny,allow  \n Allow from all  \n</directory>\n\nThe mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:\n\n/var/www/vhosts/zevenwolf.com/python_projects/\n\nBecause the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/\n\nWhen you visit www.zevenwolf.com/python_projects  \n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python_projects\n\nSo once I added the httpdocs it worked. My final apache code for my site looks like this:\n\n<virtualhost>  \n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs  \n ServerName www.zevenwolf.com  \n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com  \n ErrorLog logs/zevenwolf.com-error_log  \n CustomLog logs/zevenwolf.com-access_log common  \n<directory>  \n AllowOverride All  \n</directory>  \n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost>\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n//<directory>  \n Order deny,allow  \n Allow from all  \n //</directory>\n\n//\n\n\n","html":"<p>I finally got mod<em>wsgi to work. mod</em>wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache</p>\n\n<p>For information about mod_wsgi and more elaborate explanations on configuration and installation visit <a href=\"http://code.google.com/p/modwsgi/\">http://code.google.com/p/modwsgi/</a></p>\n\n<p>I am running centos5.4, apache 2.2, and python 2.6.5</p>\n\n<p>First create a directory to do the initial download of mod_wsgi’s code</p>\n\n<p>cd into that directory</p>\n\n<p>Then do a wget mod_wsgi’s google code site and find the version you need</p>\n\n<p>That should look something like this: <br />\n wget <a href=\"http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\">http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz</a></p>\n\n<p>This command unpacks the tarball: <br />\n tar xvfz mod_wsgi-3.3.tar.gz</p>\n\n<p>cd into the unpacked mod_wsgi-3.3 folder</p>\n\n<p>type: ./configure</p>\n\n<p>once configured</p>\n\n<p>type: make</p>\n\n<p>type: make install</p>\n\n<p>Once that is done we want to restart the apache server</p>\n\n<p>cd into etc/ from your top most or / directory and</p>\n\n<p>type: service httpd stop</p>\n\n<p>You will get and OK if everything is fine</p>\n\n<p>type: service httpd start</p>\n\n<p>One way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules</p>\n\n<p>The most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.</p>\n\n<p>In CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf</p>\n\n<p>cd into etc/httpd/conf</p>\n\n<p>when you type: nano httpd.conf it loads the nano file editor</p>\n\n<p>The DocumentRoot is where when you visit www.example.com <br />\n the initial directory that opens when you visit your website</p>\n\n<p>httpdocs is my root directory. All of my site files are located there</p>\n\n<p>DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs</p>\n\n<p>Apache wants the serverpath of where files like index.html might reside</p>\n\n<p>load module enables mod_wsgi when a person visits the script</p>\n\n<p>This should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file</p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>This portion of the code tells mod<em>wsgi that in the python</em>projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python<em>projects/ <br />\n there are files that need to run mod</em>wsgi</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p><directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n</directory></p>\n\n<p>The mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:</p>\n\n<p>/var/www/vhosts/zevenwolf.com/python_projects/</p>\n\n<p>Because the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/</p>\n\n<p>When you visit www.zevenwolf.com/python<em>projects <br />\n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects</p>\n\n<p>So once I added the httpdocs it worked. My final apache code for my site looks like this:</p>\n\n<p><virtualhost> <br />\n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs <br />\n ServerName www.zevenwolf.com <br />\n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com <br />\n ErrorLog logs/zevenwolf.com-error<em>log <br />\n CustomLog logs/zevenwolf.com-access</em>log common <br />\n<directory> <br />\n AllowOverride All <br />\n</directory> <br />\n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost></p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p>//<directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n //</directory></p>\n\n<p>//</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1282678467000,"created_by":1,"updated_at":1396137149000,"updated_by":1,"published_at":1282678467000,"published_by":1},{"id":125,"uuid":"14db75d4-e190-4704-a7fb-d5369c832a31","title":"HungryTime","slug":"hungrytime","markdown":"\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span>\n\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span>\n\n\n","html":"<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span></p>\n\n<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1284299556000,"created_by":1,"updated_at":1396137079000,"updated_by":1,"published_at":1284299556000,"published_by":1},{"id":126,"uuid":"ac806ed7-74de-4f1e-b263-87661143cdc6","title":"istheflooropen","slug":"istheflooropen","markdown":"\nistheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks.  \n [cc lang=\"php\"]\n\n $mySql = null;  \n $phone = $_GET['phone'];  \n function sqlConnect()  \n {  \n # Configuration Variables  \n $hostname = “localhost”;  \n $dbname = “*****”;  \n $username = “*****”;  \n $password = “*****”;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());  \n mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;  \n }  \n function sqlQuery($query){  \n global $mySql;  \n $data = null;  \n $result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returned  \n if (sizeof($result) > 0){  \n $num_fields = mysql_num_fields($result);  \n $row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);  \n $data[$row_cnt][$field_name] = $row_data[$cnt];  \n }  \n $row_cnt++;  \n }  \n }  \n return $data;  \n }  \n // set the default timezone to use. Available since PHP 5.1  \n date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);  \n $dayOfWeek = date(“l”);  \n $time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;  \n $insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());  \n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;  \n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;  \n $data = sqlQuery($output);  \n $day = NULL;  \n $phoneNumber = $data[0]['phone'];  \n $outputdayOfWeek = $data[0]['dayOfWeek'];  \n $outputTime = $data[0]['time'];  \n $stringStart = 0;  \n $stringEnd = 2;  \n $tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;  \n //echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Monday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Tuesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Thursday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Friday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n ?>  \n $mySql = null;$phone = $_GET['phone'];  \n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;}  \n function sqlQuery($query){global $mySql;$data = null;$result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num_fields = mysql_num_fields($result);$row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);$data[$row_cnt][$field_name] = $row_data[$cnt];}  \n $row_cnt++;}}return $data;}\n\n// set the default timezone to use. Available since PHP 5.1date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output);  \n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;\n\n$tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;//echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Monday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Tuesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Thursday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Friday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}\n\n?>\n\n[/cc]\n\n\n","html":"<p>istheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks. <br />\n [cc lang=\"php\"]</p>\n\n<p>$mySql = null; <br />\n $phone = $<em>GET['phone']; <br />\n function sqlConnect() <br />\n { <br />\n # Configuration Variables <br />\n $hostname = “localhost”; <br />\n $dbname = “<strong>*</strong>”; <br />\n $username = “<strong>*</strong>”; <br />\n $password = “<strong>*</strong>”; <br />\n $mySql = mysql</em>connect($hostname, $username, $password) or die (mysql<em>error()); <br />\n mysql</em>select<em>db($dbname, $mySql) or die(mysql</em>error()); <br />\n return $mySql; <br />\n } <br />\n function sqlQuery($query){ <br />\n global $mySql; <br />\n $data = null; <br />\n $result = mysql<em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returned <br />\n if (sizeof($result) > 0){ <br />\n $num</em>fields = mysql<em>num</em>fields($result); <br />\n $row<em>cnt = 0; <br />\n while ($row</em>data = mysql<em>fetch</em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num<em>fields; $cnt++){ <br />\n $field</em>name = mysql<em>field</em>name($result, $cnt); <br />\n $data[$row<em>cnt][$field</em>name] = $row<em>data[$cnt]; <br />\n } <br />\n $row</em>cnt++; <br />\n } <br />\n } <br />\n return $data; <br />\n } <br />\n // set the default timezone to use. Available since PHP 5.1 <br />\n date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”); <br />\n $dayOfWeek = date(“l”); <br />\n $time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”; <br />\n $insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql<em>error()); <br />\n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″; <br />\n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”; <br />\n $data = sqlQuery($output); <br />\n $day = NULL; <br />\n $phoneNumber = $data[0]['phone']; <br />\n $outputdayOfWeek = $data[0]['dayOfWeek']; <br />\n $outputTime = $data[0]['time']; <br />\n $stringStart = 0; <br />\n $stringEnd = 2; <br />\n $tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString; <br />\n //echo($timeInt); <br />\n if($outputdayOfWeek <mark> ‘Sunday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Monday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Tuesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Wednesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Thursday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Friday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n ?> <br />\n $mySql = null;$phone = $</em>GET['phone']; <br />\n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″; <br />\n $mySql = mysql<em>connect($hostname, $username, $password) or die (mysql</em>error());mysql<em>select</em>db($dbname, $mySql) or die(mysql<em>error()); <br />\n return $mySql;} <br />\n function sqlQuery($query){global $mySql;$data = null;$result = mysql</em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num<em>fields = mysql</em>num<em>fields($result);$row</em>cnt = 0; <br />\n while ($row<em>data = mysql</em>fetch<em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num</em>fields; $cnt++){ <br />\n $field<em>name = mysql</em>field<em>name($result, $cnt);$data[$row</em>cnt][$field<em>name] = $row</em>data[$cnt];} <br />\n $row_cnt++;}}return $data;}</p>\n\n<p>// set the default timezone to use. Available since PHP 5.1date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output); <br />\n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;</p>\n\n<p>$tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString;//echo($timeInt); <br />\n if($outputdayOfWeek </mark> ‘Sunday’){if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek <mark> ‘Monday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Tuesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);} <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Wednesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Thursday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek <mark> ‘Friday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek </mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}</p>\n\n<p>?></p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285025958000,"created_by":1,"updated_at":1396137059000,"updated_by":1,"published_at":1285025958000,"published_by":1},{"id":127,"uuid":"f77dbed2-56d5-4688-9600-82d34943332a","title":"Atari Punk Instructable","slug":"atari-punk-instructable","markdown":"\n[![Atari Punk Instructable](http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg)](http://www.flickr.com/photos/zevenrodriguez/5025639535/ \"Atari Punk Instructable by zevenwolf, on Flickr\")\n\nFor Design for Greenfab we had to go through a tutorial and critique it. I did theÂ [Atari Punk Circuit](http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/ \"Atari Punk Circuit\"). Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.\n\nThe big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5025639535/\" title=\"Atari Punk Instructable by zevenwolf, on Flickr\"><img src=\"http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg\" alt=\"Atari Punk Instructable\" title=\"\" /></a></p>\n\n<p>For Design for Greenfab we had to go through a tutorial and critique it. I did theÂ <a href=\"http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/\" title=\"Atari Punk Circuit\">Atari Punk Circuit</a>. Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.</p>\n\n<p>The big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285497126000,"created_by":1,"updated_at":1396137379000,"updated_by":1,"published_at":null,"published_by":1},{"id":128,"uuid":"918da664-4af3-41ee-a0fa-cfd6e9462d1c","title":"Sounds of NY","slug":"sounds-of-ny","markdown":"\n[Sounds of NY](http://zevenwolf.com/mobilemedia/soundsofNY/) is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The [parser ](http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip)was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.\n\nThe one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.\n\n[cc lang=\"php\"]\n\n$tempData = $data[0]['sound'];  \n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”;  \n $replacements = ‘/’;  \n echo preg_replace($patterns, $replacements, $tempData);  \n [/cc]\n\n\n","html":"<p><a href=\"http://zevenwolf.com/mobilemedia/soundsofNY/\">Sounds of NY</a> is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The <a href=\"http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip\">parser </a>was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.</p>\n\n<p>The one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.</p>\n\n<p>[cc lang=\"php\"]</p>\n\n<p>$tempData = $data[0]['sound']; <br />\n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”; <br />\n $replacements = ‘/’; <br />\n echo preg_replace($patterns, $replacements, $tempData); <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285634644000,"created_by":1,"updated_at":1396137008000,"updated_by":1,"published_at":1285634644000,"published_by":1},{"id":129,"uuid":"edb8760b-f68e-4f7a-93bf-8520bcde04c5","title":"555 Timer","slug":"555-timer","markdown":"\nAllison and I used this [schematic](http://wild-bohemian.com/electronics/flasher.html) to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.\n\n![](http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\")\n\n[![](http://zevenwolf.com/blog/uploads/555timer.jpg \"555timer\")](http://zevenwolf.com/blog/uploads/555timer.jpg)\n\n\n","html":"<p>Allison and I used this <a href=\"http://wild-bohemian.com/electronics/flasher.html\">schematic</a> to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.</p>\n\n<p><img src=\"http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\"\" alt=\"\" /></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/555timer.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/555timer.jpg\" alt=\"\" title=\"555timer\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286204414000,"created_by":1,"updated_at":1396136981000,"updated_by":1,"published_at":1286204414000,"published_by":1},{"id":130,"uuid":"f6534757-0b60-4c2e-90de-637dbc4c7c18","title":"Traceroute Miami and New York","slug":"traceroute-miami-and-new-york","markdown":"\nFor Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.\n\n[![](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg \"newyorktraceroute\")](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg)\n\n[![](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg \"miamiTraceroute\")](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg)\n\nThis is the site I used to make the map.\n\n[http://www.topwebhosts.org/tools/ip-locator.php](http://www.topwebhosts.org/tools/ip-locator.php)\n\n[cc lang=\"python\"]  \n import re  \n from operator import itemgetter  \n def makeDict(site):  \n superList = list()  \n tempList = list()  \n ip = str()  \n timeList = list()  \n avTime = int()  \n map = dict()  \n textAddress = ‘ ‘  \n siteLister = list()  \n for line in site:  \n line = line.strip()  \n siteLister.append(line)\n\n for i in range(4,len(siteLister)):  \n if i >=4:  \n listSplit = siteLister[i].split(‘ ‘)  \n for num in range(0,len(listSplit)):  \n if ‘ms’ in listSplit[num]:  \n if (‘1:  \n print (w + ” : ” + str(allMap[w]))\n\nbigList = list()  \n bigList1 = list()  \n masterSite = open(‘sites/master.txt’)  \n masterSite1 = open(‘site2/master.txt’)\n\nprint “MIAMI”  \n bigList = makeDict(masterSite)  \n sortIps(bigList)  \n print ” ”  \n print “NEW YORK”  \n bigList1 = makeDict(masterSite1)  \n sortIps(bigList1)\n\n#for ips in bigSetList:  \n # if allMap[ips]>1:  \n # print (ips + ” : ” + str(allMap[ips]))\n\n[/cc]\n\nThis is the output from the parser  \n [cc lang=\"text\"]\n\nMIAMI  \n : 261  \n 65.14.121.204 : 24  \n 12.122.106.94 : 24  \n 12.122.1.45 : 24  \n 192.168.1.254 : 24  \n 12.122.5.142 : 21  \n 12.81.8.24 : 19  \n 65.14.121.181 : 13  \n 68.152.169.161 : 11  \n 12.81.8.98 : 10  \n 12.122.80.185 : 6  \n 12.81.8.9 : 5  \n 74.175.192.182 : 5  \n 74.175.192.190 : 4  \n 74.175.192.186 : 4  \n 12.81.8.73 : 4  \n 199.181.132.250 : 4  \n 12.81.8.17 : 4  \n 74.175.192.178 : 4  \n 12.122.84.21 : 3  \n 12.81.8.71 : 3  \n 12.122.1.174 : 3  \n 12.81.8.15 : 3  \n 74.175.192.166 : 2  \n 67.16.138.214 : 2  \n 74.175.192.202 : 2  \n 64.125.31.54 : 2  \n 12.122.84.113 : 2  \n 205.186.154.181 : 2  \n 69.195.198.147 : 2  \n 192.205.35.90 : 2  \n 64.30.230.20 : 2  \n 152.52.20.247 : 2  \n 12.122.1.5 : 2  \n 209.170.90.66 : 2  \n 12.122.87.61 : 2  \n 12.123.22.25 : 2  \n 64.125.27.61 : 2  \n 12.122.5.185 : 2  \n 64.210.15.78 : 2  \n 12.81.8.13 : 2  \n 12.81.8.19 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 12.81.8.7 : 2  \n 207.97.227.239 : 2  \n 192.205.35.234 : 2  \n 69.63.181.12 : 2  \n 64.124.161.42 : 2  \n 69.60.7.199 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 192.205.37.82 : 2  \n 208.80.152.2 : 2  \n 74.175.192.174 : 2  \n 74.125.67.83 : 2  \n 192.205.35.218 : 2\n\nNEW YORK  \n : 278  \n 173.56.121.1 : 24  \n 192.168.1.1 : 24  \n 130.81.180.4 : 12  \n 130.81.29.238 : 12  \n 130.81.29.236 : 12  \n 130.81.49.94 : 12  \n 152.63.16.185 : 9  \n 152.63.17.21 : 9  \n 4.69.138.254 : 7  \n 152.63.3.118 : 6  \n 4.68.127.21 : 6  \n 4.69.138.222 : 5  \n 4.69.141.21 : 4  \n 152.63.10.25 : 4  \n 199.181.132.250 : 4  \n 4.69.132.89 : 3  \n 4.69.132.65 : 3  \n 152.63.10.29 : 3  \n 152.63.9.249 : 3  \n 4.69.135.185 : 2  \n 69.63.189.16 : 2  \n 173.194.35.83 : 2  \n 152.52.20.247 : 2  \n 4.71.152.22 : 2  \n 69.195.198.147 : 2  \n 4.69.132.61 : 2  \n 12.122.1.209 : 2  \n 4.78.132.98 : 2  \n 4.68.111.137 : 2  \n 4.69.132.53 : 2  \n 205.186.154.181 : 2  \n 4.69.140.190 : 2  \n 152.63.18.73 : 2  \n 152.63.21.133 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 207.97.227.239 : 2  \n 4.68.105.36 : 2  \n 64.30.230.20 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 63.85.36.74 : 2  \n 208.80.152.2 : 2  \n 69.60.7.199 : 2  \n 152.63.1.57 : 2  \n 4.69.141.17 : 2\n\n[/cc]\n\n\n","html":"<p>For Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\" alt=\"\" title=\"newyorktraceroute\" /></a></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\" alt=\"\" title=\"miamiTraceroute\" /></a></p>\n\n<p>This is the site I used to make the map.</p>\n\n<p><a href=\"http://www.topwebhosts.org/tools/ip-locator.php\">http://www.topwebhosts.org/tools/ip-locator.php</a></p>\n\n<p>[cc lang=\"python\"] <br />\n import re <br />\n from operator import itemgetter <br />\n def makeDict(site): <br />\n superList = list() <br />\n tempList = list() <br />\n ip = str() <br />\n timeList = list() <br />\n avTime = int() <br />\n map = dict() <br />\n textAddress = ‘ ‘ <br />\n siteLister = list() <br />\n for line in site: <br />\n line = line.strip() <br />\n siteLister.append(line)</p>\n\n<p>for i in range(4,len(siteLister)): <br />\n if i >=4: <br />\n listSplit = siteLister[i].split(‘ ‘) <br />\n for num in range(0,len(listSplit)): <br />\n if ‘ms’ in listSplit[num]: <br />\n if (‘1: <br />\n print (w + ” : ” + str(allMap[w]))</p>\n\n<p>bigList = list() <br />\n bigList1 = list() <br />\n masterSite = open(‘sites/master.txt’) <br />\n masterSite1 = open(‘site2/master.txt’)</p>\n\n<p>print “MIAMI” <br />\n bigList = makeDict(masterSite) <br />\n sortIps(bigList) <br />\n print ” ” <br />\n print “NEW YORK” <br />\n bigList1 = makeDict(masterSite1) <br />\n sortIps(bigList1)</p>\n\n<h1 id=\"foripsinbigsetlist\">for ips in bigSetList:</h1>\n\n<p># if allMap[ips]>1: <br />\n # print (ips + ” : ” + str(allMap[ips]))</p>\n\n<p>[/cc]</p>\n\n<p>This is the output from the parser <br />\n [cc lang=\"text\"]</p>\n\n<p>MIAMI <br />\n : 261 <br />\n 65.14.121.204 : 24 <br />\n 12.122.106.94 : 24 <br />\n 12.122.1.45 : 24 <br />\n 192.168.1.254 : 24 <br />\n 12.122.5.142 : 21 <br />\n 12.81.8.24 : 19 <br />\n 65.14.121.181 : 13 <br />\n 68.152.169.161 : 11 <br />\n 12.81.8.98 : 10 <br />\n 12.122.80.185 : 6 <br />\n 12.81.8.9 : 5 <br />\n 74.175.192.182 : 5 <br />\n 74.175.192.190 : 4 <br />\n 74.175.192.186 : 4 <br />\n 12.81.8.73 : 4 <br />\n 199.181.132.250 : 4 <br />\n 12.81.8.17 : 4 <br />\n 74.175.192.178 : 4 <br />\n 12.122.84.21 : 3 <br />\n 12.81.8.71 : 3 <br />\n 12.122.1.174 : 3 <br />\n 12.81.8.15 : 3 <br />\n 74.175.192.166 : 2 <br />\n 67.16.138.214 : 2 <br />\n 74.175.192.202 : 2 <br />\n 64.125.31.54 : 2 <br />\n 12.122.84.113 : 2 <br />\n 205.186.154.181 : 2 <br />\n 69.195.198.147 : 2 <br />\n 192.205.35.90 : 2 <br />\n 64.30.230.20 : 2 <br />\n 152.52.20.247 : 2 <br />\n 12.122.1.5 : 2 <br />\n 209.170.90.66 : 2 <br />\n 12.122.87.61 : 2 <br />\n 12.123.22.25 : 2 <br />\n 64.125.27.61 : 2 <br />\n 12.122.5.185 : 2 <br />\n 64.210.15.78 : 2 <br />\n 12.81.8.13 : 2 <br />\n 12.81.8.19 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 12.81.8.7 : 2 <br />\n 207.97.227.239 : 2 <br />\n 192.205.35.234 : 2 <br />\n 69.63.181.12 : 2 <br />\n 64.124.161.42 : 2 <br />\n 69.60.7.199 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 192.205.37.82 : 2 <br />\n 208.80.152.2 : 2 <br />\n 74.175.192.174 : 2 <br />\n 74.125.67.83 : 2 <br />\n 192.205.35.218 : 2</p>\n\n<p>NEW YORK <br />\n : 278 <br />\n 173.56.121.1 : 24 <br />\n 192.168.1.1 : 24 <br />\n 130.81.180.4 : 12 <br />\n 130.81.29.238 : 12 <br />\n 130.81.29.236 : 12 <br />\n 130.81.49.94 : 12 <br />\n 152.63.16.185 : 9 <br />\n 152.63.17.21 : 9 <br />\n 4.69.138.254 : 7 <br />\n 152.63.3.118 : 6 <br />\n 4.68.127.21 : 6 <br />\n 4.69.138.222 : 5 <br />\n 4.69.141.21 : 4 <br />\n 152.63.10.25 : 4 <br />\n 199.181.132.250 : 4 <br />\n 4.69.132.89 : 3 <br />\n 4.69.132.65 : 3 <br />\n 152.63.10.29 : 3 <br />\n 152.63.9.249 : 3 <br />\n 4.69.135.185 : 2 <br />\n 69.63.189.16 : 2 <br />\n 173.194.35.83 : 2 <br />\n 152.52.20.247 : 2 <br />\n 4.71.152.22 : 2 <br />\n 69.195.198.147 : 2 <br />\n 4.69.132.61 : 2 <br />\n 12.122.1.209 : 2 <br />\n 4.78.132.98 : 2 <br />\n 4.68.111.137 : 2 <br />\n 4.69.132.53 : 2 <br />\n 205.186.154.181 : 2 <br />\n 4.69.140.190 : 2 <br />\n 152.63.18.73 : 2 <br />\n 152.63.21.133 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 207.97.227.239 : 2 <br />\n 4.68.105.36 : 2 <br />\n 64.30.230.20 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 63.85.36.74 : 2 <br />\n 208.80.152.2 : 2 <br />\n 69.60.7.199 : 2 <br />\n 152.63.1.57 : 2 <br />\n 4.69.141.17 : 2</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286282218000,"created_by":1,"updated_at":1396136971000,"updated_by":1,"published_at":1286282218000,"published_by":1},{"id":131,"uuid":"84bd5419-c49a-450b-b7af-7bd39a1f1607","title":"Final Project(or) tests","slug":"final-projector-tests","markdown":"\nFor our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.\n\n[![](http://zevenwolf.com/blog/uploads/projectionbox.jpg \"projectionbox\")](http://zevenwolf.com/blog/uploads/projectionbox.jpg)\n\nWe initially tried 3 lights.\n\n[![](http://zevenwolf.com/blog/uploads/justlight.jpg \"justlight\")](http://zevenwolf.com/blog/uploads/justlight.jpg)\n\nWe then used the circle we cut out as a model for our stencil.\n\n[![](http://zevenwolf.com/blog/uploads/stencil.jpg \"stencil\")](http://zevenwolf.com/blog/uploads/stencil.jpg)\n\nWe found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.\n\n[![](http://zevenwolf.com/blog/uploads/7projection.jpg \"7projection\")](http://zevenwolf.com/blog/uploads/7projection.jpg)\n\nWe found some round cardboard tube and found that we can get a longer projection.\n\n[![](http://zevenwolf.com/blog/uploads/tubeprojection.jpg \"tubeprojection\")](http://zevenwolf.com/blog/uploads/tubeprojection.jpg)\n\n\n","html":"<p>For our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\" alt=\"\" title=\"projectionbox\" /></a></p>\n\n<p>We initially tried 3 lights.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/justlight.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/justlight.jpg\" alt=\"\" title=\"justlight\" /></a></p>\n\n<p>We then used the circle we cut out as a model for our stencil.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/stencil.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/stencil.jpg\" alt=\"\" title=\"stencil\" /></a></p>\n\n<p>We found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/7projection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/7projection.jpg\" alt=\"\" title=\"7projection\" /></a></p>\n\n<p>We found some round cardboard tube and found that we can get a longer projection.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\" alt=\"\" title=\"tubeprojection\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287329628000,"created_by":1,"updated_at":1396136954000,"updated_by":1,"published_at":1287329628000,"published_by":1},{"id":132,"uuid":"936d039f-fff5-42ee-bc5f-caa239319278","title":"Exquisite-mobile.com","slug":"exquisite-mobile-com-2","markdown":"\nExquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];\n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )\n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (\nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'\n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )\n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )\n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.\n\n[cc lang=\"php\"]  \n<?php $i=1;\n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n\t//echo $row1[0];\n\t$tableArray[$i] = $row1[0];\n\t//echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload_temp_dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.\n\n[cc lang=\"php\"]  \n if((!empty($_FILES[\"uploaded_file\"])) && ($_FILES['uploaded_file']['error'] == 0)) {  \n //Check if the file is JPEG image and it’s size is less than 350Kb  \n $filename = basename($_FILES['uploaded_file']['name']);  \n $ext = substr($filename, strrpos($filename, ‘.’) + 1);  \n if (($ext == “jpg”) && ($_FILES[\"uploaded_file\"][\"type\"] == “image/jpeg”) &&  \n ($_FILES[\"uploaded_file\"][\"size\"]\n\n\n","html":"<p>Exquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.</p>\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];  \n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )  \n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (  \nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'  \n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )  \n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )  \n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.</p>\n\n[cc lang=\"php\"]  \n<?php $i=1;  \n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    //echo $row1[0];\n    $tableArray[$i] = $row1[0];\n    //echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload<em>temp</em>dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.</p>\n\n<p>[cc lang=\"php\"] <br />\n if((!empty($<em>FILES[\"uploaded</em>file\"])) &amp;&amp; ($<em>FILES['uploaded</em>file']['error'] <mark> 0)) { <br />\n //Check if the file is JPEG image and it’s size is less than 350Kb <br />\n $filename = basename($<em>FILES['uploaded</em>file']['name']); <br />\n $ext = substr($filename, strrpos($filename, ‘.’) + 1); <br />\n if (($ext </mark> “jpg”) &amp;&amp; ($<em>FILES[\"uploaded</em>file\"][\"type\"] == “image/jpeg”) &amp;&amp; <br />\n ($<em>FILES[\"uploaded</em>file\"][\"size\"]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287780547000,"created_by":1,"updated_at":1395799435000,"updated_by":1,"published_at":1287780547000,"published_by":1},{"id":133,"uuid":"98d0ccde-c8a5-478d-8b1b-a8a9c376b5c6","title":"Android GPS Code","slug":"android-gps-code","markdown":"\n[cc lang=\"java\"]\n\nimport android.app.Activity;  \n import android.content.Context;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;\n\n public String lat;  \n public String lon;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n gpsButton.setOnClickListener(this);\n\n }\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);  \n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View arg0) {  \n // TODO Auto-generated method stub\n\n TextView lats = (TextView) this.findViewById(R.id.lat);  \n lats.setText(lat);\n\n TextView lons = (TextView) this.findViewById(R.id.lon);  \n lons.setText(lon);\n\n }  \n }\n\n[/cc]\n\n\n","html":"<p>[cc lang=\"java\"]</p>\n\n<p>import android.app.Activity; <br />\n import android.content.Context; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton;</p>\n\n<p>public String lat; <br />\n public String lon;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n gpsButton.setOnClickListener(this);</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”); <br />\n }</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View arg0) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>TextView lats = (TextView) this.findViewById(R.id.lat); <br />\n lats.setText(lat);</p>\n\n<p>TextView lons = (TextView) this.findViewById(R.id.lon); <br />\n lons.setText(lon);</p>\n\n<p>} <br />\n }</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288050422000,"created_by":1,"updated_at":1395799425000,"updated_by":1,"published_at":1288050422000,"published_by":1},{"id":134,"uuid":"db7d0851-204d-4979-9d01-a6a98b663d63","title":"Connections: Final Project Proposal","slug":"connections-final-project-proposal","markdown":"\nConnections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.\n\n**Goal **  \n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.\n\n[![](http://zevenwolf.com/blog/uploads/com-300x225.jpg \"com\")](http://zevenwolf.com/blog/uploads/com.jpg)\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\nHere is the working display. The selects 2 bottom squares.\n\n**How it works?**  \n The user visits a website. They will be greeted with this application.\n\n[![](http://zevenwolf.com/blog/uploads/screens-1024x380.png \"screens\")](http://zevenwolf.com/blog/uploads/screens.png)\n\nThere they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.\n\n<div style=\"align: center;\">[![connections](http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286117978/ \"connections by zevenwolf, on Flickr\")  \n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.\n\n</div>[![Connections](http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241719596/ \"Connections by zevenwolf, on Flickr\")  \n This the first fitting of the blocks on the foam\n\n[![Connections](http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241125193/ \"Connections by zevenwolf, on Flickr\")  \n Rune making the connections for the LED blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Testing the interfacing between the computer and led blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Running the web app with projection display\n\n[![connections](http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286087468/ \"connections by zevenwolf, on Flickr\")  \n Our most excited user.\n\n**Next Steps**\n\n- Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies\n- Skin the front\n- Create more graphical interaction when particles connect\n\n**Issues**\n\n- We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync\n\n\n","html":"<p>Connections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.</p>\n\n<p><em>*Goal *</em> <br />\n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/com.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/com-300x225.jpg\" alt=\"\" title=\"com\" /></a></p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p>Here is the working display. The selects 2 bottom squares.</p>\n\n<p><strong>How it works?</strong> <br />\n The user visits a website. They will be greeted with this application.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/screens.png\"><img src=\"http://zevenwolf.com/blog/uploads/screens-1024x380.png\" alt=\"\" title=\"screens\" /></a></p>\n\n<p>There they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.</p>\n\n<p><div style=\"align: center;\"><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286117978/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.</p>\n\n<p></div><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241719596/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n This the first fitting of the blocks on the foam</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241125193/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n Rune making the connections for the LED blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Testing the interfacing between the computer and led blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Running the web app with projection display</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286087468/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Our most excited user.</p>\n\n<p><strong>Next Steps</strong></p>\n\n<ul>\n<li>Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies</li>\n<li>Skin the front</li>\n<li>Create more graphical interaction when particles connect</li>\n</ul>\n\n<p><strong>Issues</strong></p>\n\n<ul>\n<li>We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync</li>\n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288692778000,"created_by":1,"updated_at":1396135896000,"updated_by":1,"published_at":1288692778000,"published_by":1},{"id":135,"uuid":"d367475a-9dcd-48c3-9b52-8850f159214c","title":"How Does Your City Feel?","slug":"how-does-your-city-feel","markdown":"\n[![](http://pixelpunchout.com/wp-content/uploads/2010/10/nyc_angry.png \"nyc_angry\")](http://pixelpunchout.com/wp-content/uploads/2010/10/nyc_angry.png \"nyc_angry\")\n\n<div>**[How Does Your City Feel?](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php)** captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. [How Does Your City Feel](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div>[**How Does Your City Feel?**](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) was created by [**Cindy Wong**](http://pixelpunchout.com) and**Zeven Rodriguez**.</div><div>[![](http://pixelpunchout.com/wp-content/uploads/2010/10/nyc.png \"nyc\")](http://pixelpunchout.com/wp-content/uploads/2010/10/nyc.png \"nyc\")</div><div>New York City</div><div>[![](http://pixelpunchout.com/wp-content/uploads/2010/10/sf.png \"sf\")](http://pixelpunchout.com/wp-content/uploads/2010/10/sf.png \"sf\")</div>[![](http://pixelpunchout.com/wp-content/uploads/2010/10/sf_love.png \"sf_love\")](http://pixelpunchout.com/wp-content/uploads/2010/10/sf_love.png \"sf_love\")\n\nSan Francisco\n\n[![](http://pixelpunchout.com/wp-content/uploads/2010/10/seattle.png \"seattle\")](http://pixelpunchout.com/wp-content/uploads/2010/10/seattle.png \"seattle\")\n\n<div>[![](http://pixelpunchout.com/wp-content/uploads/2010/10/seattle_happy.png \"seattle_happy\")](http://pixelpunchout.com/wp-content/uploads/2010/10/seattle_happy.png \"seattle_happy\")</div>Seattle\n\n\n","html":"<p><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/nyc_angry.png\" title=\"nyc_angry\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/nyc_angry.png\" alt=\"\" title=\"nyc_angry\" /></a></p>\n\n<p><div><strong><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel?</a></strong> captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. <a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel</a> is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\"><strong>How Does Your City Feel?</strong></a> was created by <a href=\"http://pixelpunchout.com\"><strong>Cindy Wong</strong></a> and<strong>Zeven Rodriguez</strong>.</div><div><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/nyc.png\" title=\"nyc\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/nyc.png\" alt=\"\" title=\"nyc\" /></a></div><div>New York City</div><div><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/sf.png\" title=\"sf\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/sf.png\" alt=\"\" title=\"sf\" /></a></div><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/sf_love.png\" title=\"sf_love\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/sf_love.png\" alt=\"\" title=\"sf_love\" /></a></p>\n\n<p>San Francisco</p>\n\n<p><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/seattle.png\" title=\"seattle\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/seattle.png\" alt=\"\" title=\"seattle\" /></a></p>\n\n<p><div><a href=\"http://pixelpunchout.com/wp-content/uploads/2010/10/seattle_happy.png\" title=\"seattle_happy\"><img src=\"http://pixelpunchout.com/wp-content/uploads/2010/10/seattle_happy.png\" alt=\"\" title=\"seattle_happy\" /></a></div>Seattle</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288694374000,"created_by":1,"updated_at":1396135844000,"updated_by":1,"published_at":1288694374000,"published_by":1},{"id":136,"uuid":"0681972e-8629-4ce4-b77e-835451f6fb19","title":"Android Sms Tracking","slug":"android-sms-tracking","markdown":"\nThis application grabs gps location with on button and the second button sends a text message to my phone number.\n\n[cc lang=\"java\"]\n\npackage com.zevenwolf.tracking;\n\nimport android.app.Activity;  \n import android.app.PendingIntent;  \n import android.content.BroadcastReceiver;  \n import android.content.Context;  \n import android.content.Intent;  \n import android.content.IntentFilter;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.telephony.SmsManager;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;  \n import android.widget.Toast;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;  \n Button messageButton;  \n public String lat;  \n public String lon;  \n public String message;\n\n PendingIntent sentPI;  \n // The intent action we are using  \n String SENT = “SMS_SENT”;  \n BroadcastReceiver br;  \n TextView lats;  \n TextView lons;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n lats = (TextView) this.findViewById(R.id.lat);  \n lons = (TextView) this.findViewById(R.id.lon);\n\n sentPI = PendingIntent.getBroadcast(this, 0,  \n new Intent(SENT), 0);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n messageButton = (Button) this.findViewById(R.id.message);\n\n // The important thing is to set the onclicklistner event with in the setOnClickListener  \n gpsButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n lats.setText(lat);\n\n lons.setText(lon);\n\n message = lat + ” ” + lon;  \n Log.d(“message”, message);\n\n Log.d(“view”, “hit”);\n\n }});\n\n messageButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n Log.d(“view”, “hit”);\n\n SmsManager sms = SmsManager.getDefault();  \n // send the message, passing in the pending intent, sentPI  \n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);\n\n registerReceiver(br, new IntentFilter(SENT));\n\n }});\n\n // this broadcastreceiver when sent a receive code sends back a specific code which you then display\n\n br = new BroadcastReceiver(){  \n @Override  \n public void onReceive(Context ctx, Intent intent) {  \n switch (getResultCode())  \n {  \n case Activity.RESULT_OK:  \n Toast.makeText(getBaseContext(), “SMS sent”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_GENERIC_FAILURE:  \n Toast.makeText(getBaseContext(), “SMS: Generic failure”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NO_SERVICE:  \n Toast.makeText(getBaseContext(), “SMS: No service”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NULL_PDU:  \n Toast.makeText(getBaseContext(), “SMS: Null PDU”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_RADIO_OFF:  \n Toast.makeText(getBaseContext(), “SMS: Radio off”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n }\n\n unregisterReceiver(br);  \n }\n\n };\n\n }  \n public void onPause(){\n\n super.onPause();  \n finish();\n\n}  \n // onPause  \n //super onpause  \n // run finish there\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View v) {  \n // TODO Auto-generated method stub\n\n }\n\n}\n\n[/cc]\n\n\n","html":"<p>This application grabs gps location with on button and the second button sends a text message to my phone number.</p>\n\n<p>[cc lang=\"java\"]</p>\n\n<p>package com.zevenwolf.tracking;</p>\n\n<p>import android.app.Activity; <br />\n import android.app.PendingIntent; <br />\n import android.content.BroadcastReceiver; <br />\n import android.content.Context; <br />\n import android.content.Intent; <br />\n import android.content.IntentFilter; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.telephony.SmsManager; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView; <br />\n import android.widget.Toast;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton; <br />\n Button messageButton; <br />\n public String lat; <br />\n public String lon; <br />\n public String message;</p>\n\n<p>PendingIntent sentPI; <br />\n // The intent action we are using <br />\n String SENT = “SMS_SENT”; <br />\n BroadcastReceiver br; <br />\n TextView lats; <br />\n TextView lons;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>lats = (TextView) this.findViewById(R.id.lat); <br />\n lons = (TextView) this.findViewById(R.id.lon);</p>\n\n<p>sentPI = PendingIntent.getBroadcast(this, 0, <br />\n new Intent(SENT), 0);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n messageButton = (Button) this.findViewById(R.id.message);</p>\n\n<p>// The important thing is to set the onclicklistner event with in the setOnClickListener <br />\n gpsButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>lats.setText(lat);</p>\n\n<p>lons.setText(lon);</p>\n\n<p>message = lat + ” ” + lon; <br />\n Log.d(“message”, message);</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>}});</p>\n\n<p>messageButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>SmsManager sms = SmsManager.getDefault(); <br />\n // send the message, passing in the pending intent, sentPI <br />\n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);</p>\n\n<p>registerReceiver(br, new IntentFilter(SENT));</p>\n\n<p>}});</p>\n\n<p>// this broadcastreceiver when sent a receive code sends back a specific code which you then display</p>\n\n<p>br = new BroadcastReceiver(){ <br />\n @Override <br />\n public void onReceive(Context ctx, Intent intent) { <br />\n switch (getResultCode()) <br />\n { <br />\n case Activity.RESULT<em>OK: <br />\n Toast.makeText(getBaseContext(), “SMS sent”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>GENERIC<em>FAILURE: <br />\n Toast.makeText(getBaseContext(), “SMS: Generic failure”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NO<em>SERVICE: <br />\n Toast.makeText(getBaseContext(), “SMS: No service”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NULL<em>PDU: <br />\n Toast.makeText(getBaseContext(), “SMS: Null PDU”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>RADIO<em>OFF: <br />\n Toast.makeText(getBaseContext(), “SMS: Radio off”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n }</p>\n\n<p>unregisterReceiver(br); <br />\n }</p>\n\n<p>};</p>\n\n<p>} <br />\n public void onPause(){</p>\n\n<p>super.onPause(); <br />\n finish();</p>\n\n<p>} <br />\n // onPause <br />\n //super onpause <br />\n // run finish there</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View v) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>}</p>\n\n<p>}</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288707165000,"created_by":1,"updated_at":1396135801000,"updated_by":1,"published_at":1288707165000,"published_by":1},{"id":137,"uuid":"38efc2a2-ede1-468c-89ea-74556da291b0","title":"Openframeworks to work with visual studio express 2010 C++","slug":"openframeworks-to-work-with-visual-studio-express-2010-c","markdown":"\nGetting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.\n\nI found this link very useful in helping me build a project\n\n[http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899](http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899)\n\nSteps c, d, and e I found to be the most important.\n\nOnce you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.\n\nOne of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.\n\n\n","html":"<p>Getting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.</p>\n\n<p>I found this link very useful in helping me build a project</p>\n\n<p><a href=\"http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899\">http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899</a></p>\n\n<p>Steps c, d, and e I found to be the most important.</p>\n\n<p>Once you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.</p>\n\n<p>One of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295285759000,"created_by":1,"updated_at":1395799348000,"updated_by":1,"published_at":1295285759000,"published_by":1},{"id":138,"uuid":"2a714455-8e32-4ea8-be17-f389183dbeb4","title":"Kinect touchtable no go!","slug":"kinect-touchtable-no-go","markdown":"\nSo why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p>So why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295286514000,"created_by":1,"updated_at":1390233381000,"updated_by":1,"published_at":null,"published_by":1},{"id":139,"uuid":"73b3bbc8-71a0-4f72-90d0-6117ba7b1835","title":"Thesis proposal","slug":"thesis-proposal","markdown":"\n[![](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg \"thesis-explain1\")](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg)\n\nTo create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg \"thesis-explain2\")](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg)\n\nNot just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg \"thesis-explain3\")](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg)Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain4.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg \"thesis-explain4\")](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg)We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain5.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg \"thesis-explain5\")](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg)We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain6.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg \"thesis-explain6\")](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg)In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg \"thesis-explain7\")](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg)\n\nA designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.\n\n\n","html":"<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\" alt=\"\" title=\"thesis-explain1\" /></a></p>\n\n<p>To create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\" alt=\"\" title=\"thesis-explain2\" /></a></p>\n\n<p>Not just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\" alt=\"\" title=\"thesis-explain3\" /></a>Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain4.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\" alt=\"\" title=\"thesis-explain4\" /></a>We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain5.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\" alt=\"\" title=\"thesis-explain5\" /></a>We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain6.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\" alt=\"\" title=\"thesis-explain6\" /></a>In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\" alt=\"\" title=\"thesis-explain7\" /></a></p>\n\n<p>A designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296091421000,"created_by":1,"updated_at":1396135784000,"updated_by":1,"published_at":1296091421000,"published_by":1},{"id":140,"uuid":"91ceda16-7c41-4b54-b5d3-1a632a55505d","title":"Interpretive Exhibits Assignment 1","slug":"interpretive-exhibits-assignment-1","markdown":"\nCabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.\n\nThe fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.\n\nOn the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.\n\n**19<sup>th</sup> Century Galleries for Painting and Sculpture MET**\n\nThis gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.\n\n![](http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\")\n\nSome rooms were full of sceneries other full of portraits.\n\n![](http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\")\n\nAs you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.\n\n![](http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\")\n\nRooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.\n\n![](http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\")\n\nThe galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.\n\n![](http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\")\n\nThis gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.\n\n![](http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\")\n\n\n","html":"<p>Cabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.</p>\n\n<p>The fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.</p>\n\n<p>On the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.</p>\n\n<p><strong>19<sup>th</sup> Century Galleries for Painting and Sculpture MET</strong></p>\n\n<p>This gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\"\" alt=\"\" /></p>\n\n<p>Some rooms were full of sceneries other full of portraits.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\"\" alt=\"\" /></p>\n\n<p>As you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\"\" alt=\"\" /></p>\n\n<p>Rooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\"\" alt=\"\" /></p>\n\n<p>The galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\"\" alt=\"\" /></p>\n\n<p>This gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296494055000,"created_by":1,"updated_at":1396135777000,"updated_by":1,"published_at":null,"published_by":1},{"id":141,"uuid":"a27c5265-77cc-4dd2-96a0-96ac18191073","title":"Thesis Explanation","slug":"thesis-explanation","markdown":"\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.\n\nUnderstanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.\n\nThe philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.\n\nWhat I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.\n\nThe main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:\n\nWhat is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\n\n","html":"<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.</p>\n\n<p>Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.</p>\n\n<p>The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.</p>\n\n<p>What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.</p>\n\n<p>The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked:</p>\n\n<p>What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296706855000,"created_by":1,"updated_at":1396135764000,"updated_by":1,"published_at":1296706855000,"published_by":1},{"id":142,"uuid":"bda0fa17-a28d-4117-866f-e83b386b021b","title":"Inspiration","slug":"inspiration","markdown":"\nTouchOSC\n\n[http://hexler.net/software/touchosc](http://hexler.net/software/touchosc)\n\nTouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi\n\nPros:\n\n-Could create custom interface\n\n-Works with many languages ie java, Max/MSP\n\n-Standard protocol\n\nCons:\n\n-Have to know how to program\n\n-TouchOSC is platform dependent\n\n-Needs to run on a local network\n\nOpen exhibits\n\n[http://openexhibits.org/](http://openexhibits.org/)\n\nOpen exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.\n\nPro:\n\n-Has integrated support for social media sites like youtube and flickr\n\n-Advanced touchscreen gesture Â capabilities\n\n-open api\n\nCons:\n\n-Flash based\n\n-Does not work with most cellphones\n\n-\n\n-\n\n\n","html":"<p>TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi</p>\n\n<p>Pros:</p>\n\n<p>-Could create custom interface</p>\n\n<p>-Works with many languages ie java, Max/MSP</p>\n\n<p>-Standard protocol</p>\n\n<p>Cons:</p>\n\n<p>-Have to know how to program</p>\n\n<p>-TouchOSC is platform dependent</p>\n\n<p>-Needs to run on a local network</p>\n\n<p>Open exhibits</p>\n\n<p><a href=\"http://openexhibits.org/\">http://openexhibits.org/</a></p>\n\n<p>Open exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.</p>\n\n<p>Pro:</p>\n\n<p>-Has integrated support for social media sites like youtube and flickr</p>\n\n<p>-Advanced touchscreen gesture Â capabilities</p>\n\n<p>-open api</p>\n\n<p>Cons:</p>\n\n<p>-Flash based</p>\n\n<p>-Does not work with most cellphones</p>\n\n<p>-</p>\n\n<p>-</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296707521000,"created_by":1,"updated_at":1396135735000,"updated_by":1,"published_at":1296707521000,"published_by":1},{"id":143,"uuid":"0e9d7b37-3a76-4e24-9a9c-05e27b1a3c91","title":"The Experience Economy","slug":"the-experience-economy","markdown":"\nI found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.\n\nWhat I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.\n\nIt is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.\n\nBut hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.\n\n\n","html":"<p>I found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.</p>\n\n<p>What I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.</p>\n\n<p>It is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.</p>\n\n<p>But hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297101085000,"created_by":1,"updated_at":1396135744000,"updated_by":1,"published_at":null,"published_by":1},{"id":144,"uuid":"03250db2-8740-4b10-b74f-a4be6c5bcd9c","title":"Hall of Human Origins Amnh","slug":"hall-of-human-origins-amnh","markdown":"\nThe goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery\n\n[![hallofhumanorigins](http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425864400/ \"hallofhumanorigins by zevenwolf, on Flickr\")\n\nThe exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425186441/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.\n\nAt the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.\n\nBehind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425193583/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThere are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.\n\n[![P1020326](http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425284329/ \"P1020326 by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425794626/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425792758/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nI never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425200813/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425198079/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThis music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425798918/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n\n","html":"<p>The goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425864400/\" title=\"hallofhumanorigins by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg\" alt=\"hallofhumanorigins\" title=\"\" /></a></p>\n\n<p>The exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425186441/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.</p>\n\n<p>At the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.</p>\n\n<p>Behind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425193583/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>There are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425284329/\" title=\"P1020326 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg\" alt=\"P1020326\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425794626/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425792758/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>I never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425200813/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425198079/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>This music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425798918/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297106875000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":145,"uuid":"119d7516-5259-43bc-9bfe-97aeda8dc983","title":"Where I am at.....","slug":"where-i-am-at","markdown":"\n*Skip to **how it works** if you have read my previous thesis post  \n*  \n Zevensuy Rodriguez\n\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.  \n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.  \n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.  \n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.  \n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:  \n What is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\nHow it works?  \n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.\n\nInput  \n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.\n\nProcessing  \n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.\n\n In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.\n\nOutput  \n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.\n\nWhy touchscreens?  \n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.\n\n The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.\n\nVocabulary  \n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.\n\n More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.\n\n Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?\n\n Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.\n\nInspiration  \n TouchOSC\n\nhttp://hexler.net/software/touchosc\n\n TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device.  \n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.\n\nOpen Exhibits  \n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.\n\nLemurTron\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron3_Evan_Cairo.jpg\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron4_Evan_Cairo.jpg\n\n LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely.  \n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.\n\nBibliography\n\nSheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print.  \n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print.  \n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print.  \n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print.  \n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.\n\nNorman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.\n\n3quarksdaily. Web. 10 Feb. 2011. <>. </>\n\n\n","html":"<p>*Skip to <strong>how it works</strong> if you have read my previous thesis post <br />\n* <br />\n Zevensuy Rodriguez</p>\n\n<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored. <br />\n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service. <br />\n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent. <br />\n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information. <br />\n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked: <br />\n What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>\n\n<p>How it works? <br />\n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.</p>\n\n<p>Input <br />\n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.</p>\n\n<p>Processing <br />\n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.</p>\n\n<p>In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&amp;LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.</p>\n\n<p>Output <br />\n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.</p>\n\n<p>Why touchscreens? <br />\n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.</p>\n\n<p>The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.</p>\n\n<p>Vocabulary <br />\n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.</p>\n\n<p>More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.</p>\n\n<p>Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?</p>\n\n<p>Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.</p>\n\n<p>Inspiration <br />\n TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device. <br />\n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.</p>\n\n<p>Open Exhibits <br />\n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.</p>\n\n<p>LemurTron</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron3\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron3</a><em>Evan</em>Cairo.jpg</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron4\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron4</a><em>Evan</em>Cairo.jpg</p>\n\n<p>LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely. <br />\n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.</p>\n\n<p>Bibliography</p>\n\n<p>Sheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print. <br />\n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print. <br />\n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print. <br />\n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print. <br />\n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.</p>\n\n<p>Norman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.</p>\n\n<p>3quarksdaily. Web. 10 Feb. 2011. &lt;>. </></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297342881000,"created_by":1,"updated_at":1396135753000,"updated_by":1,"published_at":1297342881000,"published_by":1},{"id":146,"uuid":"12f75e1a-e8d1-4060-b82d-a51681483860","title":"Traveling Exhibits","slug":"traveling-exhibits","markdown":"\n In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.\n\n The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.\n\n One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.\n\n\n","html":"<p>In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.</p>\n\n<p>The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.</p>\n\n<p>One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297645648000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":147,"uuid":"4221bd94-23c1-4722-a92b-bf766599884d","title":"Forbidden City: MET","slug":"forbidden-city-met","markdown":"\n[![forbiddencity](http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg)](http://www.flickr.com/photos/zevenrodriguez/5445260425/ \"forbiddencity by zevenwolf, on Flickr\")\n\nI felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5445260425/\" title=\"forbiddencity by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg\" alt=\"forbiddencity\" title=\"\" /></a></p>\n\n<p>I felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297708099000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":148,"uuid":"05f57611-c050-4c91-9b80-dfbd3b88c6d8","title":"Prototype and Production","slug":"prototype-and-production","markdown":"\nMy thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â [![](http://oddgui.com/wp-content/uploads/2011/02/inputtooutput.jpg \"inputtooutput\")](http://oddgui.com/wp-content/uploads/2011/02/inputtooutput.jpg)In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/users.jpg \"users\")](http://oddgui.com/wp-content/uploads/2011/02/users.jpg)\n\nOnce users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.\n\nAreas of focus(What will be built out for thesis):\n\n- Everything except the general diagnostics\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/usersinter.jpg \"usersinter\")](http://oddgui.com/wp-content/uploads/2011/02/usersinter.jpg)\n\nOnce the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.\n\nAreas of focus:\n\n- Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/design.jpg \"design\")](http://oddgui.com/wp-content/uploads/2011/02/design.jpg)The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.\n\nArea of focus:\n\n- The 2 loads I will focus on are steppers and LEDs\n- In the interaction type will be Gesture(being swipes, etc) Â and Button\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/setup.jpg \"setup\")](http://oddgui.com/wp-content/uploads/2011/02/setup.jpg)\n\nThe output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.\n\nArea of focus:\n\n- This is a crucial step that needs to be done\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/output.jpg \"output\")](http://oddgui.com/wp-content/uploads/2011/02/output.jpg)\n\nBuild for thesis:\n\n**Online Software (This should happen in the next 2 weeks)**\n\n- 2 displays use cases using gestures\n- User Main area\n- Stepper Form\n- Led Form\n- Gesture Form\n- Button Form\n- Input Interpreter\n- Output Interpreter\n\n**Hardware (Rest of the Semester)**\n\n- Software to interpret information coming from online\n- Create 2 turntables\n- Collect information to put in the display cases ie Vase and Elements or Minerals\n\nThese are the 2 use cases:\n\nOne is a rotating vase that updates content based on how the user rotates it .\n\n[![](http://oddgui.com/wp-content/uploads/2011/02/vase.jpg \"vase\")](http://oddgui.com/wp-content/uploads/2011/02/vase.jpg)\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">[![](http://oddgui.com/wp-content/uploads/2011/02/microscope-exhibit.jpg \"microscope-exhibit\")](http://oddgui.com/wp-content/uploads/2011/02/microscope-exhibit.jpg)  \n</span></span></span>\n\n\n","html":"<p>My thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â <a href=\"http://oddgui.com/wp-content/uploads/2011/02/inputtooutput.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/inputtooutput.jpg\" alt=\"\" title=\"inputtooutput\" /></a>In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.</p>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/users.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/users.jpg\" alt=\"\" title=\"users\" /></a></p>\n\n<p>Once users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.</p>\n\n<p>Areas of focus(What will be built out for thesis):</p>\n\n<ul>\n<li>Everything except the general diagnostics</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/usersinter.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/usersinter.jpg\" alt=\"\" title=\"usersinter\" /></a></p>\n\n<p>Once the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.</p>\n\n<p>Areas of focus:</p>\n\n<ul>\n<li>Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/design.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/design.jpg\" alt=\"\" title=\"design\" /></a>The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>The 2 loads I will focus on are steppers and LEDs</li>\n<li>In the interaction type will be Gesture(being swipes, etc) Â and Button</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/setup.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/setup.jpg\" alt=\"\" title=\"setup\" /></a></p>\n\n<p>The output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>This is a crucial step that needs to be done</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/output.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/output.jpg\" alt=\"\" title=\"output\" /></a></p>\n\n<p>Build for thesis:</p>\n\n<p><strong>Online Software (This should happen in the next 2 weeks)</strong></p>\n\n<ul>\n<li>2 displays use cases using gestures</li>\n<li>User Main area</li>\n<li>Stepper Form</li>\n<li>Led Form</li>\n<li>Gesture Form</li>\n<li>Button Form</li>\n<li>Input Interpreter</li>\n<li>Output Interpreter</li>\n</ul>\n\n<p><strong>Hardware (Rest of the Semester)</strong></p>\n\n<ul>\n<li>Software to interpret information coming from online</li>\n<li>Create 2 turntables</li>\n<li>Collect information to put in the display cases ie Vase and Elements or Minerals</li>\n</ul>\n\n<p>These are the 2 use cases:</p>\n\n<p>One is a rotating vase that updates content based on how the user rotates it .</p>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2011/02/vase.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/vase.jpg\" alt=\"\" title=\"vase\" /></a></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\"><a href=\"http://oddgui.com/wp-content/uploads/2011/02/microscope-exhibit.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2011/02/microscope-exhibit.jpg\" alt=\"\" title=\"microscope-exhibit\" /></a> <br />\n</span></span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298565772000,"created_by":1,"updated_at":1396135530000,"updated_by":1,"published_at":1298565772000,"published_by":1},{"id":149,"uuid":"cdedc629-f5fe-4583-afd8-ebbb89c8df05","title":"Moma: Abstract Expressionists","slug":"moma-abstract-expressionists","markdown":"\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486203504/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485609505/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.\n\n[![abstractexpressionists](http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485650855/ \"abstractexpressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486205936/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485612137/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nOne of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486203504/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485609505/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485650855/\" title=\"abstractexpressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg\" alt=\"abstractexpressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486205936/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485612137/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>One of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298913273000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":150,"uuid":"3c6f5692-50c5-458c-9732-d1fd2a88a9b6","title":"Commercial Gallery","slug":"commercial-gallery","markdown":"\nI went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.\n\n[![P1020530](http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547681740/ \"P1020530 by zevenwolf, on Flickr\")\n\nThe Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.\n\n[![P1020532](http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547682142/ \"P1020532 by zevenwolf, on Flickr\")\n\nThe main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.\n\n![](http://arrestedmotion.com/wp-content/uploads/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\")\n\n\n","html":"<p>I went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547681740/\" title=\"P1020530 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg\" alt=\"P1020530\" title=\"\" /></a></p>\n\n<p>The Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547682142/\" title=\"P1020532 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg\" alt=\"P1020532\" title=\"\" /></a></p>\n\n<p>The main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.</p>\n\n<p><img src=\"http://arrestedmotion.com/wp-content/uploads/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1300735279000,"created_by":1,"updated_at":1396135497000,"updated_by":1,"published_at":null,"published_by":1},{"id":151,"uuid":"9794847c-b259-4b3d-bca6-ada90f3b69ad","title":"Adafruit Stepper Gear","slug":"adafruit-stepper-gear","markdown":"\nThis Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:\n\nNumber of Teeth: 10\n\nCircular Pitch: 6.4\n\nPressure angle: 10\n\n\n","html":"<p>This Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:</p>\n\n<p>Number of Teeth: 10</p>\n\n<p>Circular Pitch: 6.4</p>\n\n<p>Pressure angle: 10</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1302124038000,"created_by":1,"updated_at":1396135622000,"updated_by":1,"published_at":1302124038000,"published_by":1},{"id":152,"uuid":"53e58b29-57d4-4346-bb00-a28b638f6e48","title":"Sparkfun OpAmp Breakout  LMV358","slug":"sparkfun-opamp-breakout-lmv358","markdown":"\nThe LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.\n\n[http://www.sparkfun.com/products/9816](http://www.sparkfun.com/products/9816)\n\n[![Sparkfun OpAmp Breakout LMV358](http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg)](http://www.flickr.com/photos/zevenrodriguez/6258550298/ \"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\")\n\n\n","html":"<p>The LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.</p>\n\n<p><a href=\"http://www.sparkfun.com/products/9816\">http://www.sparkfun.com/products/9816</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6258550298/\" title=\"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg\" alt=\"Sparkfun OpAmp Breakout LMV358\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1318967797000,"created_by":1,"updated_at":1396135612000,"updated_by":1,"published_at":1318967797000,"published_by":1},{"id":153,"uuid":"e4824e10-4875-4b3e-ba72-8341df03cbf6","title":"ChronoDot and Arduino 1.0","slug":"chronodot-and-arduino-1-0","markdown":"\nRecently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;\n\nThe code can be found here [https://github.com/adafruit/RTClib](https://github.com/adafruit/RTClib)\n\n[![ChronoDot and Arduino](http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347082745/ \"ChronoDot and Arduino by zevenwolf, on Flickr\")\n\nThe red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.\n\n\n","html":"<p>Recently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;</p>\n\n<p>The code can be found here <a href=\"https://github.com/adafruit/RTClib\">https://github.com/adafruit/RTClib</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347082745/\" title=\"ChronoDot and Arduino by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg\" alt=\"ChronoDot and Arduino\" title=\"\" /></a></p>\n\n<p>The red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321371914000,"created_by":1,"updated_at":1396135601000,"updated_by":1,"published_at":1321371914000,"published_by":1},{"id":154,"uuid":"4a3eef44-a39c-4dce-a198-d7c1126f8b47","title":"8 minute PCB Test","slug":"8-minute-pcb-test","markdown":"\nToday I am testing out the [8 minute PCB kit from PulsarFX](http://www.pcbfx.com/)\n\nI am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.\n\n[![PCB Test](http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347135881/ \"PCB Test by zevenwolf, on Flickr\")\n\n\n","html":"<p>Today I am testing out the <a href=\"http://www.pcbfx.com/\">8 minute PCB kit from PulsarFX</a></p>\n\n<p>I am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347135881/\" title=\"PCB Test by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg\" alt=\"PCB Test\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321383642000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":155,"uuid":"527ab997-3db0-484b-ae74-74a74fc8dd2c","title":"Working with Rotary Encoders","slug":"working-with-rotary-encoders","markdown":"\nA rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on [Paul Stoffregen’s Encoder library and explanations](http://www.pjrc.com/teensy/td_libs_Encoder.html).\n\n[![Rotary Encoder](http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6835975655/ \"Rotary Encoder by zevenwolf, on Flickr\")\n\n[![encoder](http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg)](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\nInside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png)\n\nPin 1 == Low & Pin 2 == Low ==> Position 1\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png)\n\nPin 1 == High & Pin 2 == Low ==> Position 2. Â We know that we have moved left.\n\nThe arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library [http://www.pjrc.com/teensy/td_libs_Encoder.html](http://www.pjrc.com/teensy/td_libs_Encoder.html \"Encoder Library\"). I used the basic code in the library example.\n\n**Arduino**\n\n[cc lang=\"c\"]  \n /* Encoder Library – Basic Example\n\n* http://www.pjrc.com/teensy/td_libs_Encoder.html\n\nThis example code is in the public domain.  \n */  \n #include <Encoder.h>  \n // Change these two numbers to the pins connected to your encoder.  \n // Â  Best Performance: both pins have interrupt capability  \n // Â  Good Performance: only the first pin has interrupt capability  \n // Â  Low Performance: Â neither pin has interrupt capability  \n Encoder myEnc(5, 6);  \n // Â  avoid using pins with LEDs attached  \n void setup() {  \n Serial.begin(9600);  \n Serial.println(“Basic Encoder Test:”);  \n }  \n long oldPosition Â = -999;  \n void loop() {  \n long newPosition = myEnc.read();  \n if (newPosition != oldPosition) {  \n oldPosition = newPosition;  \n Serial.println(newPosition);  \n }  \n }  \n [/cc]  \n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.\n\n[  \n](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\n[![encoder serial monitor](http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6871360321/ \"encoder serial monitor by zevenwolf, on Flickr\")\n\n**Advanced Topic: Inverse Logic and Arduino Pull-up**\n\nThe Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.\n\n[![pullupresistor](http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg)](http://www.flickr.com/photos/zevenrodriguez/6836949291/ \"pullupresistor by zevenwolf, on Flickr\")\n\n*Note: This library can use the [arduinoÂ interrupt](http://arduino.cc/playground/Code/Interrupts) pins for better performance.*\n\n\n","html":"<p>A rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\">Paul Stoffregen’s Encoder library and explanations</a>.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6835975655/\" title=\"Rotary Encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg\" alt=\"Rotary Encoder\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg\" alt=\"encoder\" title=\"\" /></a></p>\n\n<p>Inside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 <mark> Low &amp; Pin 2 </mark> Low <mark>> Position 1</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 </mark> High &amp; Pin 2 <mark> Low </mark>> Position 2. Â We know that we have moved left.</p>\n\n<p>The arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\" title=\"Encoder Library\">http://www.pjrc.com/teensy/td<em>libs</em>Encoder.html</a>. I used the basic code in the library example.</p>\n\n<p><strong>Arduino</strong></p>\n\n<p>[cc lang=\"c\"] <br />\n /* Encoder Library – Basic Example</p>\n\n<ul>\n<li><a href=\"http://www.pjrc.com/teensy/td\">http://www.pjrc.com/teensy/td</a><em>libs</em>Encoder.html</li>\n</ul>\n\n<p>This example code is in the public domain. <br />\n */ <br />\n #include <Encoder.h> <br />\n // Change these two numbers to the pins connected to your encoder. <br />\n // Â  Best Performance: both pins have interrupt capability <br />\n // Â  Good Performance: only the first pin has interrupt capability <br />\n // Â  Low Performance: Â neither pin has interrupt capability <br />\n Encoder myEnc(5, 6); <br />\n // Â  avoid using pins with LEDs attached <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n Serial.println(“Basic Encoder Test:”); <br />\n } <br />\n long oldPosition Â = -999; <br />\n void loop() { <br />\n long newPosition = myEnc.read(); <br />\n if (newPosition != oldPosition) { <br />\n oldPosition = newPosition; <br />\n Serial.println(newPosition); <br />\n } <br />\n } <br />\n [/cc] <br />\n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"> <br />\n</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6871360321/\" title=\"encoder serial monitor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg\" alt=\"encoder serial monitor\" title=\"\" /></a></p>\n\n<p><strong>Advanced Topic: Inverse Logic and Arduino Pull-up</strong></p>\n\n<p>The Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6836949291/\" title=\"pullupresistor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg\" alt=\"pullupresistor\" title=\"\" /></a></p>\n\n<p><em>Note: This library can use the <a href=\"http://arduino.cc/playground/Code/Interrupts\">arduinoÂ interrupt</a> pins for better performance.</em></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1328640717000,"created_by":1,"updated_at":1396135569000,"updated_by":1,"published_at":1328640717000,"published_by":1},{"id":156,"uuid":"3e0078cc-40fd-4ca0-8390-6d03e95b4434","title":"Intro to TSL2561","slug":"intro-to-tsl2561","markdown":"\nThe TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using [Lady Ada’s guide](http://www.ladyada.net/learn/sensors/tsl2561.html) and [library](https://github.com/adafruit/TSL2561-Arduino-Library). In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room\n\n[![tsl2561output](http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg)](http://www.flickr.com/photos/zevenrodriguez/6810906612/ \"tsl2561output by zevenwolf, on Flickr\")\n\n \n\n<span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span>\n\n[cc lang=\"c\"]\n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n //uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n //Serial.println(x, DEC);\n\n// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum  \n // That way you can do whatever math and comparions you want!  \n uint32_t lum = tsl.getFullLuminosity();  \n uint16_t ir, full;  \n ir = lum >> 16;  \n full = lum & 0xFFFF;  \n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”);  \n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”);  \n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”);  \n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir));  \n Serial.print(“n”);  \n delay(100);  \n }\n\n \n\n \n\nIn thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read [http://www.arduino.cc/playground/Code/BitMath](http://www.arduino.cc/playground/Code/BitMath \"BitMath\")\n\nir = lum >> 16;\n\nfull = lum & 0xFFFF;\n\n \n\nFor a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561_VISIBLE,Â TSL2561_FULLSPECTRUM,Â TSL2561_INFRARED into it.\n\n \n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n Serial.println(x, DEC);  \n delay(100);  \n }  \n [/cc]\n\n\n","html":"<p>The TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using <a href=\"http://www.ladyada.net/learn/sensors/tsl2561.html\">Lady Ada’s guide</a> and <a href=\"https://github.com/adafruit/TSL2561-Arduino-Library\">library</a>. In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6810906612/\" title=\"tsl2561output by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg\" alt=\"tsl2561output\" title=\"\" /></a></p>\n\n<p><span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span></p>\n\n<p>[cc lang=\"c\"]</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n //Serial.println(x, DEC);</p>\n\n<p>// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum <br />\n // That way you can do whatever math and comparions you want! <br />\n uint32<em>t lum = tsl.getFullLuminosity(); <br />\n uint16</em>t ir, full; <br />\n ir = lum >> 16; <br />\n full = lum &amp; 0xFFFF; <br />\n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”); <br />\n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”); <br />\n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”); <br />\n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir)); <br />\n Serial.print(“n”); <br />\n delay(100); <br />\n }</p>\n\n<p>In thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read <a href=\"http://www.arduino.cc/playground/Code/BitMath\" title=\"BitMath\">http://www.arduino.cc/playground/Code/BitMath</a></p>\n\n<p>ir = lum >> 16;</p>\n\n<p>full = lum &amp; 0xFFFF;</p>\n\n<p>For a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561<em>VISIBLE,Â TSL2561</em>FULLSPECTRUM,Â TSL2561_INFRARED into it.</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n Serial.println(x, DEC); <br />\n delay(100); <br />\n } <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1330985412000,"created_by":1,"updated_at":1396137609000,"updated_by":1,"published_at":1330985412000,"published_by":1},{"id":157,"uuid":"7b174ecb-3b35-4dbb-8f3a-5617dbd2340c","title":"Blog","slug":"blog","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1332297471000,"created_by":1,"updated_at":1332297471000,"updated_by":1,"published_at":1332297471000,"published_by":1},{"id":158,"uuid":"9a96fe2d-6b17-4f58-aea8-c8f5e6eb24b1","title":"Arduino Motor Shield","slug":"arduino-motor-shield","markdown":"\nI have been working with the [Arduino Motor Shield](http://arduino.cc/en/Main/ArduinoMotorShieldR3). Here are some of the basic specs for theÂ shield:\n\n- Operating Voltage – 5v to 12v\n- Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor\n- Max Current – 2A per channel or 4A max (with external power supply)\n- Current Sensing – 1.65V/A\n- Free Running stop and brake function\n\n \n\n[![](http://oddgui.com/wp-content/uploads/2012/04/motorshield.jpg \"motorshield\")](http://oddgui.com/wp-content/uploads/2012/04/motorshield.jpg)\n\nThis Shield has 4 main functions:\n\n<table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\">**Function**</td><td align=\"center\">**pins per Ch. A**</td><td align=\"center\">**pins per Ch. B**</td></tr><tr><td align=\"left\">*Direction*</td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\">*PWM*</td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\">*Brake*</td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td>*Current Sensing*</td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.\n\nThe last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.\n\nIMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.\n\n \n\n[![](http://oddgui.com/wp-content/uploads/2012/04/motorshieldback1.jpg \"motorshieldback\")](http://oddgui.com/wp-content/uploads/2012/04/motorshieldback1.jpg)\n\n \n\n \n\n \n\n \n\n**DC Motor**\n\nThis shield can run 2 DC motors\n\nThis is an example of running 2 DC Motors with Current Sense.\n\n[Â https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino](https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino \"DC Motor example\")\n\n\n","html":"<p>I have been working with the <a href=\"http://arduino.cc/en/Main/ArduinoMotorShieldR3\">Arduino Motor Shield</a>. Here are some of the basic specs for theÂ shield:</p>\n\n<ul>\n<li>Operating Voltage – 5v to 12v</li>\n<li>Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor</li>\n<li>Max Current – 2A per channel or 4A max (with external power supply)</li>\n<li>Current Sensing – 1.65V/A</li>\n<li><p>Free Running stop and brake function</p></li>\n</ul>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2012/04/motorshield.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2012/04/motorshield.jpg\" alt=\"\" title=\"motorshield\" /></a></p>\n\n<p>This Shield has 4 main functions:</p>\n\n<p><table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\"><strong>Function</strong></td><td align=\"center\"><strong>pins per Ch. A</strong></td><td align=\"center\"><strong>pins per Ch. B</strong></td></tr><tr><td align=\"left\"><em>Direction</em></td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\"><em>PWM</em></td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\"><em>Brake</em></td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td><em>Current Sensing</em></td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.</p>\n\n<p>The last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.</p>\n\n<p>IMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.</p>\n\n<p><a href=\"http://oddgui.com/wp-content/uploads/2012/04/motorshieldback1.jpg\"><img src=\"http://oddgui.com/wp-content/uploads/2012/04/motorshieldback1.jpg\" alt=\"\" title=\"motorshieldback\" /></a></p>\n\n<p><strong>DC Motor</strong></p>\n\n<p>This shield can run 2 DC motors</p>\n\n<p>This is an example of running 2 DC Motors with Current Sense.</p>\n\n<p><a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\" title=\"DC Motor example\">Â <a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\">https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino</a></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1334005095000,"created_by":1,"updated_at":1396137563000,"updated_by":1,"published_at":1334005095000,"published_by":1},{"id":159,"uuid":"0adbbd2c-2230-408d-ad9d-e48b41422f27","title":"Gestios.com","slug":"gestios-com","markdown":"\nYou can visit my finished thesis at [gestIOs.com](http://gestios.com \"gestIOs.com\")\n\n\n","html":"<p>You can visit my finished thesis at <a href=\"http://gestios.com\" title=\"gestIOs.com\">gestIOs.com</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1336694397000,"created_by":1,"updated_at":1396135296000,"updated_by":1,"published_at":null,"published_by":1},{"id":160,"uuid":"080da1ae-a361-44b3-b5c7-634c40936406","title":"El Pirata","slug":"el-pirata-2","markdown":"\nThis is a Pirate I made using processing.\n\n[El Pirata](http://www.zevenrodriguez.com/itp/icm/week1)\n\n\n","html":"<p>This is a Pirate I made using processing.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week1\">El Pirata</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252967431000,"created_by":1,"updated_at":1396135928000,"updated_by":1,"published_at":null,"published_by":1},{"id":161,"uuid":"f927677e-b2e7-4fed-a667-94042c0e2870","title":"processingWeek2","slug":"processingweek2-2","markdown":"\nWell this is the 2nd week of processing and all is going well so far.\n\nFor my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.\n\n[http://www.zevenrodriguez.com/itp/icm/week2/](http://www.zevenrodriguez.com/itp/icm/week2/)\n\nI decided also to do a second animation with my pirate\n\n[http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/](http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/)\n\n\n","html":"<p>Well this is the 2nd week of processing and all is going well so far.</p>\n\n<p>For my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/\">http://www.zevenrodriguez.com/itp/icm/week2/</a></p>\n\n<p>I decided also to do a second animation with my pirate</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/\">http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253395966000,"created_by":1,"updated_at":1396136013000,"updated_by":1,"published_at":null,"published_by":1},{"id":162,"uuid":"575a7b39-954d-40b2-9e2a-f55ad72db1ca","title":"Fantasy Machine: De-atomizer","slug":"fantasy-machine-de-atomizer-2","markdown":"\nThis is my Fantasy machine for Tom Igoe’s Physical Comp class.\n\n![deatomizer](http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\")\n\nFor a better view download [here](http://zevenrodriguez.com/itp/uploads/deatomizer.pdf)\n\n\n","html":"<p>This is my Fantasy machine for Tom Igoe’s Physical Comp class.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\"\" alt=\"deatomizer\" /></p>\n\n<p>For a better view download <a href=\"http://zevenrodriguez.com/itp/uploads/deatomizer.pdf\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253533703000,"created_by":1,"updated_at":1396136026000,"updated_by":1,"published_at":1253533703000,"published_by":1},{"id":163,"uuid":"958264d6-fbc3-4584-9e77-f11a02052a86","title":"Lab 2 part 3","slug":"lab-2-part-3-2","markdown":"\nThis was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red\n\nThis is the code I wrote\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led3 = 3; // displays what the pot is doing  \n int led6 = 6;  \n int led9 = 9;  \n int led10 = 10;  \n int led11 = 11;\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){  \n /*  \n so I need potvalue/4 and divide by 7 to get the range\n\n*/  \n potValue = analogRead(potPin); //read pot value  \n potValue = potValue/4;\n\nif (potValue <= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) && (potValue <= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) && (potValue <= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) && (potValue <= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) && (potValue <= 240)){  \n analogWrite(led11, 255);  \n analogWrite(led3, 0);  \n analogWrite(led6, 0);  \n analogWrite(led9, 0);  \n analogWrite(led10, 0);  \n }\n\n//pwm led w/ pot value  \n Serial.println(potValue/4);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part3](http://vimeo.com/6686222) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red</p>\n\n<p>This is the code I wrote</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led3 = 3; // displays what the pot is doing <br />\n int led6 = 6; <br />\n int led9 = 9; <br />\n int led10 = 10; <br />\n int led11 = 11;</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n /* <br />\n so I need potvalue/4 and divide by 7 to get the range</p>\n\n<p>*/ <br />\n potValue = analogRead(potPin); //read pot value <br />\n potValue = potValue/4;</p>\n\n<p>if (potValue &lt;= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) &amp;&amp; (potValue &lt;= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) &amp;&amp; (potValue &lt;= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) &amp;&amp; (potValue &lt;= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) &amp;&amp; (potValue &lt;= 240)){ <br />\n analogWrite(led11, 255); <br />\n analogWrite(led3, 0); <br />\n analogWrite(led6, 0); <br />\n analogWrite(led9, 0); <br />\n analogWrite(led10, 0); <br />\n }</p>\n\n<p>//pwm led w/ pot value <br />\n Serial.println(potValue/4);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6686222\">Physcomp-Lab 2 part3</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534410000,"created_by":1,"updated_at":1396136039000,"updated_by":1,"published_at":null,"published_by":1},{"id":164,"uuid":"02d41a6b-f17d-4ff4-a2ab-e30064b049a6","title":"Lab 2 Part 2","slug":"lab-2-part-2-2","markdown":"\nThis second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.\n\nThis is the code I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing  \n int led2 = 10;  \n int x = 0;  \n int y = 0;  \n void setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n x = potValue/4;// sets the value arrange between 0 and 255\n\nif (x < 10){  \n // makes for smoother range control  \n x = 0;  \n }  \n x = map(x,0, 150, 0, 255);\n\ny = -(x – 150);  \n if (y < 20){  \n // makes for smoother range control  \n y = 0;  \n }  \n y = map(y,0, 150, 0, 255);\n\nanalogWrite(led, x); //pwm led w/ pot value  \n analogWrite(led2, y); //pwm led w/ pot value\n\n//Serial.println(x);//print value  \n Serial.println(y);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part2](http://vimeo.com/6656105) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.</p>\n\n<p>This is the code I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing <br />\n int led2 = 10; <br />\n int x = 0; <br />\n int y = 0; <br />\n void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n x = potValue/4;// sets the value arrange between 0 and 255</p>\n\n<p>if (x &lt; 10){ <br />\n // makes for smoother range control <br />\n x = 0; <br />\n } <br />\n x = map(x,0, 150, 0, 255);</p>\n\n<p>y = -(x – 150); <br />\n if (y &lt; 20){ <br />\n // makes for smoother range control <br />\n y = 0; <br />\n } <br />\n y = map(y,0, 150, 0, 255);</p>\n\n<p>analogWrite(led, x); //pwm led w/ pot value <br />\n analogWrite(led2, y); //pwm led w/ pot value</p>\n\n<p>//Serial.println(x);//print value <br />\n Serial.println(y);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656105\">Physcomp-Lab 2 part2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534507000,"created_by":1,"updated_at":1396136047000,"updated_by":1,"published_at":null,"published_by":1},{"id":165,"uuid":"084d5d30-dbb8-46d3-9c2c-796932275744","title":"Lab2 Working with Pots","slug":"lab2-working-with-pots-2","markdown":"\nThis Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n analogWrite(led, potValue/4); //pwm led w/ pot value  \n Serial.println(potValue);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab2 part1](http://vimeo.com/6656078) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nFor more info about this lab [click here](http://itp.nyu.edu/physcomp/Intro/HomePage)\n\n\n","html":"<p>This Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n analogWrite(led, potValue/4); //pwm led w/ pot value <br />\n Serial.println(potValue);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656078\">Physcomp Lab2 part1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>For more info about this lab <a href=\"http://itp.nyu.edu/physcomp/Intro/HomePage\">click here</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534627000,"created_by":1,"updated_at":1396136055000,"updated_by":1,"published_at":null,"published_by":1},{"id":166,"uuid":"76626c33-2118-4fe4-842d-f274d7eb457d","title":"Lab 3 Working without Arduino","slug":"lab-3-working-without-arduino-2","markdown":"\nThis lab was mostly to focus on building circuits with out the Arduino\n\nI started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.\n\n![measuringwallwart](http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\")\n\nThe power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v\n\n![measuringaftervoltageregulator](http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\")\n\nThis is my basic LED circuit with a switch.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Basic circuit](http://vimeo.com/6815927) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nI then connected another LED in series\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Components in Series](http://vimeo.com/6815988) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThen measured the first LED in the circuit  \n![series1](http://zevenwolf.com/itp/uploads/series1.jpg \"series1\")\n\nThen the second\n\n![series2](http://zevenwolf.com/itp/uploads/series2.jpg \"series2\")\n\nFinally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3- series Led plus 1](http://vimeo.com/6816161) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nIn the parallel circuit I measured the amperage after the LEDs.\n\n![parallelmilliamps](http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\")\n\nThe last part I measured the resistance on a pot.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Pot Variable Voltage Measuring](http://vimeo.com/6816307) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This lab was mostly to focus on building circuits with out the Arduino</p>\n\n<p>I started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\"\" alt=\"measuringwallwart\" /></p>\n\n<p>The power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\"\" alt=\"measuringaftervoltageregulator\" /></p>\n\n<p>This is my basic LED circuit with a switch.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815927\">Physcomp Lab3-Basic circuit</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>I then connected another LED in series</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815988\">Physcomp Lab3-Components in Series</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Then measured the first LED in the circuit <br />\n<img src=\"http://zevenwolf.com/itp/uploads/series1.jpg \"series1\"\" alt=\"series1\" /></p>\n\n<p>Then the second</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/series2.jpg \"series2\"\" alt=\"series2\" /></p>\n\n<p>Finally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816161\">Physcomp Lab3- series Led plus 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>In the parallel circuit I measured the amperage after the LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\"\" alt=\"parallelmilliamps\" /></p>\n\n<p>The last part I measured the resistance on a pot.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816307\">Physcomp Lab3-Pot Variable Voltage Measuring</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1254227620000,"created_by":1,"updated_at":1396136062000,"updated_by":1,"published_at":null,"published_by":1},{"id":167,"uuid":"8dc19cf0-2f56-46d4-a843-509eefaf5743","title":"Lab 4 Servo and Tone","slug":"lab-4-servo-and-tone-2","markdown":"\nThe breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Photocell tone](http://vimeo.com/6990458) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code is to check the range of the photocells\n\n*<span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }* This code uses the 2 photocells to make a thermin *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\">[http://code.google.com/p/arduino-tone/](http://code.google.com/p/arduino-tone/)</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }*\n\nThis video shows using 3 analog resistors to make a make-shift instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab4 - Three analog inputs](http://vimeo.com/6990488) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n Here is the code\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor < 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }*\n\nFinally I made an instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Musical Instrument](http://vimeo.com/6990438) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n*#include <Tone.h>*  \n*Tone noiseMaker; // instance of the tone library*  \n*int notes[] = {*  \n*NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };*  \n*int durations[] = {*  \n*100, 100, 100, 100, 100};*  \n*void setup() {*  \n*// start the music:*  \n*noiseMaker.begin(8);*  \n*Serial.begin(9600);*  \n*}*  \n*void loop() {*  \n*int pot = analogRead(5);*  \n*pot = pot/4;*  \n*Serial.println(pot);*  \n*//depending on were the pot is play series of tones at differnt pitches*  \n*if(pot > 204){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[0]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*}*  \n*else if((pot < 204) && (pot > 153)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[1]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 153) && (pot > 102)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[2]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 102) && (pot > 51)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[3]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 51) && (pot >= 0)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[4]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n }  \n*// hold before repeating:*  \n*}*  \n*}*  \n**  \n Now using the servo\n\nThe servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.\n\n**\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Using Pulse code](http://vimeo.com/6990504) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code does not use the arduino servo library\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw & Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\">*/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Using Servo Library](http://vimeo.com/6990466) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com). *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include <<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *\n\n\n","html":"<p>The breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990458\">Physcomp Lab4 – Photocell tone</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code is to check the range of the photocells</p>\n\n<p><em><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }</em> This code uses the 2 photocells to make a thermin <em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\"><a href=\"http://code.google.com/p/arduino-tone/\">http://code.google.com/p/arduino-tone/</a></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }</em></p>\n\n<p>This video shows using 3 analog resistors to make a make-shift instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990488\">Phsycomp Lab4 - Three analog inputs</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n Here is the code</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor &lt; 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }</em></p>\n\n<p>Finally I made an instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990438\">Physcomp Lab4 - Musical Instrument</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n<em>#include <Tone.h></em> <br />\n<em>Tone noiseMaker; // instance of the tone library</em> <br />\n<em>int notes[] = {</em> <br />\n<em>NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };</em> <br />\n<em>int durations[] = {</em> <br />\n<em>100, 100, 100, 100, 100};</em> <br />\n<em>void setup() {</em> <br />\n<em>// start the music:</em> <br />\n<em>noiseMaker.begin(8);</em> <br />\n<em>Serial.begin(9600);</em> <br />\n<em>}</em> <br />\n<em>void loop() {</em> <br />\n<em>int pot = analogRead(5);</em> <br />\n<em>pot = pot/4;</em> <br />\n<em>Serial.println(pot);</em> <br />\n<em>//depending on were the pot is play series of tones at differnt pitches</em> <br />\n<em>if(pot > 204){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[0]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 204) &amp;&amp; (pot > 153)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[1]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 153) &amp;&amp; (pot > 102)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[2]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 102) &amp;&amp; (pot > 51)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[3]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 51) &amp;&amp; (pot >= 0)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[4]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n } <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n** <br />\n Now using the servo</p>\n\n<p>The servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.</p>\n\n<p>**</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990504\">Physcomp Lab4 – Using Pulse code</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code does not use the arduino servo library</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw &amp; Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\"><em>/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990466\">Physcomp Lab4 - Using Servo Library</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. *<span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include &lt;<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255210186000,"created_by":1,"updated_at":1396136072000,"updated_by":1,"published_at":null,"published_by":1},{"id":168,"uuid":"ecfd2a6e-7986-4520-b51a-ca7713e238ac","title":"Stupid Pet Trick: The Nurse Station","slug":"stupid-pet-trick-the-nurse-station-2","markdown":"\nThe Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: The Nurse Station](http://vimeo.com/7003116) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: Internals](http://vimeo.com/7003141) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nHere is the code\n\n*#include <Servo.h>  \n Servo servoMotor;*\n\n*int fsrPin = 0; // Analog input pin that the potentiometer is attached to  \n int fsrValue = 0; // value read from the pot  \n int fsrRef = 10; // value read from the pot  \n int redLed = 4;  \n int yellowLed = 3;  \n int greenLed = 2;  \n int servoPin = 8;  \n long time = 0;  \n long lastTime = 0;  \n boolean setTime=true;*\n\n*void setup() {  \n // initialize serial communications at 9600 bps:  \n Serial.begin(9600);  \n // declare the led pin as an output:  \n pinMode(redLed, OUTPUT);  \n pinMode(greenLed, OUTPUT);  \n pinMode(yellowLed, OUTPUT);  \n //pinMode(speakerPin, OUTPUT);  \n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin  \n // pulse = minPulse;  \n servoMotor.attach(servoPin);  \n //noiseMaker.begin(9);*\n\n*}*\n\n*void loop() {*\n\n*fsrValue = analogRead(fsrPin); // read the pot value  \n Serial.println(fsrValue);  \n if(fsrValue < 60){  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n digitalWrite(greenLed, LOW);  \n // Serial.println(“this is when the fsr is not pressed”);  \n //Serial.println(time);  \n servoMotor.write(0);  \n setTime=true;  \n // Serial.println(lastTime);*\n\n*}*\n\n*if(fsrValue > 60 && setTime == true){  \n lastTime= millis();  \n //Serial.println(“START TIMER”);  \n setTime=false;  \n //Serial.println(lastTime);  \n }*\n\n*if(fsrValue > 60) {  \n if(millis() – lastTime < 5000){  \n digitalWrite(greenLed, HIGH);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n servoMotor.write(27);*\n\n*}  \n if((millis() – lastTime >= 5000) && (millis() – lastTime <10000)){*\n\n*digitalWrite(greenLed, LOW);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, HIGH);  \n servoMotor.write(50);  \n // Serial.println(“TEN SECOND LOOP”);  \n //Serial.println(lastTime);  \n }*\n\n*if (millis() – lastTime >= 10000 ){  \n //Serial.println(“20 SECOND LOOP”);*\n\n*digitalWrite(yellowLed, LOW);  \n digitalWrite(redLed, HIGH);  \n digitalWrite(greenLed, LOW);  \n servoMotor.write(75);  \n //Serial.println(lastTime);  \n }  \n delay(100);  \n }*\n\n*//Serial.println(lastTime);  \n }*\n\nThe next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.\n\n\n","html":"<p>The Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003116\">Stupid Pet Trick: The Nurse Station</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003141\">Stupid Pet Trick: Internals</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Here is the code</p>\n\n<p><em>#include <Servo.h> <br />\n Servo servoMotor;</em></p>\n\n<p><em>int fsrPin = 0; // Analog input pin that the potentiometer is attached to <br />\n int fsrValue = 0; // value read from the pot <br />\n int fsrRef = 10; // value read from the pot <br />\n int redLed = 4; <br />\n int yellowLed = 3; <br />\n int greenLed = 2; <br />\n int servoPin = 8; <br />\n long time = 0; <br />\n long lastTime = 0; <br />\n boolean setTime=true;</em></p>\n\n<p><em>void setup() { <br />\n // initialize serial communications at 9600 bps: <br />\n Serial.begin(9600); <br />\n // declare the led pin as an output: <br />\n pinMode(redLed, OUTPUT); <br />\n pinMode(greenLed, OUTPUT); <br />\n pinMode(yellowLed, OUTPUT); <br />\n //pinMode(speakerPin, OUTPUT); <br />\n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin <br />\n // pulse = minPulse; <br />\n servoMotor.attach(servoPin); <br />\n //noiseMaker.begin(9);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void loop() {</em></p>\n\n<p><em>fsrValue = analogRead(fsrPin); // read the pot value <br />\n Serial.println(fsrValue); <br />\n if(fsrValue &lt; 60){ <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n digitalWrite(greenLed, LOW); <br />\n // Serial.println(“this is when the fsr is not pressed”); <br />\n //Serial.println(time); <br />\n servoMotor.write(0); <br />\n setTime=true; <br />\n // Serial.println(lastTime);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>if(fsrValue > 60 &amp;&amp; setTime == true){ <br />\n lastTime= millis(); <br />\n //Serial.println(“START TIMER”); <br />\n setTime=false; <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if(fsrValue > 60) { <br />\n if(millis() – lastTime &lt; 5000){ <br />\n digitalWrite(greenLed, HIGH); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n servoMotor.write(27);</em></p>\n\n<p><em>} <br />\n if((millis() – lastTime >= 5000) &amp;&amp; (millis() – lastTime &lt;10000)){</em></p>\n\n<p><em>digitalWrite(greenLed, LOW); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, HIGH); <br />\n servoMotor.write(50); <br />\n // Serial.println(“TEN SECOND LOOP”); <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if (millis() – lastTime >= 10000 ){ <br />\n //Serial.println(“20 SECOND LOOP”);</em></p>\n\n<p><em>digitalWrite(yellowLed, LOW); <br />\n digitalWrite(redLed, HIGH); <br />\n digitalWrite(greenLed, LOW); <br />\n servoMotor.write(75); <br />\n //Serial.println(lastTime); <br />\n } <br />\n delay(100); <br />\n }</em></p>\n\n<p><em>//Serial.println(lastTime); <br />\n }</em></p>\n\n<p>The next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255211616000,"created_by":1,"updated_at":1396136102000,"updated_by":1,"published_at":1255211616000,"published_by":1},{"id":169,"uuid":"2105dadd-e906-4113-8842-567d090f0157","title":"ICM Week5 XML and Processing","slug":"icm-week5-xml-and-processing-2","markdown":"\nThis project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.\n\n![week5](http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\")\n\nHere is the code\n\n[Main code](http://www.zevenwolf.com/itp/icm/week5/week5_2.pde)\n\n[Letter Object](http://www.zevenwolf.com/itp/icm/week5/letter.pde)\n\n*import simpleML.*;  \n letter[] table = new letter[26];  \n char[] rssTemp;  \n int rssLength = 0;  \n String[] headlines;  \n String headlinesTemp;  \n int row = 0;  \n int modInterval = 6;  \n int modNumber = 0;  \n int[] letterAmount = new int[26];  \n PFont f;  \n int letterPosX = 0;  \n int letterPosY = 0;*\n\n*void setup(){  \n size(635,480);  \n smooth();  \n background(255);  \n f = createFont( ” Arial ” ,3,true); // Loading font  \n for(int i = 0; i  \n*\n\n* if(i < 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) && (i<12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) && (i<18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) && (i<24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){  \n row = 384;  \n modNumber = i%modInterval;  \n table[i] = new letter( modNumber , row ,106,96);  \n }*\n\n* }*\n\n* //end of array parsing  \n XMLRequest xreq = new XMLRequest(this,”http://rss.netflix.com/Top100RSS”);  \n xreq.makeRequest();*\n\n*}*\n\n*void draw(){  \n for(int i = 0; i  \n 0){  \n for(int i =0; i< rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 && c <= 122) {  \n letterAmount[c-97]++;  \n }  \n //println(c);  \n }// end of i for loop*\n\n* }//end of b loop*\n\n* for(int i = 0; i < letterAmount.length; i++){  \n //println((char) (z+97) + ” ” + letterAmount[z]);  \n table[i].setAmount(letterAmount[i]);*\n\n* textFont(f,16);  \n textAlign(LEFT);  \n text(letterAmount[i],letterPosX + 10,letterPosY +10);  \n /*  \n if(i < 6){ letterPosY = 0; letterPosX = i*106; } if((i >=6) && (i<12)){ letterPosY = 96; letterPosX = ((i%modInterval)*106); } if((i >=12) && (i<18)){ letterPosY = 192; letterPosX = ((i%modInterval)*106); } if((i >=18) && (i<24)){ letterPosY = 288; letterPosX = ((i%modInterval)*106); } if(i>=24){  \n letterPosY = 384;  \n letterPosX = ((i%modInterval)*106);*\n\n* }*\n\n* */*\n\n* }*\n\n*}*\n\n*Letter Object*\n\n*class letter{  \n float x;  \n float y;  \n float letterWidth;  \n float letterHeight;*\n\n*int totalAmount = 0;*\n\n*letter(float tempX, float tempY, float widthLetter, float heightLetter){*\n\n*x = tempX;  \n y = tempY;  \n letterWidth = widthLetter;  \n letterHeight = heightLetter;*\n\n*}*\n\n*void display(){*\n\n*fill(totalAmount);  \n noStroke();  \n rect(x*106,y,letterWidth,letterHeight);  \n }*\n\n*/*  \n void letterdisplay(char letterBig){  \n //takes in a letter and displays it at the top right with a margin of 10  \n textFont(f,16);  \n textAlign(LEFT);  \n text(letterBig,x*106 + 10,y +10);*\n\n*}*/  \n void setAmount(int tempAmount){*\n\n*totalAmount = tempAmount;  \n /*  \n takes the total amount and displays it*\n\n**/*\n\n*}*\n\n*}*\n\n**\n\n\n","html":"<p>This project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\"\" alt=\"week5\" /></p>\n\n<p>Here is the code</p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/week5_2.pde\">Main code</a></p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/letter.pde\">Letter Object</a></p>\n\n<p><em>import simpleML.</em>; <br />\n letter[] table = new letter[26]; <br />\n char[] rssTemp; <br />\n int rssLength = 0; <br />\n String[] headlines; <br />\n String headlinesTemp; <br />\n int row = 0; <br />\n int modInterval = 6; <br />\n int modNumber = 0; <br />\n int[] letterAmount = new int[26]; <br />\n PFont f; <br />\n int letterPosX = 0; <br />\n int letterPosY = 0;*</p>\n\n<p>*void setup(){ <br />\n size(635,480); <br />\n smooth(); <br />\n background(255); <br />\n f = createFont( ” Arial ” ,3,true); // Loading font <br />\n for(int i = 0; i <br />\n*</p>\n\n<ul>\n<li><p>if(i &lt; 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) &amp;&amp; (i&lt;12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) &amp;&amp; (i&lt;18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) &amp;&amp; (i&lt;24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){ <br />\nrow = 384; <br />\nmodNumber = i%modInterval; <br />\ntable[i] = new letter( modNumber , row ,106,96); <br />\n}*</p></li>\n<li><p>}*</p></li>\n<li><p>//end of array parsing <br />\nXMLRequest xreq = new XMLRequest(this,”<a href=\"http://rss.netflix.com/Top100RSS”\">http://rss.netflix.com/Top100RSS”</a>); <br />\nxreq.makeRequest();*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>void draw(){ <br />\n for(int i = 0; i <br />\n 0){ <br />\n for(int i =0; i&lt; rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 &amp;&amp; c &lt;= 122) { <br />\n letterAmount[c-97]++; <br />\n } <br />\n //println(c); <br />\n }// end of i for loop</em></p>\n\n<ul>\n<li><p>}//end of b loop*</p></li>\n<li><p>for(int i = 0; i &lt; letterAmount.length; i++){ <br />\n//println((char) (z+97) + ” ” + letterAmount[z]); <br />\ntable[i].setAmount(letterAmount[i]);*</p></li>\n<li><p>textFont(f,16); <br />\ntextAlign(LEFT); <br />\ntext(letterAmount[i],letterPosX + 10,letterPosY +10); <br />\n/* <br />\nif(i &lt; 6){ letterPosY = 0; letterPosX = i<em>106; } if((i >=6) &amp;&amp; (i&lt;12)){ letterPosY = 96; letterPosX = ((i%modInterval)</em>106); } if((i >=12) &amp;&amp; (i&lt;18)){ letterPosY = 192; letterPosX = ((i%modInterval)<em>106); } if((i >=18) &amp;&amp; (i&lt;24)){ letterPosY = 288; letterPosX = ((i%modInterval)</em>106); } if(i>=24){ <br />\nletterPosY = 384; <br />\nletterPosX = ((i%modInterval)<em>106);</em></p></li>\n<li><p>}*</p></li>\n<li><p><em>/</em></p></li>\n<li><p>}*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>Letter Object</em></p>\n\n<p><em>class letter{ <br />\n float x; <br />\n float y; <br />\n float letterWidth; <br />\n float letterHeight;</em></p>\n\n<p><em>int totalAmount = 0;</em></p>\n\n<p><em>letter(float tempX, float tempY, float widthLetter, float heightLetter){</em></p>\n\n<p><em>x = tempX; <br />\n y = tempY; <br />\n letterWidth = widthLetter; <br />\n letterHeight = heightLetter;</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void display(){</em></p>\n\n<p><em>fill(totalAmount); <br />\n noStroke(); <br />\n rect(x</em>106,y,letterWidth,letterHeight); <br />\n }*</p>\n\n<p><em>/</em> <br />\n void letterdisplay(char letterBig){ <br />\n //takes in a letter and displays it at the top right with a margin of 10 <br />\n textFont(f,16); <br />\n textAlign(LEFT); <br />\n text(letterBig,x<em>106 + 10,y +10);</em></p>\n\n<p><em>}</em>/ <br />\n void setAmount(int tempAmount){*</p>\n\n<p><em>totalAmount = tempAmount; <br />\n /</em> <br />\n takes the total amount and displays it*</p>\n\n<p><em>*/</em></p>\n\n<p><em>}</em></p>\n\n<p><em>}</em></p>\n\n<p>**</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255506019000,"created_by":1,"updated_at":1396136113000,"updated_by":1,"published_at":null,"published_by":1},{"id":170,"uuid":"1f903982-2c2f-4d82-935e-891248576b34","title":"Physcomp Lab6 - Serial Communication","slug":"physcomp-lab6-serial-communication-2","markdown":"\nUsing Serial Communication with Arduino and Processing was not too bad.\n\nThe arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.\n\n<span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }\n\nOnce you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code.  \n import processing.serial.*;\n\nSerial myPort; // The serial port  \n int graphXPos = 1; // the horizontal position of the graph:  \n float randNum = 0;  \n void setup () {  \n size(640, 480); // window size\n\n// List all the available serial ports  \n println(Serial.list());  \n // I know that the fisrt port in the serial list on my mac  \n // is usually my Arduino module, so I open Serial.list()[0].  \n // Open whatever port is the one you’re using.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// set inital background:  \n background(255);  \n smooth();  \n }  \n void draw () {  \n // nothing happens in draw. It all happens in SerialEvent()  \n }\n\nvoid serialEvent (Serial myPort) {  \n // get the byte:  \n int inByte = myPort.read();  \n randNum = random(255);  \n // print it:  \n println(inByte);  \n // set the drawing color. Pick a pretty color:  \n fill(randNum, randNum);  \n noStroke();  \n // draw the ellipse:  \n ellipse(graphXPos, inByte*2, 100, 100);\n\n// at the edge of the screen, go back to the beginning:  \n if (graphXPos >= width) {  \n graphXPos = 0;\n\n}  \n else {  \n // increment the horizontal position for the next reading:  \n graphXPos++;  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab6 – Serial Communication](http://vimeo.com/7165637) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>Using Serial Communication with Arduino and Processing was not too bad.</p>\n\n<p>The arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.</p>\n\n<p><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }</p>\n\n<p>Once you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code. <br />\n import processing.serial.*;</p>\n\n<p>Serial myPort; // The serial port <br />\n int graphXPos = 1; // the horizontal position of the graph: <br />\n float randNum = 0; <br />\n void setup () { <br />\n size(640, 480); // window size</p>\n\n<p>// List all the available serial ports <br />\n println(Serial.list()); <br />\n // I know that the fisrt port in the serial list on my mac <br />\n // is usually my Arduino module, so I open Serial.list()[0]. <br />\n // Open whatever port is the one you’re using. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// set inital background: <br />\n background(255); <br />\n smooth(); <br />\n } <br />\n void draw () { <br />\n // nothing happens in draw. It all happens in SerialEvent() <br />\n }</p>\n\n<p>void serialEvent (Serial myPort) { <br />\n // get the byte: <br />\n int inByte = myPort.read(); <br />\n randNum = random(255); <br />\n // print it: <br />\n println(inByte); <br />\n // set the drawing color. Pick a pretty color: <br />\n fill(randNum, randNum); <br />\n noStroke(); <br />\n // draw the ellipse: <br />\n ellipse(graphXPos, inByte*2, 100, 100);</p>\n\n<p>// at the edge of the screen, go back to the beginning: <br />\n if (graphXPos >= width) { <br />\n graphXPos = 0;</p>\n\n<p>} <br />\n else { <br />\n // increment the horizontal position for the next reading: <br />\n graphXPos++; <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7165637\">Physcomp Lab6 – Serial Communication</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256047253000,"created_by":1,"updated_at":1396136121000,"updated_by":1,"published_at":null,"published_by":1},{"id":171,"uuid":"8b4b76fb-dbc8-4975-9834-0b14d940bccd","title":"Observation: The Brita Filter","slug":"observation-the-brita-filter-2","markdown":"\nObservation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.\n\n![filter](http://zevenwolf.com/itp/uploads/filter.jpg \"filter\")\n\nReaction\n\nThe piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.\n\nI think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.\n\n\n","html":"<p>Observation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/filter.jpg \"filter\"\" alt=\"filter\" /></p>\n\n<p>Reaction</p>\n\n<p>The piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.</p>\n\n<p>I think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256084418000,"created_by":1,"updated_at":1396136128000,"updated_by":1,"published_at":null,"published_by":1},{"id":172,"uuid":"4223bd9e-9ca6-4adc-beb8-f302209df95f","title":"Lab 7 - Serial Communication 2 and Handshaking","slug":"lab-7-serial-communication-2-and-handshaking-2","markdown":"\nFor this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.\n\nThis arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.\n\n***Arduino Code***\n\nint analogOne = 0; // analog input  \n int analogTwo = 1; // analog input  \n int analogThree = 2; // digital input\n\nint sensorValue = 0; // reading from the sensor\n\nvoid setup() {  \n // configure the serial connection:  \n Serial.begin(9600);  \n // configure the digital input:  \n // pinMode(digitalOne, INPUT);  \n establishContact();  \n }\n\nvoid loop() {  \n if(Serial.available()>0){  \n // read the sensor:  \n sensorValue = analogRead(analogOne);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogTwo);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogThree);  \n // print the last sensor value with a println() so that  \n // each set of four readings prints on a line by itself:  \n Serial.println(sensorValue, DEC);  \n }  \n }  \n void establishContact() {  \n while (Serial.available() <= 0) {  \n Serial.println(“hello”); // send a starting message  \n delay(300);  \n }  \n }\n\n***Processing Code***  \n import processing.serial.*; // import the Processing serial library  \n Serial myPort; // The serial port\n\nfloat bgcolor; // Background color  \n float fgcolor; // Fill color  \n float xpos, ypos; // Starting position of the ball  \n boolean firstContact = false; // Whether we’ve heard from the microcontroller\n\nvoid setup() {  \n size(640,480);  \n background(255);  \n smooth();  \n // List all the available serial ports  \n println(Serial.list());\n\n// I know that the first port in the serial list on my mac  \n // is always my Arduino module, so I open Serial.list()[0].  \n // Change the 0 to the appropriate number of the serial port  \n // that your microcontroller is attached to.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// read bytes into a buffer until you get a linefeed (ASCII 10):  \n myPort.bufferUntil(‘n’);\n\n}\n\nvoid draw() {\n\nfill(random(255),fgcolor,random(255), random(255));  \n noStroke();  \n // Draw the shape  \n ellipse(xpos, ypos, 100, 100);  \n }\n\n// serialEvent method is run automatically by the Processing applet  \n // whenever the buffer reaches the byte value set in the bufferUntil()  \n // method in the setup():\n\nvoid serialEvent(Serial myPort) {  \n // read the serial buffer:  \n String myString = myPort.readStringUntil(‘n’);  \n // if you got any bytes other than the linefeed:  \n if (myString != null) {\n\nmyString = trim(myString);\n\nif (firstContact == false) {  \n if (myString.equals(“hello”)) {  \n myPort.clear(); // clear the serial port buffer  \n firstContact = true; // you’ve had first contact from the microcontroller  \n myPort.write(‘A’); // ask for more  \n }  \n }\n\nelse{\n\n// split the string at the commas  \n // and convert the sections into integers:  \n int sensors[] = int(split(myString, ‘,’));\n\n// print out the values you got:  \n for (int sensorNum = 0; sensorNum < sensors.length; sensorNum++) {  \n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”);  \n }  \n // add a linefeed after all the sensor values are printed:  \n println();  \n if (sensors.length > 1) {  \n xpos = map(sensors[0], 0,400,0,width/2);  \n ypos = map(sensors[1], 0,400,0,height/2);  \n fgcolor = sensors[2] / 4;  \n }\n\n}  \n myPort.write(“A”);  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab7 – Serial Lab 2](http://vimeo.com/7302074) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>For this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.</p>\n\n<p>This arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.</p>\n\n<p><strong><em>Arduino Code</em></strong></p>\n\n<p>int analogOne = 0; // analog input <br />\n int analogTwo = 1; // analog input <br />\n int analogThree = 2; // digital input</p>\n\n<p>int sensorValue = 0; // reading from the sensor</p>\n\n<p>void setup() { <br />\n // configure the serial connection: <br />\n Serial.begin(9600); <br />\n // configure the digital input: <br />\n // pinMode(digitalOne, INPUT); <br />\n establishContact(); <br />\n }</p>\n\n<p>void loop() { <br />\n if(Serial.available()>0){ <br />\n // read the sensor: <br />\n sensorValue = analogRead(analogOne); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogTwo); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogThree); <br />\n // print the last sensor value with a println() so that <br />\n // each set of four readings prints on a line by itself: <br />\n Serial.println(sensorValue, DEC); <br />\n } <br />\n } <br />\n void establishContact() { <br />\n while (Serial.available() &lt;= 0) { <br />\n Serial.println(“hello”); // send a starting message <br />\n delay(300); <br />\n } <br />\n }</p>\n\n<p><strong><em>Processing Code</em></strong> <br />\n import processing.serial.*; // import the Processing serial library <br />\n Serial myPort; // The serial port</p>\n\n<p>float bgcolor; // Background color <br />\n float fgcolor; // Fill color <br />\n float xpos, ypos; // Starting position of the ball <br />\n boolean firstContact = false; // Whether we’ve heard from the microcontroller</p>\n\n<p>void setup() { <br />\n size(640,480); <br />\n background(255); <br />\n smooth(); <br />\n // List all the available serial ports <br />\n println(Serial.list());</p>\n\n<p>// I know that the first port in the serial list on my mac <br />\n // is always my Arduino module, so I open Serial.list()[0]. <br />\n // Change the 0 to the appropriate number of the serial port <br />\n // that your microcontroller is attached to. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// read bytes into a buffer until you get a linefeed (ASCII 10): <br />\n myPort.bufferUntil(‘n’);</p>\n\n<p>}</p>\n\n<p>void draw() {</p>\n\n<p>fill(random(255),fgcolor,random(255), random(255)); <br />\n noStroke(); <br />\n // Draw the shape <br />\n ellipse(xpos, ypos, 100, 100); <br />\n }</p>\n\n<p>// serialEvent method is run automatically by the Processing applet <br />\n // whenever the buffer reaches the byte value set in the bufferUntil() <br />\n // method in the setup():</p>\n\n<p>void serialEvent(Serial myPort) { <br />\n // read the serial buffer: <br />\n String myString = myPort.readStringUntil(‘n’); <br />\n // if you got any bytes other than the linefeed: <br />\n if (myString != null) {</p>\n\n<p>myString = trim(myString);</p>\n\n<p>if (firstContact == false) { <br />\n if (myString.equals(“hello”)) { <br />\n myPort.clear(); // clear the serial port buffer <br />\n firstContact = true; // you’ve had first contact from the microcontroller <br />\n myPort.write(‘A’); // ask for more <br />\n } <br />\n }</p>\n\n<p>else{</p>\n\n<p>// split the string at the commas <br />\n // and convert the sections into integers: <br />\n int sensors[] = int(split(myString, ‘,’));</p>\n\n<p>// print out the values you got: <br />\n for (int sensorNum = 0; sensorNum &lt; sensors.length; sensorNum++) { <br />\n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”); <br />\n } <br />\n // add a linefeed after all the sensor values are printed: <br />\n println(); <br />\n if (sensors.length > 1) { <br />\n xpos = map(sensors[0], 0,400,0,width/2); <br />\n ypos = map(sensors[1], 0,400,0,height/2); <br />\n fgcolor = sensors[2] / 4; <br />\n }</p>\n\n<p>} <br />\n myPort.write(“A”); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7302074\">Physcomp Lab7 – Serial Lab 2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256687500000,"created_by":1,"updated_at":1396136142000,"updated_by":1,"published_at":null,"published_by":1},{"id":173,"uuid":"10f320bd-789a-4f62-8da9-57729acb47da","title":"ICM Midterm Project","slug":"icm-midterm-project-2","markdown":"\nFor my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: [http://www.zevenrodriguez.com/itp/icm/midterm/](http://www.zevenrodriguez.com/itp/icm/midterm/)\n\nThis would be the first prompt\n\n![firstpage](http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\")\n\nAfter to press start it should either take a video capture or a image of you and create the display below\n\n![output](http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\")\n\n\n","html":"<p>For my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: <a href=\"http://www.zevenrodriguez.com/itp/icm/midterm/\">http://www.zevenrodriguez.com/itp/icm/midterm/</a></p>\n\n<p>This would be the first prompt</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\"\" alt=\"firstpage\" /></p>\n\n<p>After to press start it should either take a video capture or a image of you and create the display below</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\"\" alt=\"output\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256732391000,"created_by":1,"updated_at":1396136182000,"updated_by":1,"published_at":1256732391000,"published_by":1},{"id":174,"uuid":"cbe9f142-26a0-4dd6-86f1-97fbaf0de625","title":"PComp Midterm-MIDI Light Table: Making the table","slug":"pcomp-midterm-midi-light-table-making-the-table-2","markdown":"\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nFor our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Midterm – MIDI Light Table](http://vimeo.com/7494936) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nOne day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.\n\n![1cardboardframe](http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\")\n\nWe decided to use foil to help with the diffusion of light.\n\n![2wiredandfoiled](http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\")\n\nAfter soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.\n\n![3juliofirstwiring](http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\")\n\nWe decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.![4woodtrackwithredlightsonly](http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg \"4woodtrackwithredlightsonly\")\n\nThe wooden block between the tracks contains bearings which help guide the wood easier along the tracks.\n\n![5woodtrackcloseup](http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\")\n\nWe used a resistor ladder to control the brightness of the lights.\n\n![6resistorladderforlights](http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\")\n\nDue to the high friction and the lack of rigidity of wood, metal was used to fix this issue.\n\n![7usingmetal](http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\")\n\nThis was the first time we started testing the brightness of the LEDs and the readings from the photocells.\n\n![8lightgradationtest](http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\")\n\nWe decided to use 2 photocells per cell because after trying one per cell we were getting better readings.\n\n![10undertheobject](http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\")\n\nAfter the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.![11vellumgradtest](http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg \"11vellumgradtest\")The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.\n\n![12aftertheladder](http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\")\n\nAfter testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.\n\n![13testing](http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\")\n\nHere are Julio and Mike doing some testing and calibration.\n\n![14theguystesting](http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\")\n\nThis is the final pot ladder for the lights.\n\n![15finalptladder](http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\")\n\nThis is was the lights looked like when they were tuned.\n\n![16itsworkingkinda](http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\")\n\nOur puck turned out to be a cool little mascot\n\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nIn the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit [Julio Terra’s blog](http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp)\n\n\n","html":"<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>For our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494936\">Physcomp Midterm – MIDI Light Table</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>One day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\"\" alt=\"1cardboardframe\" /></p>\n\n<p>We decided to use foil to help with the diffusion of light.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\"\" alt=\"2wiredandfoiled\" /></p>\n\n<p>After soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\"\" alt=\"3juliofirstwiring\" /></p>\n\n<p>We decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.<img src=\"http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg\" alt=\"4woodtrackwithredlightsonly\" title=\"4woodtrackwithredlightsonly\" /></p>\n\n<p>The wooden block between the tracks contains bearings which help guide the wood easier along the tracks.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\"\" alt=\"5woodtrackcloseup\" /></p>\n\n<p>We used a resistor ladder to control the brightness of the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\"\" alt=\"6resistorladderforlights\" /></p>\n\n<p>Due to the high friction and the lack of rigidity of wood, metal was used to fix this issue.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\"\" alt=\"7usingmetal\" /></p>\n\n<p>This was the first time we started testing the brightness of the LEDs and the readings from the photocells.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\"\" alt=\"8lightgradationtest\" /></p>\n\n<p>We decided to use 2 photocells per cell because after trying one per cell we were getting better readings.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\"\" alt=\"10undertheobject\" /></p>\n\n<p>After the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.<img src=\"http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg\" alt=\"11vellumgradtest\" title=\"11vellumgradtest\" />The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\"\" alt=\"12aftertheladder\" /></p>\n\n<p>After testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\"\" alt=\"13testing\" /></p>\n\n<p>Here are Julio and Mike doing some testing and calibration.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\"\" alt=\"14theguystesting\" /></p>\n\n<p>This is the final pot ladder for the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\"\" alt=\"15finalptladder\" /></p>\n\n<p>This is was the lights looked like when they were tuned.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\"\" alt=\"16itsworkingkinda\" /></p>\n\n<p>Our puck turned out to be a cool little mascot</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>In the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit <a href=\"http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp\">Julio Terra’s blog</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257378870000,"created_by":1,"updated_at":1396136195000,"updated_by":1,"published_at":1257378870000,"published_by":1},{"id":175,"uuid":"e79b5dce-93b9-4bf4-8e52-3a0f35b74077","title":"Physcomp Lab8 - Transistors and HBridge","slug":"physcomp-lab8-transistors-and-hbridge-2","markdown":"\nThis week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy.  \n![P1000245-w400](http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\")\n\nThis code is to program the arduino to speed up and slow done the motor.\n\n const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab8 – Transistor](http://vimeo.com/7495071) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nNow to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.\n\n![](http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg)This is my wiring.\n\n![P1000237-w400](http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\")\n\nHere is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.\n\nconst int switchPin = 2; // switch input  \n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A)  \n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A)  \n const int enablePin = 9; // H-bridge enable pin  \n const int ledPin = 13; // LED  \n int pot= 0;  \n int potValue = 0;  \n void setup() {  \n Serial.begin(9600);  \n // set the switch as an input:  \n pinMode(switchPin, INPUT);\n\n// set all the other pins you’re using as outputs:  \n pinMode(motor1Pin, OUTPUT);  \n pinMode(motor2Pin, OUTPUT);  \n pinMode(enablePin, OUTPUT);  \n pinMode(ledPin, OUTPUT);\n\n// set enablePin high so that motor can turn on:  \n //digitalWrite(enablePin, HIGH);\n\n// blink the LED 3 times. This should happen only once.  \n // if you see the LED blink three times, it means that the module  \n // reset itself,. probably because the motor caused a brownout  \n // or a short.  \n blink(ledPin, 3, 100);  \n }\n\nvoid loop() {  \n potValue = analogRead(pot);  \n Serial.println(potValue);\n\n// if the switch is high, motor will turn on one direction:  \n if (digitalRead(switchPin) == HIGH) {\n\nanalogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low  \n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high  \n }  \n // if the switch is low, motor will turn in the other direction:  \n else {  \n analogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high  \n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low  \n }  \n }\n\n/*  \n blinks an LED  \n */  \n void blink(int whatPin, int howManyTimes, int milliSecs) {  \n int i = 0;  \n for ( i = 0; i < howManyTimes; i++) {  \n digitalWrite(whatPin, HIGH);  \n delay(milliSecs/2);  \n digitalWrite(whatPin, LOW);  \n delay(milliSecs/2);  \n }  \n }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab8 – HBridge with Pot](http://vimeo.com/7494976) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy. <br />\n<img src=\"http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\"\" alt=\"P1000245-w400\" /></p>\n\n<p>This code is to program the arduino to speed up and slow done the motor.</p>\n\n<p>const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7495071\">Physcomp Lab8 – Transistor</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Now to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.</p>\n\n<p><img src=\"http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg\" alt=\"\" title=\"\" />This is my wiring.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\"\" alt=\"P1000237-w400\" /></p>\n\n<p>Here is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.</p>\n\n<p>const int switchPin = 2; // switch input <br />\n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A) <br />\n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A) <br />\n const int enablePin = 9; // H-bridge enable pin <br />\n const int ledPin = 13; // LED <br />\n int pot= 0; <br />\n int potValue = 0; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n // set the switch as an input: <br />\n pinMode(switchPin, INPUT);</p>\n\n<p>// set all the other pins you’re using as outputs: <br />\n pinMode(motor1Pin, OUTPUT); <br />\n pinMode(motor2Pin, OUTPUT); <br />\n pinMode(enablePin, OUTPUT); <br />\n pinMode(ledPin, OUTPUT);</p>\n\n<p>// set enablePin high so that motor can turn on: <br />\n //digitalWrite(enablePin, HIGH);</p>\n\n<p>// blink the LED 3 times. This should happen only once. <br />\n // if you see the LED blink three times, it means that the module <br />\n // reset itself,. probably because the motor caused a brownout <br />\n // or a short. <br />\n blink(ledPin, 3, 100); <br />\n }</p>\n\n<p>void loop() { <br />\n potValue = analogRead(pot); <br />\n Serial.println(potValue);</p>\n\n<p>// if the switch is high, motor will turn on one direction: <br />\n if (digitalRead(switchPin) == HIGH) {</p>\n\n<p>analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low <br />\n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high <br />\n } <br />\n // if the switch is low, motor will turn in the other direction: <br />\n else { <br />\n analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high <br />\n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low <br />\n } <br />\n }</p>\n\n<p>/* <br />\n blinks an LED <br />\n */ <br />\n void blink(int whatPin, int howManyTimes, int milliSecs) { <br />\n int i = 0; <br />\n for ( i = 0; i &lt; howManyTimes; i++) { <br />\n digitalWrite(whatPin, HIGH); <br />\n delay(milliSecs/2); <br />\n digitalWrite(whatPin, LOW); <br />\n delay(milliSecs/2); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494976\">Phsycomp Lab8 – HBridge with Pot</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257676898000,"created_by":1,"updated_at":1396136223000,"updated_by":1,"published_at":null,"published_by":1},{"id":176,"uuid":"70de8674-4991-46f7-9463-3e54bbc3b50a","title":"Pcomp Final Concept Drawing","slug":"pcomp-final-concept-drawing-2","markdown":"\nThe Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.\n\n![design](http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\")\n\n\n","html":"<p>The Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\"\" alt=\"design\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257891131000,"created_by":1,"updated_at":1396136274000,"updated_by":1,"published_at":1257891131000,"published_by":1},{"id":177,"uuid":"d8c95664-3569-448d-be44-9df59c356aee","title":"The Helper","slug":"thehelper-2","markdown":"\nThe helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.\n\n![design2](http://zevenwolf.com/blog/uploads/design2.jpg \"design2\")\n\nThe grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\">![For the controller we used bowls because they would be easier to rotate with the palm of your hand.](http://zevenwolf.com/blog/uploads/bowl1.jpg \"bowl1\")</dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\">![The controller was designed to be anbidextrous.](http://zevenwolf.com/blog/uploads/internaldesign.jpg \"internaldesign\")The controller was designed to be anbidextrous.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\">![We installed buttons to allow for preset commands such as \"Bring it to me\" and \"Grab item\"](http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg \"internalswithbuttons\")We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”\n\n</div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\">![This is before the controller was wired in to the breadboard and arduino.](http://zevenwolf.com/blog/uploads/controllerfinal.jpg \"controllerfinal\")This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\">![The helper is controlled by two 360 potentiometer and two lighted big buttons.](http://zevenwolf.com/blog/uploads/internalwiring.jpg \"internalwiring\")The helper is controlled by two 360 potentiometer and two lighted big buttons.\n\n</div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\">![Russ started with a cardboard mock up of how the grabber will operate.](http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg \"cardboard-mock-up\")Russ started with a cardboard mock up of how the grabber will operate.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\">![Parts are in for the Grabber and Servo for the Arm.](http://zevenwolf.com/blog/uploads/grabberparts.jpg \"grabberparts\")Parts are in for the Grabber and Servo for the Arm.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\">![The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.](http://zevenwolf.com/blog/uploads/grabberside1.jpg \"grabberside1\")The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\">![This is the top design of 1st interation of the grabber.](http://zevenwolf.com/blog/uploads/grabbertop1.jpg \"grabbertop1\")We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\">![This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.](http://zevenwolf.com/blog/uploads/grabbernew1.jpg \"grabbernew1\")This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\">![This is the side view of the interim design for the grabber.](http://zevenwolf.com/blog/uploads/grabbernewside.jpg \"grabbernewside\")This is the side view of the interim design for the grabber.\n\n</div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\">![One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.](http://zevenwolf.com/blog/uploads/redesigning-internals.jpg \"redesigning-internals\")One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\">![Quick test to see if the servo can lift the Grabber from it's new mounting point.](http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg \"grabberweightdistro\")Quick test to see if the servo can lift the Grabber from it’s new mounting point.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\">![Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.](http://zevenwolf.com/blog/uploads/smallservobefore.jpg \"smallservobefore\")Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\">![The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.](http://zevenwolf.com/blog/uploads/motorbracket.jpg \"motorbracket\")The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\">![This is the final version of the grabber.](http://zevenwolf.com/blog/uploads/grabberfinal.jpg \"grabberfinal\")This is the final version of the grabber. We are using a motor to drive the Grabber motion.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\">![We are using springs to lift the Grabber above the items it intends to grab.](http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg \"grabberwithsprings\")We are using springs to lift the Grabber above the items it intends to grab.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\">![Russ testing everything out.](http://zevenwolf.com/blog/uploads/russtest.jpg \"russtest\")Russ making sure everything works.\n\n</div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n</div>[Pcomp Final – The Helper](http://vimeo.com/8206417) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nCODE\n\n#include\n\nint analogPin0 = 0; // blue up and down  \n int analogPin1 = 1; // green left right pot  \n int analogPin2 = 2; // blue pot to control hbridge speed\n\n// pins for buttons  \n int redButton = 2; // red wire to pin 2  \n int greenButton = 5; // green wire to pin 5\n\n// pins for lights  \n int redLight = 10; // yellow wire to pin 10  \n int greenLight = 11; // white wire to pin 11\n\n// pins for motors  \n int servo1 = 6; // no color yet left right  \n int servo2 = 7; // no color yet up down  \n int motor1 = 9; // pulse pin for the hbridge\n\nint red = 0;  \n int green = 0;\n\nint analogSensorPin = 0; // select the input pin for the potentiometer  \n int analogSensorPin1 = 1; // select the input pin for the potentiometer\n\nint formerValue = 0;  \n int nowValue = 0;  \n float difference = 0;  \n float deg = 83;\n\nint formerValue1 = 0;  \n int nowValue1 = 0;  \n float difference1 = 0;  \n float deg1 = 0;\n\nServo updown;  \n Servo leftright;  \n void setup() {  \n Serial.begin(9600);  \n updown.attach(8);  \n leftright.attach(7);  \n pinMode(redButton, INPUT);  \n pinMode(greenButton,INPUT);  \n }\n\nvoid loop()  \n {  \n // read the value from the sensor:\n\n// this reads pot 1  \n nowValue = analogRead(analogSensorPin);  \n //Serial.print(“this is pot”);  \n //Serial.println(nowValue);  \n difference = nowValue – formerValue;\n\nif(abs(difference) > 500)  \n {  \n if(difference > 0)  \n {  \n difference = formerValue + (1023 – nowValue);  \n }  \n else  \n {  \n difference = (1023 – formerValue) + nowValue;  \n }  \n }\n\ndeg += difference / 30;\n\nif(deg < 0) { deg = 0; } else if(deg > 180)  \n {  \n deg = 180;  \n }\n\n// Serial.println(deg);\n\nformerValue = nowValue;\n\n// this reads pot 2  \n nowValue1 = analogRead(analogSensorPin1);  \n //Serial.print(“this is pot1″);  \n //Serial.println(nowValue1);  \n difference1 = nowValue1 – formerValue1;\n\nif(abs(difference1) > 500)  \n {  \n if(difference1 > 0)  \n {  \n difference1 = formerValue1 + (1023 – nowValue1);  \n }  \n else  \n {  \n difference1 = (1023 – formerValue1) + nowValue1;  \n }  \n }\n\ndeg1 += difference1 / 30;\n\nif(deg1 < 0) { deg1 = 0; } else if(deg1 > 180)  \n {  \n deg1 = 180;  \n }\n\n// Serial.println(deg1);\n\nformerValue = nowValue;\n\nupdown.write(deg);  \n Serial.println(deg);  \n leftright.write(deg1);\n\nred = digitalRead(redButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n green = digitalRead(greenButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n }\n\n\n","html":"<p>The helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/design2.jpg \"design2\"\" alt=\"design2\" /></p>\n\n<p>The grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\"><img src=\"http://zevenwolf.com/blog/uploads/bowl1.jpg\" alt=\"For the controller we used bowls because they would be easier to rotate with the palm of your hand.\" title=\"bowl1\" /></dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internaldesign.jpg\" alt=\"The controller was designed to be anbidextrous.\" title=\"internaldesign\" />The controller was designed to be anbidextrous.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg\" alt=\"We installed buttons to allow for preset commands such as &quot;Bring it to me&quot; and &quot;Grab item&quot;\" title=\"internalswithbuttons\" />We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”</p>\n\n<p></div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/controllerfinal.jpg\" alt=\"This is before the controller was wired in to the breadboard and arduino.\" title=\"controllerfinal\" />This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalwiring.jpg\" alt=\"The helper is controlled by two 360 potentiometer and two lighted big buttons.\" title=\"internalwiring\" />The helper is controlled by two 360 potentiometer and two lighted big buttons.</p>\n\n<p></div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg\" alt=\"Russ started with a cardboard mock up of how the grabber will operate.\" title=\"cardboard-mock-up\" />Russ started with a cardboard mock up of how the grabber will operate.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberparts.jpg\" alt=\"Parts are in for the Grabber and Servo for the Arm.\" title=\"grabberparts\" />Parts are in for the Grabber and Servo for the Arm.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberside1.jpg\" alt=\"The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\" title=\"grabberside1\" />The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbertop1.jpg\" alt=\"This is the top design of 1st interation of the grabber.\" title=\"grabbertop1\" />We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernew1.jpg\" alt=\"This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\" title=\"grabbernew1\" />This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernewside.jpg\" alt=\"This is the side view of the interim design for the grabber.\" title=\"grabbernewside\" />This is the side view of the interim design for the grabber.</p>\n\n<p></div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.\" title=\"grabberfirst-install\" />The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.\" title=\"grabberfirst-install\" />In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/redesigning-internals.jpg\" alt=\"One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.\" title=\"redesigning-internals\" />One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg\" alt=\"Quick test to see if the servo can lift the Grabber from it's new mounting point.\" title=\"grabberweightdistro\" />Quick test to see if the servo can lift the Grabber from it’s new mounting point.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/smallservobefore.jpg\" alt=\"Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\" title=\"smallservobefore\" />Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/motorbracket.jpg\" alt=\"The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\" title=\"motorbracket\" />The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfinal.jpg\" alt=\"This is the final version of the grabber.\" title=\"grabberfinal\" />This is the final version of the grabber. We are using a motor to drive the Grabber motion.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg\" alt=\"We are using springs to lift the Grabber above the items it intends to grab.\" title=\"grabberwithsprings\" />We are using springs to lift the Grabber above the items it intends to grab.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/russtest.jpg\" alt=\"Russ testing everything out.\" title=\"russtest\" />Russ making sure everything works.</p>\n\n<p></div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p></div><a href=\"http://vimeo.com/8206417\">Pcomp Final – The Helper</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>CODE</p>\n\n<h1 id=\"include\">include</h1>\n\n<p>int analogPin0 = 0; // blue up and down <br />\n int analogPin1 = 1; // green left right pot <br />\n int analogPin2 = 2; // blue pot to control hbridge speed</p>\n\n<p>// pins for buttons <br />\n int redButton = 2; // red wire to pin 2 <br />\n int greenButton = 5; // green wire to pin 5</p>\n\n<p>// pins for lights <br />\n int redLight = 10; // yellow wire to pin 10 <br />\n int greenLight = 11; // white wire to pin 11</p>\n\n<p>// pins for motors <br />\n int servo1 = 6; // no color yet left right <br />\n int servo2 = 7; // no color yet up down <br />\n int motor1 = 9; // pulse pin for the hbridge</p>\n\n<p>int red = 0; <br />\n int green = 0;</p>\n\n<p>int analogSensorPin = 0; // select the input pin for the potentiometer <br />\n int analogSensorPin1 = 1; // select the input pin for the potentiometer</p>\n\n<p>int formerValue = 0; <br />\n int nowValue = 0; <br />\n float difference = 0; <br />\n float deg = 83;</p>\n\n<p>int formerValue1 = 0; <br />\n int nowValue1 = 0; <br />\n float difference1 = 0; <br />\n float deg1 = 0;</p>\n\n<p>Servo updown; <br />\n Servo leftright; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n updown.attach(8); <br />\n leftright.attach(7); <br />\n pinMode(redButton, INPUT); <br />\n pinMode(greenButton,INPUT); <br />\n }</p>\n\n<p>void loop() <br />\n { <br />\n // read the value from the sensor:</p>\n\n<p>// this reads pot 1 <br />\n nowValue = analogRead(analogSensorPin); <br />\n //Serial.print(“this is pot”); <br />\n //Serial.println(nowValue); <br />\n difference = nowValue – formerValue;</p>\n\n<p>if(abs(difference) > 500) <br />\n { <br />\n if(difference > 0) <br />\n { <br />\n difference = formerValue + (1023 – nowValue); <br />\n } <br />\n else <br />\n { <br />\n difference = (1023 – formerValue) + nowValue; <br />\n } <br />\n }</p>\n\n<p>deg += difference / 30;</p>\n\n<p>if(deg &lt; 0) { deg = 0; } else if(deg > 180) <br />\n { <br />\n deg = 180; <br />\n }</p>\n\n<p>// Serial.println(deg);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>// this reads pot 2 <br />\n nowValue1 = analogRead(analogSensorPin1); <br />\n //Serial.print(“this is pot1″); <br />\n //Serial.println(nowValue1); <br />\n difference1 = nowValue1 – formerValue1;</p>\n\n<p>if(abs(difference1) > 500) <br />\n { <br />\n if(difference1 > 0) <br />\n { <br />\n difference1 = formerValue1 + (1023 – nowValue1); <br />\n } <br />\n else <br />\n { <br />\n difference1 = (1023 – formerValue1) + nowValue1; <br />\n } <br />\n }</p>\n\n<p>deg1 += difference1 / 30;</p>\n\n<p>if(deg1 &lt; 0) { deg1 = 0; } else if(deg1 > 180) <br />\n { <br />\n deg1 = 180; <br />\n }</p>\n\n<p>// Serial.println(deg1);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>updown.write(deg); <br />\n Serial.println(deg); <br />\n leftright.write(deg1);</p>\n\n<p>red = digitalRead(redButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n green = digitalRead(greenButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n }</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258494603000,"created_by":1,"updated_at":1396136290000,"updated_by":1,"published_at":1258494603000,"published_by":1},{"id":178,"uuid":"87c2b8eb-1669-46e2-be60-234980ac1a1b","title":"Solar Design Presentation","slug":"solar-design-presentation-2","markdown":"\n[Solar Design Presentation ](https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&hl=en)\n\n\n","html":"<p><a href=\"https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&amp;hl=en\">Solar Design Presentation </a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258745619000,"created_by":1,"updated_at":1396136335000,"updated_by":1,"published_at":1258745619000,"published_by":1},{"id":179,"uuid":"95c7745a-c1c9-4594-b807-70cc2faa5cb3","title":"ICM Final","slug":"icm-final-2","markdown":"\nI wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[ICM Final](http://vimeo.com/8209038) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>Here is the code for this project\n\n[final](http://zevenwolf.com/blog/icm/final.zip)\n\n\n","html":"<p>I wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/8209038\">ICM Final</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div>Here is the code for this project</p>\n\n<p><a href=\"http://zevenwolf.com/blog/icm/final.zip\">final</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1260917515000,"created_by":1,"updated_at":1396136345000,"updated_by":1,"published_at":1260917515000,"published_by":1},{"id":180,"uuid":"780e8e97-9f91-4859-8fa5-b4331635b649","title":"obra nueva","slug":"obra-nueva-2","markdown":"\nslsl\n\n\n","html":"<p>slsl</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1262792503000,"created_by":1,"updated_at":1390233393000,"updated_by":1,"published_at":null,"published_by":1},{"id":181,"uuid":"a1130965-4430-45be-a41c-8c3f774d8073","title":"Hospitable Room - Assignment 1","slug":"hospitable-room-assignment-1-2","markdown":"\nSo tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,\n\n[![](http://zevenwolf.com/blog/uploads/assignment1.jpg \"assignment1\")](http://zevenwolf.com/blog/uploads/assignment1.jpg)\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key == ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>\n","html":"<p>So tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\" alt=\"\" title=\"assignment1\" /></a></p>\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key <mark> ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key <mark> ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1264511262000,"created_by":1,"updated_at":1396136368000,"updated_by":1,"published_at":1264511262000,"published_by":1},{"id":182,"uuid":"886c5ff7-8b2c-4d9b-9aa3-2feba766fbc7","title":"Hospitable Room: Initial Pitch","slug":"hospitable-room-initial-pitch-2","markdown":"\nKatherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.\n\n[http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/](http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/ \"Initial Idea\")\n\n\n","html":"<p>Katherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/\" title=\"Initial Idea\">http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265116569000,"created_by":1,"updated_at":1396136403000,"updated_by":1,"published_at":null,"published_by":1},{"id":183,"uuid":"aff81a2a-e385-4690-ad59-f15e1a438fc2","title":"Wildlife/People Observation","slug":"wildlifepeople-observation-2","markdown":"\nWe went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected\n\n[Monkey observation](http://zevenwolf.com/blog/uploads/Monkey-observation.xls)\n\n\n","html":"<p>We went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/Monkey-observation.xls\">Monkey observation</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265208015000,"created_by":1,"updated_at":1396136421000,"updated_by":1,"published_at":null,"published_by":1},{"id":184,"uuid":"ef456ba3-d7f5-40ed-a443-0d2b8a43ec5d","title":"Pan-Ball Flute","slug":"pan-ball-flute-2","markdown":"\nThe Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers\n\n[![](http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg \"piezogenerator\")](http://zevenwolf.com/blog/uploads/piezogenerator.jpg)\n\n\n","html":"<p>The Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/piezogenerator.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg\" alt=\"\" title=\"piezogenerator\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265243492000,"created_by":1,"updated_at":1396136451000,"updated_by":1,"published_at":1265243492000,"published_by":1},{"id":185,"uuid":"32e76eee-7fb0-42ab-b89f-06f598b35c2f","title":"Reading and Writing Text Homework 1","slug":"reading-and-writing-text-homework-1-2","markdown":"\nFor this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.\n\nI started with\n\n*cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt*\n\nThis is how I combined multiple files.\n\nI ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5\n\n**This is the code for hwfeb05.py this code divides the poem in half**  \n [cc lang=\"python\"]  \n import sys\n\ncount = 0\n\nfor line in sys.stdin:\n\nline = line.strip()\n\nif count % 2 == 0:\n\noutput = line\n\nelse:\n\noutput = “”\n\nprint output\n\ncount += 1  \n [/cc]  \n Then I ran python Â hwfeb05replace.py< charles5.txt>charlesreplace.txt\n\n**Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.**  \n [cc lang=\"python\"]]  \n import sys\n\nfor line in sys.stdin:  \n line = line.strip()  \n line = line.replace(‘death’, ‘pandas’)  \n line = line.replace(‘corpses’, ‘puppies’)  \n line = line.replace(‘corpse’, ‘puppy’)  \n line = line.replace(‘drink’, ‘hug’)  \n line = line.replace(‘dark’, ‘puppy-eyed’)  \n line = line.replace(‘drinks’, ‘hugs’)  \n line = line.replace(‘ladies’, ‘unicorns’)  \n line = line.replace(‘lady’, ‘unicorn’)  \n line = line.replace(‘crime’,'party’)  \n line = line.replace(‘enemy’,'buddy’)  \n line = line.replace(‘enemies’,'buddies’)  \n line = line.replace(‘bar’,'playground’)  \n line = line.replace(‘alone’,'holding hands’)  \n line = line.replace(‘body’,'kitten’)  \n line = line.replace(‘bodies’,'kittens’)  \n print line\n\n[/cc]\n\nFinally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt\n\n[cc lang=\"python\"]  \n import sys  \n for line in sys.stdin:  \n line = line.strip()  \n offset = line.find(“pandas”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppies”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy”)  \n if offset != -1:  \n print line  \n offset = line.find(“hug”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy-eyed”)  \n if offset != -1:  \n print line  \n offset = line.find(“hugs”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorns”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorn”)  \n if offset != -1:  \n print line  \n offset = line.find(“party”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddy”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddies”)  \n if offset != -1:  \n print line  \n offset = line.find(“playground”)  \n if offset != -1:  \n print line  \n offset = line.find(“holding hands”)  \n if offset != -1:  \n print line  \n offset = line.find(“kitten”)  \n if offset != -1:  \n print line  \n offset = line.find(“kittens”)  \n if offset != -1:  \n print line\n\n[/cc]  \n That gave me this output:\n\n<div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines\n\n\n","html":"<p>For this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.</p>\n\n<p>I started with</p>\n\n<p><em>cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt</em></p>\n\n<p>This is how I combined multiple files.</p>\n\n<p>I ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5</p>\n\n<p><strong>This is the code for hwfeb05.py this code divides the poem in half</strong> <br />\n [cc lang=\"python\"] <br />\n import sys</p>\n\n<p>count = 0</p>\n\n<p>for line in sys.stdin:</p>\n\n<p>line = line.strip()</p>\n\n<p>if count % 2 == 0:</p>\n\n<p>output = line</p>\n\n<p>else:</p>\n\n<p>output = “”</p>\n\n<p>print output</p>\n\n<p>count += 1 <br />\n [/cc] <br />\n Then I ran python Â hwfeb05replace.py&lt; charles5.txt>charlesreplace.txt</p>\n\n<p><strong>Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.</strong> <br />\n [cc lang=\"python\"]] <br />\n import sys</p>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line = line.replace(‘death’, ‘pandas’) <br />\n line = line.replace(‘corpses’, ‘puppies’) <br />\n line = line.replace(‘corpse’, ‘puppy’) <br />\n line = line.replace(‘drink’, ‘hug’) <br />\n line = line.replace(‘dark’, ‘puppy-eyed’) <br />\n line = line.replace(‘drinks’, ‘hugs’) <br />\n line = line.replace(‘ladies’, ‘unicorns’) <br />\n line = line.replace(‘lady’, ‘unicorn’) <br />\n line = line.replace(‘crime’,'party’) <br />\n line = line.replace(‘enemy’,'buddy’) <br />\n line = line.replace(‘enemies’,'buddies’) <br />\n line = line.replace(‘bar’,'playground’) <br />\n line = line.replace(‘alone’,'holding hands’) <br />\n line = line.replace(‘body’,'kitten’) <br />\n line = line.replace(‘bodies’,'kittens’) <br />\n print line</p>\n\n<p>[/cc]</p>\n\n<p>Finally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n for line in sys.stdin: <br />\n line = line.strip() <br />\n offset = line.find(“pandas”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hug”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy-eyed”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hugs”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorns”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorn”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“party”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“playground”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“holding hands”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kitten”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kittens”) <br />\n if offset != -1: <br />\n print line</p>\n\n<p>[/cc] <br />\n That gave me this output:</p>\n\n<p><div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265385956000,"created_by":1,"updated_at":1396136480000,"updated_by":1,"published_at":1265385956000,"published_by":1},{"id":186,"uuid":"a52e6adc-629b-46db-8fae-134867438909","title":"Wildlife Tracking: RFID research","slug":"wildlife-tracking-rfid-research-2","markdown":"\nSo I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.\n\n**Active vs Passive**\n\n****Active  \n Power: Battery powered, average 7000 hrs **depending onÂ receiver*  \n Signal Strength needed: Low Signal  \n Range: up to 100m  \n Data Storage: 128kb read/write search and access to data\n\nPassive  \n Power: comes from RF reader  \n Signal Strength needed: High signal\n\nRange: 3-5m or less\n\nData Storage: 128 bytes of read/write\n\nDepending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in\n\nThis link is a diy aduino based RFID reader\n\n[http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/](http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/)\n\nThis is a couple of data sheets from different companies\n\n[http://www.ananiahelectronics.com/RF40315T-s.htm](http://www.ananiahelectronics.com/RF40315T-s.htm)\n\n[http://www.activewaveinc.com/products_datasheets.php](http://www.activewaveinc.com/products_datasheets.php)\n\n[http://cliste.sailwhatcom.com/catalog/1](http://cliste.sailwhatcom.com/catalog/1)\n\nThis link has standard pricing options\n\n[http://www.rfidexchange.com/purchasing.aspx](http://www.rfidexchange.com/purchasing.aspx)\n\nTracking Cows\n\n[http://www.zigbeef.com/index.html](http://www.zigbeef.com/index.html)\n\n\n","html":"<p>So I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.</p>\n\n<p><strong>Active vs Passive</strong></p>\n\n<p><em>*</em><em>Active <br />\n Power: Battery powered, average 7000 hrs *</em>depending onÂ receiver* <br />\n Signal Strength needed: Low Signal <br />\n Range: up to 100m <br />\n Data Storage: 128kb read/write search and access to data</p>\n\n<p>Passive <br />\n Power: comes from RF reader <br />\n Signal Strength needed: High signal</p>\n\n<p>Range: 3-5m or less</p>\n\n<p>Data Storage: 128 bytes of read/write</p>\n\n<p>Depending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in</p>\n\n<p>This link is a diy aduino based RFID reader</p>\n\n<p><a href=\"http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/\">http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/</a></p>\n\n<p>This is a couple of data sheets from different companies</p>\n\n<p><a href=\"http://www.ananiahelectronics.com/RF40315T-s.htm\">http://www.ananiahelectronics.com/RF40315T-s.htm</a></p>\n\n<p><a href=\"http://www.activewaveinc.com/products_datasheets.php\">http://www.activewaveinc.com/products_datasheets.php</a></p>\n\n<p><a href=\"http://cliste.sailwhatcom.com/catalog/1\">http://cliste.sailwhatcom.com/catalog/1</a></p>\n\n<p>This link has standard pricing options</p>\n\n<p><a href=\"http://www.rfidexchange.com/purchasing.aspx\">http://www.rfidexchange.com/purchasing.aspx</a></p>\n\n<p>Tracking Cows</p>\n\n<p><a href=\"http://www.zigbeef.com/index.html\">http://www.zigbeef.com/index.html</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265804026000,"created_by":1,"updated_at":1396136511000,"updated_by":1,"published_at":1265804026000,"published_by":1},{"id":187,"uuid":"0a2fa600-7325-430e-8516-c1f1a2bde8e1","title":"Solar Presentation","slug":"solar-presentation-2","markdown":"\n[Solar Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&amp;hl=en\">Solar Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266487280000,"created_by":1,"updated_at":1396136650000,"updated_by":1,"published_at":1266487280000,"published_by":1},{"id":188,"uuid":"cad7370e-ada1-45dd-9547-170ea6ac4823","title":"Python HW Feb 19 Reddit Headlines","slug":"python-hw-feb-19-reddit-headlines-2","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266596891000,"created_by":1,"updated_at":1396136770000,"updated_by":1,"published_at":null,"published_by":1},{"id":189,"uuid":"ff76d409-1d95-4bca-8ab9-460b8bee55df","title":"ASCII Art Presentation","slug":"ascii-art-presentation-2","markdown":"\n[ASCII Art Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&amp;hl=en\">ASCII Art Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267134108000,"created_by":1,"updated_at":1396136785000,"updated_by":1,"published_at":1267134108000,"published_by":1},{"id":190,"uuid":"1a6d35ec-3410-4144-9721-7c40a523f93c","title":"Pan Ball Flute Update","slug":"pan-ball-flute-update-2","markdown":"\nFor the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet.  \n[![](http://zevenwolf.com/blog/uploads/panball1-168x300.jpg \"panball1\")](http://zevenwolf.com/blog/uploads/panball1.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[Shaker](http://vimeo.com/9761290) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>[![](http://zevenwolf.com/blog/uploads/panball2-168x300.jpg \"panball2\")](http://zevenwolf.com/blog/uploads/panball2.jpg)  \n[![](http://zevenwolf.com/blog/uploads/panball3-189x300.jpg \"panball3\")](http://zevenwolf.com/blog/uploads/panball3.jpg)\n\nThese are just some basic numbers on the solo shaker  \n The Open Circuit Voltage = 10v  \n The Test Capcitor = 1 Farad  \n Start and End Voltage = 100mV-3V  \n Change in Joules = 4.5J  \n*E = 1/2 C * V 2  \n*  \n Time to Charge = 20 sec  \n Observed Power (watts) = .225 watts  \n*Energy / Time  \n*\n\n\n","html":"<p>For the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball1-168x300.jpg\" alt=\"\" title=\"panball1\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/9761290\">Shaker</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div><a href=\"http://zevenwolf.com/blog/uploads/panball2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball2-168x300.jpg\" alt=\"\" title=\"panball2\" /></a> <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball3-189x300.jpg\" alt=\"\" title=\"panball3\" /></a></p>\n\n<p>These are just some basic numbers on the solo shaker <br />\n The Open Circuit Voltage = 10v <br />\n The Test Capcitor = 1 Farad <br />\n Start and End Voltage = 100mV-3V <br />\n Change in Joules = 4.5J <br />\n*E = 1/2 C * V 2 <br />\n* <br />\n Time to Charge = 20 sec <br />\n Observed Power (watts) = .225 watts <br />\n*Energy / Time <br />\n*</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267195457000,"created_by":1,"updated_at":1396136802000,"updated_by":1,"published_at":1267195457000,"published_by":1},{"id":191,"uuid":"f95b90a6-4dc1-47a6-be01-2ed39c3653c8","title":"RWET Midterm: SOS Poem","slug":"rwet-midterm-sos-poem-2","markdown":"\nThe SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.\n\nThe source text is a list of congress people and the Obama Health Care bill\n\nLee and Jos gradually clarifying gradually Lee and Jos  \n Ken and Ron currently conducting currently Ken and Ron  \n Dan and Max seriously increased seriously Dan and Max  \n Ike and Joe primarily empowering primarily Ike and Joe\n\nFor and Fee gradually clarifying gradually For and Fee  \n All and One currently conducting currently All and One  \n But and Tax seriously increased seriously But and Tax  \n Act and Key primarily empowering primarily Act and Key\n\n[cc lang=\"python\"]  \n import sys  \n import re  \n congress = set()  \n congressName = list()  \n bill = set()  \n billWords = list()  \n verbs = set()  \n verbsList = list()  \n adverbs = set()  \n adverbsList = list()  \n state = “New”  \n name = ” ”  \n words = ” ”  \n verb = ” ”  \n adverb = ” ”  \n congressCounter = 0  \n verbCounter = 0  \n adverbCounter = 0  \n displayCounter = 0  \n fileObj = open(‘obamacare.txt’)\n\nlines = fileObj.readlines()\n\nfor line in sys.stdin:  \n line.strip()  \n for matching_string in re.findall(r’s[A-Z][a-z][a-z]b’, line):  \n name = matching_string  \n congress.add(name)\n\ncongress.remove(” New”)\n\ncongressCounter = len(congress)  \n for num in range(0,congressCounter):  \n name = congress.pop()  \n name=name[1:]  \n congressName.append(name)\n\nfor words in lines:  \n words.strip()  \n for matching_verb in re.findall(r”bw{7}ed|bw{7}ing”,words):  \n verb = matching_verb  \n verb = verb.lower()  \n verbs.add(verb)\n\nverbCounter = len(verbs)  \n for num in range(0,verbCounter):  \n verb = verbs.pop()  \n verbsList.append(verb)\n\nfor words in lines:  \n words.strip()  \n for matching_adverb in re.findall(r”bw{7}ly”,words):  \n adverb = matching_adverb  \n adverb = adverb.lower()  \n adverbs.add(adverb)\n\nadverbCounter = len(adverbs)  \n for num in range(0,adverbCounter):  \n adverb = adverbs.pop()  \n adverbsList.append(adverb)\n\nif congressCounter < verbCounter and congressCounter < adverbCounter:  \n displayCounter = congressCounter  \n elif verbCounter < congressCounter and verbCounter < adverbCounter:  \n displayCounter = verbCounter  \n elif adverbCounter < verbCounter and adverbCounter < congressCounter:  \n displayCounter = adverbCounter\n\nfor num in range(0,displayCounter,2):  \n #print num  \n if num < displayCounter:  \n nameone = congressName[num]  \n nametwo = congressName[num +1]  \n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)\n\n[/cc]\n\n[Congress Text](http://www.zevenwolf.com/blog/rwet/congress.txt)  \n[Obama Care Text](http://www.zevenwolf.com/blog/rwet/obamacare.txt)\n\n\n","html":"<p>The SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.</p>\n\n<p>The source text is a list of congress people and the Obama Health Care bill</p>\n\n<p>Lee and Jos gradually clarifying gradually Lee and Jos <br />\n Ken and Ron currently conducting currently Ken and Ron <br />\n Dan and Max seriously increased seriously Dan and Max <br />\n Ike and Joe primarily empowering primarily Ike and Joe</p>\n\n<p>For and Fee gradually clarifying gradually For and Fee <br />\n All and One currently conducting currently All and One <br />\n But and Tax seriously increased seriously But and Tax <br />\n Act and Key primarily empowering primarily Act and Key</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n import re <br />\n congress = set() <br />\n congressName = list() <br />\n bill = set() <br />\n billWords = list() <br />\n verbs = set() <br />\n verbsList = list() <br />\n adverbs = set() <br />\n adverbsList = list() <br />\n state = “New” <br />\n name = ” ” <br />\n words = ” ” <br />\n verb = ” ” <br />\n adverb = ” ” <br />\n congressCounter = 0 <br />\n verbCounter = 0 <br />\n adverbCounter = 0 <br />\n displayCounter = 0 <br />\n fileObj = open(‘obamacare.txt’)</p>\n\n<p>lines = fileObj.readlines()</p>\n\n<p>for line in sys.stdin: <br />\n line.strip() <br />\n for matching<em>string in re.findall(r’s[A-Z][a-z][a-z]b’, line): <br />\n name = matching</em>string <br />\n congress.add(name)</p>\n\n<p>congress.remove(” New”)</p>\n\n<p>congressCounter = len(congress) <br />\n for num in range(0,congressCounter): <br />\n name = congress.pop() <br />\n name=name[1:] <br />\n congressName.append(name)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>verb in re.findall(r”bw{7}ed|bw{7}ing”,words): <br />\n verb = matching</em>verb <br />\n verb = verb.lower() <br />\n verbs.add(verb)</p>\n\n<p>verbCounter = len(verbs) <br />\n for num in range(0,verbCounter): <br />\n verb = verbs.pop() <br />\n verbsList.append(verb)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>adverb in re.findall(r”bw{7}ly”,words): <br />\n adverb = matching</em>adverb <br />\n adverb = adverb.lower() <br />\n adverbs.add(adverb)</p>\n\n<p>adverbCounter = len(adverbs) <br />\n for num in range(0,adverbCounter): <br />\n adverb = adverbs.pop() <br />\n adverbsList.append(adverb)</p>\n\n<p>if congressCounter &lt; verbCounter and congressCounter &lt; adverbCounter: <br />\n displayCounter = congressCounter <br />\n elif verbCounter &lt; congressCounter and verbCounter &lt; adverbCounter: <br />\n displayCounter = verbCounter <br />\n elif adverbCounter &lt; verbCounter and adverbCounter &lt; congressCounter: <br />\n displayCounter = adverbCounter</p>\n\n<p>for num in range(0,displayCounter,2): <br />\n #print num <br />\n if num &lt; displayCounter: <br />\n nameone = congressName[num] <br />\n nametwo = congressName[num +1] <br />\n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)</p>\n\n<p>[/cc]</p>\n\n<p><a href=\"http://www.zevenwolf.com/blog/rwet/congress.txt\">Congress Text</a> <br />\n<a href=\"http://www.zevenwolf.com/blog/rwet/obamacare.txt\">Obama Care Text</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1268394198000,"created_by":1,"updated_at":1396136835000,"updated_by":1,"published_at":1268394198000,"published_by":1},{"id":192,"uuid":"524ab4f8-5144-410f-a65d-865d8d0e35d5","title":"RF Radios","slug":"rf-radios-2","markdown":"\nMy group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: [transmitter ](http://www.sparkfun.com/commerce/product_info.php?products_id=8946)and [receiver](http://www.sparkfun.com/commerce/product_info.php?products_id=8949).\n\nOne of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.\n\n[![](http://zevenwolf.com/blog/uploads/reciever.jpg \"reciever\")](http://zevenwolf.com/blog/uploads/reciever.jpg)\n\nThe receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.\n\n[![](http://zevenwolf.com/blog/uploads/transmitter.jpg \"transmitter\")](http://zevenwolf.com/blog/uploads/transmitter.jpg)\n\n\n","html":"<p>My group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8946\">transmitter </a>and <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8949\">receiver</a>.</p>\n\n<p>One of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/reciever.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/reciever.jpg\" alt=\"\" title=\"reciever\" /></a></p>\n\n<p>The receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\" alt=\"\" title=\"transmitter\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269441969000,"created_by":1,"updated_at":1396136866000,"updated_by":1,"published_at":1269441969000,"published_by":1},{"id":193,"uuid":"ceb35d3c-ed8b-45b1-97ed-79dd0e602de6","title":"Charlotte's Web","slug":"charlottes-web-2","markdown":"\nZeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.\n\nWe are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts.  \n[![](http://zevenwolf.com/blog/uploads/audiocircuit.jpg \"audiocircuit\")](http://zevenwolf.com/blog/uploads/audiocircuit.jpg)\n\nThe Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit.  \n[![](http://zevenwolf.com/blog/uploads/miller-engine.jpg \"miller-engine\")](http://zevenwolf.com/blog/uploads/miller-engine.jpg)\n\nRight now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.\n\n\n","html":"<p>Zeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.</p>\n\n<p>We are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\" alt=\"\" title=\"audiocircuit\" /></a></p>\n\n<p>The Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\" alt=\"\" title=\"miller-engine\" /></a></p>\n\n<p>Right now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269613841000,"created_by":1,"updated_at":1396136904000,"updated_by":1,"published_at":1269613841000,"published_by":1},{"id":194,"uuid":"a24611c8-b41c-480b-971b-40ece76bf76a","title":"Power Consumption Calculation for xbee 900","slug":"power-consumption-calculation-for-xbee-900-2","markdown":"\nFirst we calculate our [battery ](http://www.sparkfun.com/commerce/product_info.php?products_id=8818)  \n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.\n\nTo calculate the Watt hours = voltage * Amps  \n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours\n\nNow we Calculate the xbee 900 which run at 3.3v:  \n The xbee has 3 modes we have to deal with their consumption:  \n sleep mode: 60 micro amp hours  \n transmit mode: 210,000 micro amp hours  \n receive mode: 80,000 micro amp hours\n\nnext is calculating the time ratio  \n We are sending and receiving 100 times a day  \n each takes 1 second  \n thats 200 seconds everyday 73,000 seconds  \n 31,556,926 seconds in one year  \n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year\n\nWe have combined the 2 events so we can average:  \n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps\n\nNow that we have a time ratio we calculate  \n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours  \n The right side of our calculation gives use Watts and the left gives us Watt hours\n\n891 watts + 197 watts = 740,000 micro amp hours  \n 1088 watts = 740,000 micro amp hours  \n 740,000/1088 = 680 hours or 35 days on one battery  \n we need this to last at least a year and a half  \n That will be 27 batteries but we’ll need closer to 36 batteries to be safe\n\nThe most important number is that for a year and a half we need more then 3600 milliamps at 3.3v\n\n\n","html":"<p>First we calculate our <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8818\">battery </a> <br />\n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.</p>\n\n<p>To calculate the Watt hours = voltage * Amps <br />\n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours</p>\n\n<p>Now we Calculate the xbee 900 which run at 3.3v: <br />\n The xbee has 3 modes we have to deal with their consumption: <br />\n sleep mode: 60 micro amp hours <br />\n transmit mode: 210,000 micro amp hours <br />\n receive mode: 80,000 micro amp hours</p>\n\n<p>next is calculating the time ratio <br />\n We are sending and receiving 100 times a day <br />\n each takes 1 second <br />\n thats 200 seconds everyday 73,000 seconds <br />\n 31,556,926 seconds in one year <br />\n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year</p>\n\n<p>We have combined the 2 events so we can average: <br />\n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps</p>\n\n<p>Now that we have a time ratio we calculate <br />\n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours <br />\n The right side of our calculation gives use Watts and the left gives us Watt hours</p>\n\n<p>891 watts + 197 watts = 740,000 micro amp hours <br />\n 1088 watts = 740,000 micro amp hours <br />\n 740,000/1088 = 680 hours or 35 days on one battery <br />\n we need this to last at least a year and a half <br />\n That will be 27 batteries but we’ll need closer to 36 batteries to be safe</p>\n\n<p>The most important number is that for a year and a half we need more then 3600 milliamps at 3.3v</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270646103000,"created_by":1,"updated_at":1396136938000,"updated_by":1,"published_at":1270646103000,"published_by":1},{"id":195,"uuid":"d0eba86a-339f-460a-9b04-69a7488f50ad","title":"Reddit 5-7-5 poems","slug":"reddit-5-7-5-poems-2","markdown":"\nThis python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem\n\nHere YEARS Here 2 undercover  \n for goes YEARS report. Here is author  \n YEARS evangelical Atheist is church.\n\nconsider understands and seeking understands  \n service host; want understands want no you  \n assuming fucking one you’re Lunarpages.\n\nWas Laid Off Obama? Off  \n Obama? for Obama? Off Employee Was Voting  \n Voting for Was Off Voting\n\nCool infographic infographic Nintendo Nintendo  \n infographic infographic infographic Nintendo Nintendo Cool infographic  \n infographic Cool Cool Nintendo Cool\n\n[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import random\n\ndef haiku(words):\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList1.append(haiku)\n\n print ” “.join(haikuList1)\n\n for i in range(0,7):  \n haiku = random.choice(words)  \n haikuList2.append(haiku)\n\n print ” “.join(haikuList2)\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList3.append(haiku)\n\n print ” “.join(haikuList3)\n\nurl = “http://www.reddit.com/r/reddit.com/”  \n titlesList = list()  \n num = int()  \n haikuList1 = list()  \n haikuList2 = list()  \n haikuList3 = list()\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\nfor tag in soup.findAll(“p”, {“class” : “title”} ):  \n a = tag.findAll(“a”, {“class” : “title “} )  \n titles = a[0].string.encode(‘ascii’, ‘ignore’)  \n titles = titles.strip()  \n titles = titles.split(” “)  \n titlesList.append(titles)\n\nnum = random.randrange(0,len(titlesList))  \n words = titlesList[num]  \n haiku(words)\n\n[/cc]\n\n\n","html":"<p>This python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem</p>\n\n<p>Here YEARS Here 2 undercover <br />\n for goes YEARS report. Here is author <br />\n YEARS evangelical Atheist is church.</p>\n\n<p>consider understands and seeking understands <br />\n service host; want understands want no you <br />\n assuming fucking one you’re Lunarpages.</p>\n\n<p>Was Laid Off Obama? Off <br />\n Obama? for Obama? Off Employee Was Voting <br />\n Voting for Was Off Voting</p>\n\n<p>Cool infographic infographic Nintendo Nintendo <br />\n infographic infographic infographic Nintendo Nintendo Cool infographic <br />\n infographic Cool Cool Nintendo Cool</p>\n\n<p>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import random</p>\n\n<p>def haiku(words):</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList1.append(haiku)</p>\n\n<p>print ” “.join(haikuList1)</p>\n\n<p>for i in range(0,7): <br />\n haiku = random.choice(words) <br />\n haikuList2.append(haiku)</p>\n\n<p>print ” “.join(haikuList2)</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList3.append(haiku)</p>\n\n<p>print ” “.join(haikuList3)</p>\n\n<p>url = “<a href=\"http://www.reddit.com/r/reddit.com/”\">http://www.reddit.com/r/reddit.com/”</a> <br />\n titlesList = list() <br />\n num = int() <br />\n haikuList1 = list() <br />\n haikuList2 = list() <br />\n haikuList3 = list()</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>for tag in soup.findAll(“p”, {“class” : “title”} ): <br />\n a = tag.findAll(“a”, {“class” : “title “} ) <br />\n titles = a[0].string.encode(‘ascii’, ‘ignore’) <br />\n titles = titles.strip() <br />\n titles = titles.split(” “) <br />\n titlesList.append(titles)</p>\n\n<p>num = random.randrange(0,len(titlesList)) <br />\n words = titlesList[num] <br />\n haiku(words)</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270817115000,"created_by":1,"updated_at":1396137354000,"updated_by":1,"published_at":1270817115000,"published_by":1},{"id":196,"uuid":"54457a93-1cb9-4d41-b27f-24f0c653acdf","title":"Collager","slug":"collager-2","markdown":"\nCollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.\n\n[![](http://zevenwolf.com/blog/uploads/mattandzeven.jpg \"mattandzeven\")](http://zevenwolf.com/blog/uploads/mattandzeven.jpg)\n\nThe system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.\n\n[![](http://zevenwolf.com/blog/uploads/collager-300x225.jpg \"collager\")](http://zevenwolf.com/blog/uploads/collager.jpg)\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>\n","html":"<p>CollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\" alt=\"\" title=\"mattandzeven\" /></a></p>\n\n<p>The system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/collager.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/collager-300x225.jpg\" alt=\"\" title=\"collager\" /></a></p>\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1271589705000,"created_by":1,"updated_at":1396137285000,"updated_by":1,"published_at":1271589705000,"published_by":1},{"id":197,"uuid":"3800d0b9-ae4b-4c52-8206-4511db8e30c4","title":"LumiLife","slug":"lumilife-2","markdown":"\nLumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.\n\n[![](http://zevenwolf.com/blog/uploads/lumilife.jpg \"lumilife\")](http://zevenwolf.com/blog/uploads/lumilife.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[LumiLife](http://vimeo.com/11143650) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the diagram of how it all flows together.\n\n[![](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg \"circuitdiagramsmaller\")](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg)\n\nThe nocturnal circuit is made of a 74AC14\n\n[![](http://zevenwolf.com/blog/uploads/noc.jpg \"noc\")](http://zevenwolf.com/blog/uploads/noc.jpg)\n\nThis is the schematic for the nocturnal circuit from the[ beam wiki site](http://www.beam-wiki.org/wiki/SIMD1).\n\n[![](http://zevenwolf.com/blog/uploads/nocturnal.gif \"nocturnal\")](http://zevenwolf.com/blog/uploads/nocturnal.gif)\n\nThe motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the [beam wiki site.](http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial) The parts include\n\n[74AC14](http://www.beam-wiki.org/wiki/74AC14 \"74AC14\") HexÂ [Schmitt Inverter](http://www.beam-wiki.org/wiki/Schmitt_Inverter \"Schmitt Inverter\") IC (theÂ [MicroCore](http://www.beam-wiki.org/wiki/MicroCore \"MicroCore\") chip).\n\n[74AC240](http://www.beam-wiki.org/wiki/74AC240 \"74AC240\") Octal Buffer / Line Driver with Tri-state Outputs (TheÂ [Motor Driver](http://www.beam-wiki.org/wiki/Motor_Driver \"Motor Driver\")).\n\n.22 uF MonolithicÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Four).\n\n10 uF Monolithic, Electrolytic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Two).\n\n2 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") red-black-green (Four).\n\n4.2 uF Monolithic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (One for the Reversing Circuit).\n\n3 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") orange-black-green (One for the Reversing Circuit).\n\n[1N914](http://www.beam-wiki.org/wiki/1N914 \"1N914\") orÂ [1N4148](http://www.beam-wiki.org/wiki/1N4148 \"1N4148\") Diodes (Two).\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\">[![](http://zevenwolf.com/blog/uploads/Microcore.jpg \"Microcore\")](http://zevenwolf.com/blog/uploads/Microcore.jpg)This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\">[![](http://zevenwolf.com/blog/uploads/walker_driver.jpg \"walker_driver\")](http://zevenwolf.com/blog/uploads/walker_driver.jpg)This is how to wire the 74AC240\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\">[![](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg \"Microcorewalkewithcap\")](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg)The one thing missing from the graphic above is a cap going from pin 20 to pin 1.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\">[![](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg \"Microcore_complete\")](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg)This image shows how to connect the motors and connect the 74AC14 and 74AC240.\n\n</div>![](http://zevenwolf.com/blog/uploads/motor-circuit.jpg \"motor-circuit\")\n\nâ¢Solar Panels  \n â Open circuit:Â 4x 4.5v @ ~20 mA  \n â¢Battery  \n â 3x 1.2v @ 600mAh  \n â¢Motors & LEDs = 3.6 @ 300mAh  \n â 2x Motors  \n â 6x LEDs\n\n\n","html":"<p>LumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\" alt=\"\" title=\"lumilife\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11143650\">LumiLife</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the diagram of how it all flows together.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\" alt=\"\" title=\"circuitdiagramsmaller\" /></a></p>\n\n<p>The nocturnal circuit is made of a 74AC14</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/noc.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/noc.jpg\" alt=\"\" title=\"noc\" /></a></p>\n\n<p>This is the schematic for the nocturnal circuit from the<a href=\"http://www.beam-wiki.org/wiki/SIMD1\"> beam wiki site</a>.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\"><img src=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\" alt=\"\" title=\"nocturnal\" /></a></p>\n\n<p>The motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the <a href=\"http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial\">beam wiki site.</a> The parts include</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC14\" title=\"74AC14\">74AC14</a> HexÂ <a href=\"http://www.beam-wiki.org/wiki/Schmitt_Inverter\" title=\"Schmitt Inverter\">Schmitt Inverter</a> IC (theÂ <a href=\"http://www.beam-wiki.org/wiki/MicroCore\" title=\"MicroCore\">MicroCore</a> chip).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC240\" title=\"74AC240\">74AC240</a> Octal Buffer / Line Driver with Tri-state Outputs (TheÂ <a href=\"http://www.beam-wiki.org/wiki/Motor_Driver\" title=\"Motor Driver\">Motor Driver</a>).</p>\n\n<p>.22 uF MonolithicÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Four).</p>\n\n<p>10 uF Monolithic, Electrolytic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Two).</p>\n\n<p>2 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> red-black-green (Four).</p>\n\n<p>4.2 uF Monolithic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (One for the Reversing Circuit).</p>\n\n<p>3 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> orange-black-green (One for the Reversing Circuit).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/1N914\" title=\"1N914\">1N914</a> orÂ <a href=\"http://www.beam-wiki.org/wiki/1N4148\" title=\"1N4148\">1N4148</a> Diodes (Two).</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\" alt=\"\" title=\"Microcore\" /></a>This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\"><a href=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\" alt=\"\" title=\"walker_driver\" /></a>This is how to wire the 74AC240</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\" alt=\"\" title=\"Microcorewalkewithcap\" /></a>The one thing missing from the graphic above is a cap going from pin 20 to pin 1.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\" alt=\"\" title=\"Microcore_complete\" /></a>This image shows how to connect the motors and connect the 74AC14 and 74AC240.</p>\n\n<p></div><img src=\"http://zevenwolf.com/blog/uploads/motor-circuit.jpg\" alt=\"\" title=\"motor-circuit\" /></p>\n\n<p>â¢Solar Panels <br />\n â Open circuit:Â 4x 4.5v @ ~20 mA <br />\n â¢Battery <br />\n â 3x 1.2v @ 600mAh <br />\n â¢Motors &amp; LEDs = 3.6 @ 300mAh <br />\n â 2x Motors <br />\n â 6x LEDs</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272196657000,"created_by":1,"updated_at":1396137240000,"updated_by":1,"published_at":1272196657000,"published_by":1},{"id":198,"uuid":"86e06a99-22aa-45f3-ad52-44475b2bba09","title":"Nursery Rhyme","slug":"nursery-rhyme-2","markdown":"\n<div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> \n\n<div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> \n\n<div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> \n\n<div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> \n\n<div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> \n\n<div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> \n\n<div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> \n\n<div></div><div></div><div></div>[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import sys  \n import random\n\nwords = set()  \n wordSet = set()  \n rhyme = dict()  \n rhymeList = list()\n\nurl = “littlemuffet.html”  \n changer = sys.argv[1]  \n name = sys.argv[2]\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\ngenderID1 = “Mr.”  \n genderID2 = “his”\n\n#parses speech  \n for line in sys.stdin:  \n line = line.strip()  \n line_words = line.split(” “)  \n for word in line_words:  \n words.add(word)\n\nfor word in words:  \n wordLength = len(word)  \n if (“.”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“,”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“;”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“?”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“:”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n else:  \n wordSet.add(word)\n\nfor word in wordSet:  \n wordLength = len(word)  \n lastLetter = word[wordLength-2:wordLength]\n\nif lastLetter in rhyme.keys():  \n rhyme[lastLetter].append(word)  \n else:  \n rhyme[lastLetter]=[word]\n\nif “true” in changer:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })\n\nfor i in range(0,len(gender1)):  \n gender1[i].replaceWith(genderID1)  \n for i in range(0,len(gender2)):  \n gender2[i].contents[0].replaceWith(genderID2)  \n else:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n for i in range(0,len(gender1)):  \n origWord = gender1[i].contents[0]  \n gender1[i].replaceWith(origWord)\n\nnamer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ })  \n for i in range(0,len(namer)):  \n namer[i].contents[0].replaceWith(name)\n\n#rhyme 1  \n rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ })  \n baseRhyme1 = str(rhyme1[0].contents[0])  \n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)]  \n rhyme1Search = rhyme[baseRhyme1Last]  \n rhyme1Word = random.choice(rhyme1Search)  \n rhyme1[0].replaceWith(baseRhyme1)  \n rhyme1[1].replaceWith(rhyme1Word)  \n rhyme1[2].replaceWith(baseRhyme1)\n\n#rhyme 1  \n rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ })  \n letters = random.choice(rhyme.keys())  \n randomList = rhyme[letters]  \n rhyme2Word1 = random.choice(randomList)  \n rhyme2Word2 = random.choice(randomList)\n\nrhyme2[0].replaceWith(rhyme2Word1)  \n rhyme2[1].replaceWith(rhyme2Word2)\n\n#rhyme 3  \n rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ })  \n baseRhyme3 = str(rhyme3[0].contents[0])  \n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)]  \n rhyme3Search = rhyme[baseRhyme3Last]  \n rhyme3Word = random.choice(rhyme3Search)  \n rhyme3[0].replaceWith(baseRhyme3)  \n rhyme3[1].replaceWith(rhyme3Word)  \n rhyme3[2].replaceWith(baseRhyme3)\n\nprint soup\n\n[/cc]  \n [cc lang=\"html\"]  \n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span>\n\nEating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span>\n\nAlong came a <span id=\"5\">spider</span>\n\nWho sat down beside <span id=\"4\">her</span>\n\nAnd frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span>\n\n[/cc]\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Political Nursery Rhyme](http://vimeo.com/11550696) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p><div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> </p>\n\n<p><div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> </p>\n\n<p><div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> </p>\n\n<p><div></div><div></div><div></div>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import sys <br />\n import random</p>\n\n<p>words = set() <br />\n wordSet = set() <br />\n rhyme = dict() <br />\n rhymeList = list()</p>\n\n<p>url = “littlemuffet.html” <br />\n changer = sys.argv[1] <br />\n name = sys.argv[2]</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>genderID1 = “Mr.” <br />\n genderID2 = “his”</p>\n\n<h1 id=\"parsesspeech\">parses speech</h1>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line<em>words = line.split(” “) <br />\n for word in line</em>words: <br />\n words.add(word)</p>\n\n<p>for word in words: <br />\n wordLength = len(word) <br />\n if (“.”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“,”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“;”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“?”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“:”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n else: <br />\n wordSet.add(word)</p>\n\n<p>for word in wordSet: <br />\n wordLength = len(word) <br />\n lastLetter = word[wordLength-2:wordLength]</p>\n\n<p>if lastLetter in rhyme.keys(): <br />\n rhyme[lastLetter].append(word) <br />\n else: <br />\n rhyme[lastLetter]=[word]</p>\n\n<p>if “true” in changer: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })</p>\n\n<p>for i in range(0,len(gender1)): <br />\n gender1[i].replaceWith(genderID1) <br />\n for i in range(0,len(gender2)): <br />\n gender2[i].contents[0].replaceWith(genderID2) <br />\n else: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n for i in range(0,len(gender1)): <br />\n origWord = gender1[i].contents[0] <br />\n gender1[i].replaceWith(origWord)</p>\n\n<p>namer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ }) <br />\n for i in range(0,len(namer)): <br />\n namer[i].contents[0].replaceWith(name)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ }) <br />\n baseRhyme1 = str(rhyme1[0].contents[0]) <br />\n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)] <br />\n rhyme1Search = rhyme[baseRhyme1Last] <br />\n rhyme1Word = random.choice(rhyme1Search) <br />\n rhyme1[0].replaceWith(baseRhyme1) <br />\n rhyme1[1].replaceWith(rhyme1Word) <br />\n rhyme1[2].replaceWith(baseRhyme1)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ }) <br />\n letters = random.choice(rhyme.keys()) <br />\n randomList = rhyme[letters] <br />\n rhyme2Word1 = random.choice(randomList) <br />\n rhyme2Word2 = random.choice(randomList)</p>\n\n<p>rhyme2[0].replaceWith(rhyme2Word1) <br />\n rhyme2[1].replaceWith(rhyme2Word2)</p>\n\n<h1 id=\"rhyme3\">rhyme 3</h1>\n\n<p>rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ }) <br />\n baseRhyme3 = str(rhyme3[0].contents[0]) <br />\n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)] <br />\n rhyme3Search = rhyme[baseRhyme3Last] <br />\n rhyme3Word = random.choice(rhyme3Search) <br />\n rhyme3[0].replaceWith(baseRhyme3) <br />\n rhyme3[1].replaceWith(rhyme3Word) <br />\n rhyme3[2].replaceWith(baseRhyme3)</p>\n\n<p>print soup</p>\n\n<p>[/cc] <br />\n [cc lang=\"html\"] <br />\n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span></p>\n\n<p>Eating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span></p>\n\n<p>Along came a <span id=\"5\">spider</span></p>\n\n<p>Who sat down beside <span id=\"4\">her</span></p>\n\n<p>And frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span></p>\n\n<p>[/cc]</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11550696\">Political Nursery Rhyme</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272620955000,"created_by":1,"updated_at":1396137367000,"updated_by":1,"published_at":1272620955000,"published_by":1},{"id":199,"uuid":"f9934007-52c9-46f3-b4bc-78b2985b41b9","title":"About","slug":"about-2","markdown":"\nODDGUI blog documents experiments in design, electronics, code, and fabrication by[ Zevensuy Rodriguez](http://www.zevenrodriguez.com).\n\nZevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded [Howlin’ Wolves](http://www.howlinwolves.com) a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.\n\nHe is a part of [Brooklyn Research](http://www.brooklynresearch.org), where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.\n\n\n","html":"<p>ODDGUI blog documents experiments in design, electronics, code, and fabrication by<a href=\"http://www.zevenrodriguez.com\"> Zevensuy Rodriguez</a>.</p>\n\n<p>Zevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded <a href=\"http://www.howlinwolves.com\">Howlin’ Wolves</a> a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.</p>\n\n<p>He is a part of <a href=\"http://www.brooklynresearch.org\">Brooklyn Research</a>, where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1278411804000,"created_by":1,"updated_at":1397059104000,"updated_by":1,"published_at":1278411804000,"published_by":1},{"id":200,"uuid":"58de4098-3293-4730-9b8a-368247e9f66a","title":"Apache 2.2 and mod_wsgi configuration","slug":"apache-2-2-and-mod_wsgi-configuration-2","markdown":"\nI finally got mod_wsgi to work. mod_wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache\n\nFor information about mod_wsgi and more elaborate explanations on configuration and installation visit http://code.google.com/p/modwsgi/\n\nI am running centos5.4, apache 2.2, and python 2.6.5\n\nFirst create a directory to do the initial download of mod_wsgi’s code\n\ncd into that directory\n\nThen do a wget mod_wsgi’s google code site and find the version you need\n\nThat should look something like this:  \n wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\n\nThis command unpacks the tarball:  \n tar xvfz mod_wsgi-3.3.tar.gz\n\ncd into the unpacked mod_wsgi-3.3 folder\n\ntype: ./configure\n\nonce configured\n\ntype: make\n\ntype: make install\n\nOnce that is done we want to restart the apache server\n\ncd into etc/ from your top most or / directory and\n\ntype: service httpd stop\n\nYou will get and OK if everything is fine\n\ntype: service httpd start\n\nOne way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules\n\nThe most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.\n\nIn CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf\n\ncd into etc/httpd/conf\n\nwhen you type: nano httpd.conf it loads the nano file editor\n\nThe DocumentRoot is where when you visit www.example.com  \n the initial directory that opens when you visit your website\n\nhttpdocs is my root directory. All of my site files are located there\n\nDocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs\n\nApache wants the serverpath of where files like index.html might reside\n\nload module enables mod_wsgi when a person visits the script\n\nThis should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nThis portion of the code tells mod_wsgi that in the python_projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python_projects/  \n there are files that need to run mod_wsgi\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n<directory>  \n Order deny,allow  \n Allow from all  \n</directory>\n\nThe mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:\n\n/var/www/vhosts/zevenwolf.com/python_projects/\n\nBecause the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/\n\nWhen you visit www.zevenwolf.com/python_projects  \n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python_projects\n\nSo once I added the httpdocs it worked. My final apache code for my site looks like this:\n\n<virtualhost>  \n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs  \n ServerName www.zevenwolf.com  \n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com  \n ErrorLog logs/zevenwolf.com-error_log  \n CustomLog logs/zevenwolf.com-access_log common  \n<directory>  \n AllowOverride All  \n</directory>  \n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost>\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n//<directory>  \n Order deny,allow  \n Allow from all  \n //</directory>\n\n//\n\n\n","html":"<p>I finally got mod<em>wsgi to work. mod</em>wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache</p>\n\n<p>For information about mod_wsgi and more elaborate explanations on configuration and installation visit <a href=\"http://code.google.com/p/modwsgi/\">http://code.google.com/p/modwsgi/</a></p>\n\n<p>I am running centos5.4, apache 2.2, and python 2.6.5</p>\n\n<p>First create a directory to do the initial download of mod_wsgi’s code</p>\n\n<p>cd into that directory</p>\n\n<p>Then do a wget mod_wsgi’s google code site and find the version you need</p>\n\n<p>That should look something like this: <br />\n wget <a href=\"http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\">http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz</a></p>\n\n<p>This command unpacks the tarball: <br />\n tar xvfz mod_wsgi-3.3.tar.gz</p>\n\n<p>cd into the unpacked mod_wsgi-3.3 folder</p>\n\n<p>type: ./configure</p>\n\n<p>once configured</p>\n\n<p>type: make</p>\n\n<p>type: make install</p>\n\n<p>Once that is done we want to restart the apache server</p>\n\n<p>cd into etc/ from your top most or / directory and</p>\n\n<p>type: service httpd stop</p>\n\n<p>You will get and OK if everything is fine</p>\n\n<p>type: service httpd start</p>\n\n<p>One way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules</p>\n\n<p>The most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.</p>\n\n<p>In CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf</p>\n\n<p>cd into etc/httpd/conf</p>\n\n<p>when you type: nano httpd.conf it loads the nano file editor</p>\n\n<p>The DocumentRoot is where when you visit www.example.com <br />\n the initial directory that opens when you visit your website</p>\n\n<p>httpdocs is my root directory. All of my site files are located there</p>\n\n<p>DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs</p>\n\n<p>Apache wants the serverpath of where files like index.html might reside</p>\n\n<p>load module enables mod_wsgi when a person visits the script</p>\n\n<p>This should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file</p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>This portion of the code tells mod<em>wsgi that in the python</em>projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python<em>projects/ <br />\n there are files that need to run mod</em>wsgi</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p><directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n</directory></p>\n\n<p>The mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:</p>\n\n<p>/var/www/vhosts/zevenwolf.com/python_projects/</p>\n\n<p>Because the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/</p>\n\n<p>When you visit www.zevenwolf.com/python<em>projects <br />\n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects</p>\n\n<p>So once I added the httpdocs it worked. My final apache code for my site looks like this:</p>\n\n<p><virtualhost> <br />\n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs <br />\n ServerName www.zevenwolf.com <br />\n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com <br />\n ErrorLog logs/zevenwolf.com-error<em>log <br />\n CustomLog logs/zevenwolf.com-access</em>log common <br />\n<directory> <br />\n AllowOverride All <br />\n</directory> <br />\n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost></p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p>//<directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n //</directory></p>\n\n<p>//</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1282678467000,"created_by":1,"updated_at":1396137149000,"updated_by":1,"published_at":1282678467000,"published_by":1},{"id":201,"uuid":"2750e7b4-bfe5-468d-a66f-886eb8dc1e6c","title":"HungryTime","slug":"hungrytime-2","markdown":"\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span>\n\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span>\n\n\n","html":"<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span></p>\n\n<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1284299556000,"created_by":1,"updated_at":1396137079000,"updated_by":1,"published_at":1284299556000,"published_by":1},{"id":202,"uuid":"4b2dfed0-b0ca-499d-a626-cc9b607b7ef2","title":"istheflooropen","slug":"istheflooropen-2","markdown":"\nistheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks.  \n [cc lang=\"php\"]\n\n $mySql = null;  \n $phone = $_GET['phone'];  \n function sqlConnect()  \n {  \n # Configuration Variables  \n $hostname = “localhost”;  \n $dbname = “*****”;  \n $username = “*****”;  \n $password = “*****”;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());  \n mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;  \n }  \n function sqlQuery($query){  \n global $mySql;  \n $data = null;  \n $result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returned  \n if (sizeof($result) > 0){  \n $num_fields = mysql_num_fields($result);  \n $row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);  \n $data[$row_cnt][$field_name] = $row_data[$cnt];  \n }  \n $row_cnt++;  \n }  \n }  \n return $data;  \n }  \n // set the default timezone to use. Available since PHP 5.1  \n date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);  \n $dayOfWeek = date(“l”);  \n $time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;  \n $insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());  \n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;  \n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;  \n $data = sqlQuery($output);  \n $day = NULL;  \n $phoneNumber = $data[0]['phone'];  \n $outputdayOfWeek = $data[0]['dayOfWeek'];  \n $outputTime = $data[0]['time'];  \n $stringStart = 0;  \n $stringEnd = 2;  \n $tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;  \n //echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Monday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Tuesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Thursday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Friday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n ?>  \n $mySql = null;$phone = $_GET['phone'];  \n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;}  \n function sqlQuery($query){global $mySql;$data = null;$result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num_fields = mysql_num_fields($result);$row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);$data[$row_cnt][$field_name] = $row_data[$cnt];}  \n $row_cnt++;}}return $data;}\n\n// set the default timezone to use. Available since PHP 5.1date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output);  \n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;\n\n$tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;//echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Monday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Tuesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Thursday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Friday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}\n\n?>\n\n[/cc]\n\n\n","html":"<p>istheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks. <br />\n [cc lang=\"php\"]</p>\n\n<p>$mySql = null; <br />\n $phone = $<em>GET['phone']; <br />\n function sqlConnect() <br />\n { <br />\n # Configuration Variables <br />\n $hostname = “localhost”; <br />\n $dbname = “<strong>*</strong>”; <br />\n $username = “<strong>*</strong>”; <br />\n $password = “<strong>*</strong>”; <br />\n $mySql = mysql</em>connect($hostname, $username, $password) or die (mysql<em>error()); <br />\n mysql</em>select<em>db($dbname, $mySql) or die(mysql</em>error()); <br />\n return $mySql; <br />\n } <br />\n function sqlQuery($query){ <br />\n global $mySql; <br />\n $data = null; <br />\n $result = mysql<em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returned <br />\n if (sizeof($result) > 0){ <br />\n $num</em>fields = mysql<em>num</em>fields($result); <br />\n $row<em>cnt = 0; <br />\n while ($row</em>data = mysql<em>fetch</em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num<em>fields; $cnt++){ <br />\n $field</em>name = mysql<em>field</em>name($result, $cnt); <br />\n $data[$row<em>cnt][$field</em>name] = $row<em>data[$cnt]; <br />\n } <br />\n $row</em>cnt++; <br />\n } <br />\n } <br />\n return $data; <br />\n } <br />\n // set the default timezone to use. Available since PHP 5.1 <br />\n date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”); <br />\n $dayOfWeek = date(“l”); <br />\n $time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”; <br />\n $insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql<em>error()); <br />\n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″; <br />\n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”; <br />\n $data = sqlQuery($output); <br />\n $day = NULL; <br />\n $phoneNumber = $data[0]['phone']; <br />\n $outputdayOfWeek = $data[0]['dayOfWeek']; <br />\n $outputTime = $data[0]['time']; <br />\n $stringStart = 0; <br />\n $stringEnd = 2; <br />\n $tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString; <br />\n //echo($timeInt); <br />\n if($outputdayOfWeek <mark> ‘Sunday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Monday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Tuesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Wednesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Thursday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Friday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n ?> <br />\n $mySql = null;$phone = $</em>GET['phone']; <br />\n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″; <br />\n $mySql = mysql<em>connect($hostname, $username, $password) or die (mysql</em>error());mysql<em>select</em>db($dbname, $mySql) or die(mysql<em>error()); <br />\n return $mySql;} <br />\n function sqlQuery($query){global $mySql;$data = null;$result = mysql</em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num<em>fields = mysql</em>num<em>fields($result);$row</em>cnt = 0; <br />\n while ($row<em>data = mysql</em>fetch<em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num</em>fields; $cnt++){ <br />\n $field<em>name = mysql</em>field<em>name($result, $cnt);$data[$row</em>cnt][$field<em>name] = $row</em>data[$cnt];} <br />\n $row_cnt++;}}return $data;}</p>\n\n<p>// set the default timezone to use. Available since PHP 5.1date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output); <br />\n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;</p>\n\n<p>$tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString;//echo($timeInt); <br />\n if($outputdayOfWeek </mark> ‘Sunday’){if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek <mark> ‘Monday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Tuesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);} <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Wednesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Thursday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek <mark> ‘Friday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek </mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}</p>\n\n<p>?></p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285025958000,"created_by":1,"updated_at":1396137059000,"updated_by":1,"published_at":1285025958000,"published_by":1},{"id":203,"uuid":"77fed2b0-7e12-4ac9-898f-d5def6d74c4c","title":"Atari Punk Instructable","slug":"atari-punk-instructable-2","markdown":"\n[![Atari Punk Instructable](http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg)](http://www.flickr.com/photos/zevenrodriguez/5025639535/ \"Atari Punk Instructable by zevenwolf, on Flickr\")\n\nFor Design for Greenfab we had to go through a tutorial and critique it. I did theÂ [Atari Punk Circuit](http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/ \"Atari Punk Circuit\"). Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.\n\nThe big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5025639535/\" title=\"Atari Punk Instructable by zevenwolf, on Flickr\"><img src=\"http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg\" alt=\"Atari Punk Instructable\" title=\"\" /></a></p>\n\n<p>For Design for Greenfab we had to go through a tutorial and critique it. I did theÂ <a href=\"http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/\" title=\"Atari Punk Circuit\">Atari Punk Circuit</a>. Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.</p>\n\n<p>The big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285497126000,"created_by":1,"updated_at":1396137379000,"updated_by":1,"published_at":null,"published_by":1},{"id":204,"uuid":"8901e24e-d6d3-4c3f-96f5-5eb3b408c09d","title":"Sounds of NY","slug":"sounds-of-ny-2","markdown":"\n[Sounds of NY](http://zevenwolf.com/mobilemedia/soundsofNY/) is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The [parser ](http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip)was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.\n\nThe one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.\n\n[cc lang=\"php\"]\n\n$tempData = $data[0]['sound'];  \n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”;  \n $replacements = ‘/’;  \n echo preg_replace($patterns, $replacements, $tempData);  \n [/cc]\n\n\n","html":"<p><a href=\"http://zevenwolf.com/mobilemedia/soundsofNY/\">Sounds of NY</a> is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The <a href=\"http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip\">parser </a>was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.</p>\n\n<p>The one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.</p>\n\n<p>[cc lang=\"php\"]</p>\n\n<p>$tempData = $data[0]['sound']; <br />\n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”; <br />\n $replacements = ‘/’; <br />\n echo preg_replace($patterns, $replacements, $tempData); <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285634644000,"created_by":1,"updated_at":1396137008000,"updated_by":1,"published_at":1285634644000,"published_by":1},{"id":205,"uuid":"8787dc5b-4047-416f-9e1b-6be0ca94256c","title":"555 Timer","slug":"555-timer-2","markdown":"\nAllison and I used this [schematic](http://wild-bohemian.com/electronics/flasher.html) to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.\n\n![](http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\")\n\n[![](http://zevenwolf.com/blog/uploads/555timer.jpg \"555timer\")](http://zevenwolf.com/blog/uploads/555timer.jpg)\n\n\n","html":"<p>Allison and I used this <a href=\"http://wild-bohemian.com/electronics/flasher.html\">schematic</a> to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.</p>\n\n<p><img src=\"http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\"\" alt=\"\" /></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/555timer.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/555timer.jpg\" alt=\"\" title=\"555timer\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286204414000,"created_by":1,"updated_at":1396136981000,"updated_by":1,"published_at":1286204414000,"published_by":1},{"id":206,"uuid":"3490fa22-86f1-43fb-bc40-8d863befe40d","title":"Traceroute Miami and New York","slug":"traceroute-miami-and-new-york-2","markdown":"\nFor Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.\n\n[![](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg \"newyorktraceroute\")](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg)\n\n[![](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg \"miamiTraceroute\")](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg)\n\nThis is the site I used to make the map.\n\n[http://www.topwebhosts.org/tools/ip-locator.php](http://www.topwebhosts.org/tools/ip-locator.php)\n\n[cc lang=\"python\"]  \n import re  \n from operator import itemgetter  \n def makeDict(site):  \n superList = list()  \n tempList = list()  \n ip = str()  \n timeList = list()  \n avTime = int()  \n map = dict()  \n textAddress = ‘ ‘  \n siteLister = list()  \n for line in site:  \n line = line.strip()  \n siteLister.append(line)\n\n for i in range(4,len(siteLister)):  \n if i >=4:  \n listSplit = siteLister[i].split(‘ ‘)  \n for num in range(0,len(listSplit)):  \n if ‘ms’ in listSplit[num]:  \n if (‘1:  \n print (w + ” : ” + str(allMap[w]))\n\nbigList = list()  \n bigList1 = list()  \n masterSite = open(‘sites/master.txt’)  \n masterSite1 = open(‘site2/master.txt’)\n\nprint “MIAMI”  \n bigList = makeDict(masterSite)  \n sortIps(bigList)  \n print ” ”  \n print “NEW YORK”  \n bigList1 = makeDict(masterSite1)  \n sortIps(bigList1)\n\n#for ips in bigSetList:  \n # if allMap[ips]>1:  \n # print (ips + ” : ” + str(allMap[ips]))\n\n[/cc]\n\nThis is the output from the parser  \n [cc lang=\"text\"]\n\nMIAMI  \n : 261  \n 65.14.121.204 : 24  \n 12.122.106.94 : 24  \n 12.122.1.45 : 24  \n 192.168.1.254 : 24  \n 12.122.5.142 : 21  \n 12.81.8.24 : 19  \n 65.14.121.181 : 13  \n 68.152.169.161 : 11  \n 12.81.8.98 : 10  \n 12.122.80.185 : 6  \n 12.81.8.9 : 5  \n 74.175.192.182 : 5  \n 74.175.192.190 : 4  \n 74.175.192.186 : 4  \n 12.81.8.73 : 4  \n 199.181.132.250 : 4  \n 12.81.8.17 : 4  \n 74.175.192.178 : 4  \n 12.122.84.21 : 3  \n 12.81.8.71 : 3  \n 12.122.1.174 : 3  \n 12.81.8.15 : 3  \n 74.175.192.166 : 2  \n 67.16.138.214 : 2  \n 74.175.192.202 : 2  \n 64.125.31.54 : 2  \n 12.122.84.113 : 2  \n 205.186.154.181 : 2  \n 69.195.198.147 : 2  \n 192.205.35.90 : 2  \n 64.30.230.20 : 2  \n 152.52.20.247 : 2  \n 12.122.1.5 : 2  \n 209.170.90.66 : 2  \n 12.122.87.61 : 2  \n 12.123.22.25 : 2  \n 64.125.27.61 : 2  \n 12.122.5.185 : 2  \n 64.210.15.78 : 2  \n 12.81.8.13 : 2  \n 12.81.8.19 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 12.81.8.7 : 2  \n 207.97.227.239 : 2  \n 192.205.35.234 : 2  \n 69.63.181.12 : 2  \n 64.124.161.42 : 2  \n 69.60.7.199 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 192.205.37.82 : 2  \n 208.80.152.2 : 2  \n 74.175.192.174 : 2  \n 74.125.67.83 : 2  \n 192.205.35.218 : 2\n\nNEW YORK  \n : 278  \n 173.56.121.1 : 24  \n 192.168.1.1 : 24  \n 130.81.180.4 : 12  \n 130.81.29.238 : 12  \n 130.81.29.236 : 12  \n 130.81.49.94 : 12  \n 152.63.16.185 : 9  \n 152.63.17.21 : 9  \n 4.69.138.254 : 7  \n 152.63.3.118 : 6  \n 4.68.127.21 : 6  \n 4.69.138.222 : 5  \n 4.69.141.21 : 4  \n 152.63.10.25 : 4  \n 199.181.132.250 : 4  \n 4.69.132.89 : 3  \n 4.69.132.65 : 3  \n 152.63.10.29 : 3  \n 152.63.9.249 : 3  \n 4.69.135.185 : 2  \n 69.63.189.16 : 2  \n 173.194.35.83 : 2  \n 152.52.20.247 : 2  \n 4.71.152.22 : 2  \n 69.195.198.147 : 2  \n 4.69.132.61 : 2  \n 12.122.1.209 : 2  \n 4.78.132.98 : 2  \n 4.68.111.137 : 2  \n 4.69.132.53 : 2  \n 205.186.154.181 : 2  \n 4.69.140.190 : 2  \n 152.63.18.73 : 2  \n 152.63.21.133 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 207.97.227.239 : 2  \n 4.68.105.36 : 2  \n 64.30.230.20 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 63.85.36.74 : 2  \n 208.80.152.2 : 2  \n 69.60.7.199 : 2  \n 152.63.1.57 : 2  \n 4.69.141.17 : 2\n\n[/cc]\n\n\n","html":"<p>For Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\" alt=\"\" title=\"newyorktraceroute\" /></a></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\" alt=\"\" title=\"miamiTraceroute\" /></a></p>\n\n<p>This is the site I used to make the map.</p>\n\n<p><a href=\"http://www.topwebhosts.org/tools/ip-locator.php\">http://www.topwebhosts.org/tools/ip-locator.php</a></p>\n\n<p>[cc lang=\"python\"] <br />\n import re <br />\n from operator import itemgetter <br />\n def makeDict(site): <br />\n superList = list() <br />\n tempList = list() <br />\n ip = str() <br />\n timeList = list() <br />\n avTime = int() <br />\n map = dict() <br />\n textAddress = ‘ ‘ <br />\n siteLister = list() <br />\n for line in site: <br />\n line = line.strip() <br />\n siteLister.append(line)</p>\n\n<p>for i in range(4,len(siteLister)): <br />\n if i >=4: <br />\n listSplit = siteLister[i].split(‘ ‘) <br />\n for num in range(0,len(listSplit)): <br />\n if ‘ms’ in listSplit[num]: <br />\n if (‘1: <br />\n print (w + ” : ” + str(allMap[w]))</p>\n\n<p>bigList = list() <br />\n bigList1 = list() <br />\n masterSite = open(‘sites/master.txt’) <br />\n masterSite1 = open(‘site2/master.txt’)</p>\n\n<p>print “MIAMI” <br />\n bigList = makeDict(masterSite) <br />\n sortIps(bigList) <br />\n print ” ” <br />\n print “NEW YORK” <br />\n bigList1 = makeDict(masterSite1) <br />\n sortIps(bigList1)</p>\n\n<h1 id=\"foripsinbigsetlist\">for ips in bigSetList:</h1>\n\n<p># if allMap[ips]>1: <br />\n # print (ips + ” : ” + str(allMap[ips]))</p>\n\n<p>[/cc]</p>\n\n<p>This is the output from the parser <br />\n [cc lang=\"text\"]</p>\n\n<p>MIAMI <br />\n : 261 <br />\n 65.14.121.204 : 24 <br />\n 12.122.106.94 : 24 <br />\n 12.122.1.45 : 24 <br />\n 192.168.1.254 : 24 <br />\n 12.122.5.142 : 21 <br />\n 12.81.8.24 : 19 <br />\n 65.14.121.181 : 13 <br />\n 68.152.169.161 : 11 <br />\n 12.81.8.98 : 10 <br />\n 12.122.80.185 : 6 <br />\n 12.81.8.9 : 5 <br />\n 74.175.192.182 : 5 <br />\n 74.175.192.190 : 4 <br />\n 74.175.192.186 : 4 <br />\n 12.81.8.73 : 4 <br />\n 199.181.132.250 : 4 <br />\n 12.81.8.17 : 4 <br />\n 74.175.192.178 : 4 <br />\n 12.122.84.21 : 3 <br />\n 12.81.8.71 : 3 <br />\n 12.122.1.174 : 3 <br />\n 12.81.8.15 : 3 <br />\n 74.175.192.166 : 2 <br />\n 67.16.138.214 : 2 <br />\n 74.175.192.202 : 2 <br />\n 64.125.31.54 : 2 <br />\n 12.122.84.113 : 2 <br />\n 205.186.154.181 : 2 <br />\n 69.195.198.147 : 2 <br />\n 192.205.35.90 : 2 <br />\n 64.30.230.20 : 2 <br />\n 152.52.20.247 : 2 <br />\n 12.122.1.5 : 2 <br />\n 209.170.90.66 : 2 <br />\n 12.122.87.61 : 2 <br />\n 12.123.22.25 : 2 <br />\n 64.125.27.61 : 2 <br />\n 12.122.5.185 : 2 <br />\n 64.210.15.78 : 2 <br />\n 12.81.8.13 : 2 <br />\n 12.81.8.19 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 12.81.8.7 : 2 <br />\n 207.97.227.239 : 2 <br />\n 192.205.35.234 : 2 <br />\n 69.63.181.12 : 2 <br />\n 64.124.161.42 : 2 <br />\n 69.60.7.199 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 192.205.37.82 : 2 <br />\n 208.80.152.2 : 2 <br />\n 74.175.192.174 : 2 <br />\n 74.125.67.83 : 2 <br />\n 192.205.35.218 : 2</p>\n\n<p>NEW YORK <br />\n : 278 <br />\n 173.56.121.1 : 24 <br />\n 192.168.1.1 : 24 <br />\n 130.81.180.4 : 12 <br />\n 130.81.29.238 : 12 <br />\n 130.81.29.236 : 12 <br />\n 130.81.49.94 : 12 <br />\n 152.63.16.185 : 9 <br />\n 152.63.17.21 : 9 <br />\n 4.69.138.254 : 7 <br />\n 152.63.3.118 : 6 <br />\n 4.68.127.21 : 6 <br />\n 4.69.138.222 : 5 <br />\n 4.69.141.21 : 4 <br />\n 152.63.10.25 : 4 <br />\n 199.181.132.250 : 4 <br />\n 4.69.132.89 : 3 <br />\n 4.69.132.65 : 3 <br />\n 152.63.10.29 : 3 <br />\n 152.63.9.249 : 3 <br />\n 4.69.135.185 : 2 <br />\n 69.63.189.16 : 2 <br />\n 173.194.35.83 : 2 <br />\n 152.52.20.247 : 2 <br />\n 4.71.152.22 : 2 <br />\n 69.195.198.147 : 2 <br />\n 4.69.132.61 : 2 <br />\n 12.122.1.209 : 2 <br />\n 4.78.132.98 : 2 <br />\n 4.68.111.137 : 2 <br />\n 4.69.132.53 : 2 <br />\n 205.186.154.181 : 2 <br />\n 4.69.140.190 : 2 <br />\n 152.63.18.73 : 2 <br />\n 152.63.21.133 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 207.97.227.239 : 2 <br />\n 4.68.105.36 : 2 <br />\n 64.30.230.20 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 63.85.36.74 : 2 <br />\n 208.80.152.2 : 2 <br />\n 69.60.7.199 : 2 <br />\n 152.63.1.57 : 2 <br />\n 4.69.141.17 : 2</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286282218000,"created_by":1,"updated_at":1396136971000,"updated_by":1,"published_at":1286282218000,"published_by":1},{"id":207,"uuid":"8ed3a1ce-f92d-4607-9d53-d39d183c1497","title":"Final Project(or) tests","slug":"final-projector-tests-2","markdown":"\nFor our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.\n\n[![](http://zevenwolf.com/blog/uploads/projectionbox.jpg \"projectionbox\")](http://zevenwolf.com/blog/uploads/projectionbox.jpg)\n\nWe initially tried 3 lights.\n\n[![](http://zevenwolf.com/blog/uploads/justlight.jpg \"justlight\")](http://zevenwolf.com/blog/uploads/justlight.jpg)\n\nWe then used the circle we cut out as a model for our stencil.\n\n[![](http://zevenwolf.com/blog/uploads/stencil.jpg \"stencil\")](http://zevenwolf.com/blog/uploads/stencil.jpg)\n\nWe found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.\n\n[![](http://zevenwolf.com/blog/uploads/7projection.jpg \"7projection\")](http://zevenwolf.com/blog/uploads/7projection.jpg)\n\nWe found some round cardboard tube and found that we can get a longer projection.\n\n[![](http://zevenwolf.com/blog/uploads/tubeprojection.jpg \"tubeprojection\")](http://zevenwolf.com/blog/uploads/tubeprojection.jpg)\n\n\n","html":"<p>For our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\" alt=\"\" title=\"projectionbox\" /></a></p>\n\n<p>We initially tried 3 lights.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/justlight.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/justlight.jpg\" alt=\"\" title=\"justlight\" /></a></p>\n\n<p>We then used the circle we cut out as a model for our stencil.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/stencil.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/stencil.jpg\" alt=\"\" title=\"stencil\" /></a></p>\n\n<p>We found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/7projection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/7projection.jpg\" alt=\"\" title=\"7projection\" /></a></p>\n\n<p>We found some round cardboard tube and found that we can get a longer projection.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\" alt=\"\" title=\"tubeprojection\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287329628000,"created_by":1,"updated_at":1396136954000,"updated_by":1,"published_at":1287329628000,"published_by":1},{"id":208,"uuid":"9b4535c0-bf6f-4223-8a56-ae9e9acffb94","title":"Exquisite-mobile.com","slug":"exquisite-mobile-com-2-2","markdown":"\nExquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];\n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )\n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (\nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'\n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )\n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )\n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.\n\n[cc lang=\"php\"]  \n<?php $i=1;\n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n\t//echo $row1[0];\n\t$tableArray[$i] = $row1[0];\n\t//echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload_temp_dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.\n\n[cc lang=\"php\"]  \n if((!empty($_FILES[\"uploaded_file\"])) && ($_FILES['uploaded_file']['error'] == 0)) {  \n //Check if the file is JPEG image and it’s size is less than 350Kb  \n $filename = basename($_FILES['uploaded_file']['name']);  \n $ext = substr($filename, strrpos($filename, ‘.’) + 1);  \n if (($ext == “jpg”) && ($_FILES[\"uploaded_file\"][\"type\"] == “image/jpeg”) &&  \n ($_FILES[\"uploaded_file\"][\"size\"]\n\n\n","html":"<p>Exquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.</p>\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];  \n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )  \n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (  \nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'  \n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )  \n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )  \n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.</p>\n\n[cc lang=\"php\"]  \n<?php $i=1;  \n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    //echo $row1[0];\n    $tableArray[$i] = $row1[0];\n    //echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload<em>temp</em>dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.</p>\n\n<p>[cc lang=\"php\"] <br />\n if((!empty($<em>FILES[\"uploaded</em>file\"])) &amp;&amp; ($<em>FILES['uploaded</em>file']['error'] <mark> 0)) { <br />\n //Check if the file is JPEG image and it’s size is less than 350Kb <br />\n $filename = basename($<em>FILES['uploaded</em>file']['name']); <br />\n $ext = substr($filename, strrpos($filename, ‘.’) + 1); <br />\n if (($ext </mark> “jpg”) &amp;&amp; ($<em>FILES[\"uploaded</em>file\"][\"type\"] == “image/jpeg”) &amp;&amp; <br />\n ($<em>FILES[\"uploaded</em>file\"][\"size\"]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287780547000,"created_by":1,"updated_at":1395799435000,"updated_by":1,"published_at":1287780547000,"published_by":1},{"id":209,"uuid":"c65300c7-601f-4181-9f62-0e4494e5b11d","title":"Android GPS Code","slug":"android-gps-code-2","markdown":"\n[cc lang=\"java\"]\n\nimport android.app.Activity;  \n import android.content.Context;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;\n\n public String lat;  \n public String lon;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n gpsButton.setOnClickListener(this);\n\n }\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);  \n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View arg0) {  \n // TODO Auto-generated method stub\n\n TextView lats = (TextView) this.findViewById(R.id.lat);  \n lats.setText(lat);\n\n TextView lons = (TextView) this.findViewById(R.id.lon);  \n lons.setText(lon);\n\n }  \n }\n\n[/cc]\n\n\n","html":"<p>[cc lang=\"java\"]</p>\n\n<p>import android.app.Activity; <br />\n import android.content.Context; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton;</p>\n\n<p>public String lat; <br />\n public String lon;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n gpsButton.setOnClickListener(this);</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”); <br />\n }</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View arg0) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>TextView lats = (TextView) this.findViewById(R.id.lat); <br />\n lats.setText(lat);</p>\n\n<p>TextView lons = (TextView) this.findViewById(R.id.lon); <br />\n lons.setText(lon);</p>\n\n<p>} <br />\n }</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288050422000,"created_by":1,"updated_at":1395799425000,"updated_by":1,"published_at":1288050422000,"published_by":1},{"id":210,"uuid":"5c4c40f7-646a-49e8-aa6f-e614e3316fb8","title":"Connections: Final Project Proposal","slug":"connections-final-project-proposal-2","markdown":"\nConnections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.\n\n**Goal **  \n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.\n\n[![](http://zevenwolf.com/blog/uploads/com-300x225.jpg \"com\")](http://zevenwolf.com/blog/uploads/com.jpg)\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\nHere is the working display. The selects 2 bottom squares.\n\n**How it works?**  \n The user visits a website. They will be greeted with this application.\n\n[![](http://zevenwolf.com/blog/uploads/screens-1024x380.png \"screens\")](http://zevenwolf.com/blog/uploads/screens.png)\n\nThere they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.\n\n<div style=\"align: center;\">[![connections](http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286117978/ \"connections by zevenwolf, on Flickr\")  \n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.\n\n</div>[![Connections](http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241719596/ \"Connections by zevenwolf, on Flickr\")  \n This the first fitting of the blocks on the foam\n\n[![Connections](http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241125193/ \"Connections by zevenwolf, on Flickr\")  \n Rune making the connections for the LED blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Testing the interfacing between the computer and led blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Running the web app with projection display\n\n[![connections](http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286087468/ \"connections by zevenwolf, on Flickr\")  \n Our most excited user.\n\n**Next Steps**\n\n- Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies\n- Skin the front\n- Create more graphical interaction when particles connect\n\n**Issues**\n\n- We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync\n\n\n","html":"<p>Connections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.</p>\n\n<p><em>*Goal *</em> <br />\n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/com.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/com-300x225.jpg\" alt=\"\" title=\"com\" /></a></p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p>Here is the working display. The selects 2 bottom squares.</p>\n\n<p><strong>How it works?</strong> <br />\n The user visits a website. They will be greeted with this application.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/screens.png\"><img src=\"http://zevenwolf.com/blog/uploads/screens-1024x380.png\" alt=\"\" title=\"screens\" /></a></p>\n\n<p>There they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.</p>\n\n<p><div style=\"align: center;\"><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286117978/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.</p>\n\n<p></div><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241719596/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n This the first fitting of the blocks on the foam</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241125193/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n Rune making the connections for the LED blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Testing the interfacing between the computer and led blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Running the web app with projection display</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286087468/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Our most excited user.</p>\n\n<p><strong>Next Steps</strong></p>\n\n<ul>\n<li>Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies</li>\n<li>Skin the front</li>\n<li>Create more graphical interaction when particles connect</li>\n</ul>\n\n<p><strong>Issues</strong></p>\n\n<ul>\n<li>We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync</li>\n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288692778000,"created_by":1,"updated_at":1396135896000,"updated_by":1,"published_at":1288692778000,"published_by":1},{"id":211,"uuid":"0c412826-9e75-46b6-81a8-63eedb432129","title":"Traffic light","slug":"traffic-light-2","markdown":"\nSo I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Traffic Light](http://vimeo.com/6582107) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the code I used\n\nint pinRed = 3;  \n int pinYellow = 4;  \n int pinGreen = 5;  \n int switchButton = 2; // button  \n int switchIni = 0; // Initial state of switch\n\nvoid setup(){  \n pinMode(pinRed, OUTPUT);  \n pinMode(pinYellow, OUTPUT);  \n pinMode(pinGreen, OUTPUT);  \n pinMode(switchButton, INPUT); //takes in switch signal\n\n}\n\nvoid loop(){  \n switchIni = digitalRead(switchButton);\n\nif (switchIni == 1){  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);  \n digitalWrite(pinYellow, HIGH);  \n digitalWrite(pinRed, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);\n\ndigitalWrite(pinGreen, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinRed, LOW);  \n delay(5000);\n\n}\n\nelse{  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n }\n\n}\n\n\n","html":"<p>So I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6582107\">Traffic Light</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the code I used</p>\n\n<p>int pinRed = 3; <br />\n int pinYellow = 4; <br />\n int pinGreen = 5; <br />\n int switchButton = 2; // button <br />\n int switchIni = 0; // Initial state of switch</p>\n\n<p>void setup(){ <br />\n pinMode(pinRed, OUTPUT); <br />\n pinMode(pinYellow, OUTPUT); <br />\n pinMode(pinGreen, OUTPUT); <br />\n pinMode(switchButton, INPUT); //takes in switch signal</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n switchIni = digitalRead(switchButton);</p>\n\n<p>if (switchIni == 1){ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000); <br />\n digitalWrite(pinYellow, HIGH); <br />\n digitalWrite(pinRed, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000);</p>\n\n<p>digitalWrite(pinGreen, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinRed, LOW); <br />\n delay(5000);</p>\n\n<p>}</p>\n\n<p>else{ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n }</p>\n\n<p>}</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252995651000,"created_by":1,"updated_at":1396135995000,"updated_by":1,"published_at":1252995651000,"published_by":1},{"id":212,"uuid":"dbf01b82-e1ed-48ed-b415-ac6588d05dec","title":"How Does Your City Feel?","slug":"how-does-your-city-feel-2","markdown":"\n[![](http://pixelpunchout.com/content/images/2010/10/nyc_angry.png \"nyc_angry\")](http://pixelpunchout.com/content/images/2010/10/nyc_angry.png \"nyc_angry\")\n\n<div>**[How Does Your City Feel?](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php)** captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. [How Does Your City Feel](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div>[**How Does Your City Feel?**](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) was created by [**Cindy Wong**](http://pixelpunchout.com) and**Zeven Rodriguez**.</div><div>[![](http://pixelpunchout.com/content/images/2010/10/nyc.png \"nyc\")](http://pixelpunchout.com/content/images/2010/10/nyc.png \"nyc\")</div><div>New York City</div><div>[![](http://pixelpunchout.com/content/images/2010/10/sf.png \"sf\")](http://pixelpunchout.com/content/images/2010/10/sf.png \"sf\")</div>[![](http://pixelpunchout.com/content/images/2010/10/sf_love.png \"sf_love\")](http://pixelpunchout.com/content/images/2010/10/sf_love.png \"sf_love\")\n\nSan Francisco\n\n[![](http://pixelpunchout.com/content/images/2010/10/seattle.png \"seattle\")](http://pixelpunchout.com/content/images/2010/10/seattle.png \"seattle\")\n\n<div>[![](http://pixelpunchout.com/content/images/2010/10/seattle_happy.png \"seattle_happy\")](http://pixelpunchout.com/content/images/2010/10/seattle_happy.png \"seattle_happy\")</div>Seattle\n\n\n","html":"<p><a href=\"http://pixelpunchout.com/content/images/2010/10/nyc_angry.png\" title=\"nyc_angry\"><img src=\"http://pixelpunchout.com/content/images/2010/10/nyc_angry.png\" alt=\"\" title=\"nyc_angry\" /></a></p>\n\n<p><div><strong><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel?</a></strong> captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. <a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel</a> is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\"><strong>How Does Your City Feel?</strong></a> was created by <a href=\"http://pixelpunchout.com\"><strong>Cindy Wong</strong></a> and<strong>Zeven Rodriguez</strong>.</div><div><a href=\"http://pixelpunchout.com/content/images/2010/10/nyc.png\" title=\"nyc\"><img src=\"http://pixelpunchout.com/content/images/2010/10/nyc.png\" alt=\"\" title=\"nyc\" /></a></div><div>New York City</div><div><a href=\"http://pixelpunchout.com/content/images/2010/10/sf.png\" title=\"sf\"><img src=\"http://pixelpunchout.com/content/images/2010/10/sf.png\" alt=\"\" title=\"sf\" /></a></div><a href=\"http://pixelpunchout.com/content/images/2010/10/sf_love.png\" title=\"sf_love\"><img src=\"http://pixelpunchout.com/content/images/2010/10/sf_love.png\" alt=\"\" title=\"sf_love\" /></a></p>\n\n<p>San Francisco</p>\n\n<p><a href=\"http://pixelpunchout.com/content/images/2010/10/seattle.png\" title=\"seattle\"><img src=\"http://pixelpunchout.com/content/images/2010/10/seattle.png\" alt=\"\" title=\"seattle\" /></a></p>\n\n<p><div><a href=\"http://pixelpunchout.com/content/images/2010/10/seattle_happy.png\" title=\"seattle_happy\"><img src=\"http://pixelpunchout.com/content/images/2010/10/seattle_happy.png\" alt=\"\" title=\"seattle_happy\" /></a></div>Seattle</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288694374000,"created_by":1,"updated_at":1396135844000,"updated_by":1,"published_at":1288694374000,"published_by":1},{"id":213,"uuid":"28ab2407-2080-4076-87b9-aa3f482d062a","title":"Android Sms Tracking","slug":"android-sms-tracking-2","markdown":"\nThis application grabs gps location with on button and the second button sends a text message to my phone number.\n\n[cc lang=\"java\"]\n\npackage com.zevenwolf.tracking;\n\nimport android.app.Activity;  \n import android.app.PendingIntent;  \n import android.content.BroadcastReceiver;  \n import android.content.Context;  \n import android.content.Intent;  \n import android.content.IntentFilter;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.telephony.SmsManager;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;  \n import android.widget.Toast;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;  \n Button messageButton;  \n public String lat;  \n public String lon;  \n public String message;\n\n PendingIntent sentPI;  \n // The intent action we are using  \n String SENT = “SMS_SENT”;  \n BroadcastReceiver br;  \n TextView lats;  \n TextView lons;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n lats = (TextView) this.findViewById(R.id.lat);  \n lons = (TextView) this.findViewById(R.id.lon);\n\n sentPI = PendingIntent.getBroadcast(this, 0,  \n new Intent(SENT), 0);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n messageButton = (Button) this.findViewById(R.id.message);\n\n // The important thing is to set the onclicklistner event with in the setOnClickListener  \n gpsButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n lats.setText(lat);\n\n lons.setText(lon);\n\n message = lat + ” ” + lon;  \n Log.d(“message”, message);\n\n Log.d(“view”, “hit”);\n\n }});\n\n messageButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n Log.d(“view”, “hit”);\n\n SmsManager sms = SmsManager.getDefault();  \n // send the message, passing in the pending intent, sentPI  \n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);\n\n registerReceiver(br, new IntentFilter(SENT));\n\n }});\n\n // this broadcastreceiver when sent a receive code sends back a specific code which you then display\n\n br = new BroadcastReceiver(){  \n @Override  \n public void onReceive(Context ctx, Intent intent) {  \n switch (getResultCode())  \n {  \n case Activity.RESULT_OK:  \n Toast.makeText(getBaseContext(), “SMS sent”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_GENERIC_FAILURE:  \n Toast.makeText(getBaseContext(), “SMS: Generic failure”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NO_SERVICE:  \n Toast.makeText(getBaseContext(), “SMS: No service”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NULL_PDU:  \n Toast.makeText(getBaseContext(), “SMS: Null PDU”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_RADIO_OFF:  \n Toast.makeText(getBaseContext(), “SMS: Radio off”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n }\n\n unregisterReceiver(br);  \n }\n\n };\n\n }  \n public void onPause(){\n\n super.onPause();  \n finish();\n\n}  \n // onPause  \n //super onpause  \n // run finish there\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View v) {  \n // TODO Auto-generated method stub\n\n }\n\n}\n\n[/cc]\n\n\n","html":"<p>This application grabs gps location with on button and the second button sends a text message to my phone number.</p>\n\n<p>[cc lang=\"java\"]</p>\n\n<p>package com.zevenwolf.tracking;</p>\n\n<p>import android.app.Activity; <br />\n import android.app.PendingIntent; <br />\n import android.content.BroadcastReceiver; <br />\n import android.content.Context; <br />\n import android.content.Intent; <br />\n import android.content.IntentFilter; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.telephony.SmsManager; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView; <br />\n import android.widget.Toast;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton; <br />\n Button messageButton; <br />\n public String lat; <br />\n public String lon; <br />\n public String message;</p>\n\n<p>PendingIntent sentPI; <br />\n // The intent action we are using <br />\n String SENT = “SMS_SENT”; <br />\n BroadcastReceiver br; <br />\n TextView lats; <br />\n TextView lons;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>lats = (TextView) this.findViewById(R.id.lat); <br />\n lons = (TextView) this.findViewById(R.id.lon);</p>\n\n<p>sentPI = PendingIntent.getBroadcast(this, 0, <br />\n new Intent(SENT), 0);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n messageButton = (Button) this.findViewById(R.id.message);</p>\n\n<p>// The important thing is to set the onclicklistner event with in the setOnClickListener <br />\n gpsButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>lats.setText(lat);</p>\n\n<p>lons.setText(lon);</p>\n\n<p>message = lat + ” ” + lon; <br />\n Log.d(“message”, message);</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>}});</p>\n\n<p>messageButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>SmsManager sms = SmsManager.getDefault(); <br />\n // send the message, passing in the pending intent, sentPI <br />\n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);</p>\n\n<p>registerReceiver(br, new IntentFilter(SENT));</p>\n\n<p>}});</p>\n\n<p>// this broadcastreceiver when sent a receive code sends back a specific code which you then display</p>\n\n<p>br = new BroadcastReceiver(){ <br />\n @Override <br />\n public void onReceive(Context ctx, Intent intent) { <br />\n switch (getResultCode()) <br />\n { <br />\n case Activity.RESULT<em>OK: <br />\n Toast.makeText(getBaseContext(), “SMS sent”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>GENERIC<em>FAILURE: <br />\n Toast.makeText(getBaseContext(), “SMS: Generic failure”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NO<em>SERVICE: <br />\n Toast.makeText(getBaseContext(), “SMS: No service”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NULL<em>PDU: <br />\n Toast.makeText(getBaseContext(), “SMS: Null PDU”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>RADIO<em>OFF: <br />\n Toast.makeText(getBaseContext(), “SMS: Radio off”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n }</p>\n\n<p>unregisterReceiver(br); <br />\n }</p>\n\n<p>};</p>\n\n<p>} <br />\n public void onPause(){</p>\n\n<p>super.onPause(); <br />\n finish();</p>\n\n<p>} <br />\n // onPause <br />\n //super onpause <br />\n // run finish there</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View v) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>}</p>\n\n<p>}</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288707165000,"created_by":1,"updated_at":1396135801000,"updated_by":1,"published_at":1288707165000,"published_by":1},{"id":214,"uuid":"902365ba-5d06-4c71-a7ea-1692921fa2e8","title":"Openframeworks to work with visual studio express 2010 C++","slug":"openframeworks-to-work-with-visual-studio-express-2010-c-2","markdown":"\nGetting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.\n\nI found this link very useful in helping me build a project\n\n[http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899](http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899)\n\nSteps c, d, and e I found to be the most important.\n\nOnce you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.\n\nOne of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.\n\n\n","html":"<p>Getting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.</p>\n\n<p>I found this link very useful in helping me build a project</p>\n\n<p><a href=\"http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899\">http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899</a></p>\n\n<p>Steps c, d, and e I found to be the most important.</p>\n\n<p>Once you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.</p>\n\n<p>One of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295285759000,"created_by":1,"updated_at":1395799348000,"updated_by":1,"published_at":1295285759000,"published_by":1},{"id":215,"uuid":"79a3f837-a0a0-4d2a-9484-6ebcd600e550","title":"Kinect touchtable no go!","slug":"kinect-touchtable-no-go-2","markdown":"\nSo why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p>So why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295286514000,"created_by":1,"updated_at":1390233381000,"updated_by":1,"published_at":null,"published_by":1},{"id":216,"uuid":"fdf94320-7902-43c5-9d00-e614d35b70d2","title":"Thesis proposal","slug":"thesis-proposal-2","markdown":"\n[![](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg \"thesis-explain1\")](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg)\n\nTo create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg \"thesis-explain2\")](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg)\n\nNot just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg \"thesis-explain3\")](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg)Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain4.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg \"thesis-explain4\")](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg)We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain5.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg \"thesis-explain5\")](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg)We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain6.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg \"thesis-explain6\")](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg)In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg \"thesis-explain7\")](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg)\n\nA designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.\n\n\n","html":"<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\" alt=\"\" title=\"thesis-explain1\" /></a></p>\n\n<p>To create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\" alt=\"\" title=\"thesis-explain2\" /></a></p>\n\n<p>Not just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\" alt=\"\" title=\"thesis-explain3\" /></a>Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain4.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\" alt=\"\" title=\"thesis-explain4\" /></a>We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain5.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\" alt=\"\" title=\"thesis-explain5\" /></a>We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain6.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\" alt=\"\" title=\"thesis-explain6\" /></a>In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\" alt=\"\" title=\"thesis-explain7\" /></a></p>\n\n<p>A designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296091421000,"created_by":1,"updated_at":1396135784000,"updated_by":1,"published_at":1296091421000,"published_by":1},{"id":217,"uuid":"881b466d-7156-47ac-8f95-247afeba3261","title":"Interpretive Exhibits Assignment 1","slug":"interpretive-exhibits-assignment-1-2","markdown":"\nCabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.\n\nThe fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.\n\nOn the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.\n\n**19<sup>th</sup> Century Galleries for Painting and Sculpture MET**\n\nThis gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.\n\n![](http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\")\n\nSome rooms were full of sceneries other full of portraits.\n\n![](http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\")\n\nAs you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.\n\n![](http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\")\n\nRooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.\n\n![](http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\")\n\nThe galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.\n\n![](http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\")\n\nThis gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.\n\n![](http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\")\n\n\n","html":"<p>Cabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.</p>\n\n<p>The fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.</p>\n\n<p>On the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.</p>\n\n<p><strong>19<sup>th</sup> Century Galleries for Painting and Sculpture MET</strong></p>\n\n<p>This gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\"\" alt=\"\" /></p>\n\n<p>Some rooms were full of sceneries other full of portraits.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\"\" alt=\"\" /></p>\n\n<p>As you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\"\" alt=\"\" /></p>\n\n<p>Rooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\"\" alt=\"\" /></p>\n\n<p>The galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\"\" alt=\"\" /></p>\n\n<p>This gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296494055000,"created_by":1,"updated_at":1396135777000,"updated_by":1,"published_at":null,"published_by":1},{"id":218,"uuid":"04421163-6546-420c-ae74-b92b4f3df330","title":"Thesis Explanation","slug":"thesis-explanation-2","markdown":"\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.\n\nUnderstanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.\n\nThe philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.\n\nWhat I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.\n\nThe main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:\n\nWhat is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\n\n","html":"<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.</p>\n\n<p>Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.</p>\n\n<p>The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.</p>\n\n<p>What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.</p>\n\n<p>The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked:</p>\n\n<p>What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296706855000,"created_by":1,"updated_at":1396135764000,"updated_by":1,"published_at":1296706855000,"published_by":1},{"id":219,"uuid":"0b3b8243-65cf-40bc-95e4-356f2ffc7d75","title":"Inspiration","slug":"inspiration-2","markdown":"\nTouchOSC\n\n[http://hexler.net/software/touchosc](http://hexler.net/software/touchosc)\n\nTouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi\n\nPros:\n\n-Could create custom interface\n\n-Works with many languages ie java, Max/MSP\n\n-Standard protocol\n\nCons:\n\n-Have to know how to program\n\n-TouchOSC is platform dependent\n\n-Needs to run on a local network\n\nOpen exhibits\n\n[http://openexhibits.org/](http://openexhibits.org/)\n\nOpen exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.\n\nPro:\n\n-Has integrated support for social media sites like youtube and flickr\n\n-Advanced touchscreen gesture Â capabilities\n\n-open api\n\nCons:\n\n-Flash based\n\n-Does not work with most cellphones\n\n-\n\n-\n\n\n","html":"<p>TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi</p>\n\n<p>Pros:</p>\n\n<p>-Could create custom interface</p>\n\n<p>-Works with many languages ie java, Max/MSP</p>\n\n<p>-Standard protocol</p>\n\n<p>Cons:</p>\n\n<p>-Have to know how to program</p>\n\n<p>-TouchOSC is platform dependent</p>\n\n<p>-Needs to run on a local network</p>\n\n<p>Open exhibits</p>\n\n<p><a href=\"http://openexhibits.org/\">http://openexhibits.org/</a></p>\n\n<p>Open exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.</p>\n\n<p>Pro:</p>\n\n<p>-Has integrated support for social media sites like youtube and flickr</p>\n\n<p>-Advanced touchscreen gesture Â capabilities</p>\n\n<p>-open api</p>\n\n<p>Cons:</p>\n\n<p>-Flash based</p>\n\n<p>-Does not work with most cellphones</p>\n\n<p>-</p>\n\n<p>-</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296707521000,"created_by":1,"updated_at":1396135735000,"updated_by":1,"published_at":1296707521000,"published_by":1},{"id":220,"uuid":"4d88dce5-4074-4af3-b476-3504413eb657","title":"The Experience Economy","slug":"the-experience-economy-2","markdown":"\nI found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.\n\nWhat I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.\n\nIt is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.\n\nBut hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.\n\n\n","html":"<p>I found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.</p>\n\n<p>What I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.</p>\n\n<p>It is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.</p>\n\n<p>But hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297101085000,"created_by":1,"updated_at":1396135744000,"updated_by":1,"published_at":null,"published_by":1},{"id":221,"uuid":"018e8006-67d2-4b2e-9dd9-72a66b159856","title":"Hall of Human Origins Amnh","slug":"hall-of-human-origins-amnh-2","markdown":"\nThe goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery\n\n[![hallofhumanorigins](http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425864400/ \"hallofhumanorigins by zevenwolf, on Flickr\")\n\nThe exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425186441/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.\n\nAt the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.\n\nBehind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425193583/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThere are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.\n\n[![P1020326](http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425284329/ \"P1020326 by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425794626/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425792758/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nI never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425200813/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425198079/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThis music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425798918/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n\n","html":"<p>The goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425864400/\" title=\"hallofhumanorigins by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg\" alt=\"hallofhumanorigins\" title=\"\" /></a></p>\n\n<p>The exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425186441/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.</p>\n\n<p>At the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.</p>\n\n<p>Behind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425193583/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>There are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425284329/\" title=\"P1020326 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg\" alt=\"P1020326\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425794626/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425792758/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>I never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425200813/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425198079/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>This music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425798918/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297106875000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":222,"uuid":"4c529aa4-ed72-406f-ac19-d408fab47cdd","title":"Where I am at.....","slug":"where-i-am-at-2","markdown":"\n*Skip to **how it works** if you have read my previous thesis post  \n*  \n Zevensuy Rodriguez\n\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.  \n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.  \n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.  \n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.  \n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:  \n What is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\nHow it works?  \n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.\n\nInput  \n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.\n\nProcessing  \n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.\n\n In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.\n\nOutput  \n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.\n\nWhy touchscreens?  \n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.\n\n The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.\n\nVocabulary  \n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.\n\n More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.\n\n Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?\n\n Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.\n\nInspiration  \n TouchOSC\n\nhttp://hexler.net/software/touchosc\n\n TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device.  \n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.\n\nOpen Exhibits  \n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.\n\nLemurTron\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron3_Evan_Cairo.jpg\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron4_Evan_Cairo.jpg\n\n LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely.  \n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.\n\nBibliography\n\nSheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print.  \n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print.  \n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print.  \n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print.  \n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.\n\nNorman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.\n\n3quarksdaily. Web. 10 Feb. 2011. <>. </>\n\n\n","html":"<p>*Skip to <strong>how it works</strong> if you have read my previous thesis post <br />\n* <br />\n Zevensuy Rodriguez</p>\n\n<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored. <br />\n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service. <br />\n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent. <br />\n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information. <br />\n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked: <br />\n What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>\n\n<p>How it works? <br />\n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.</p>\n\n<p>Input <br />\n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.</p>\n\n<p>Processing <br />\n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.</p>\n\n<p>In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&amp;LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.</p>\n\n<p>Output <br />\n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.</p>\n\n<p>Why touchscreens? <br />\n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.</p>\n\n<p>The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.</p>\n\n<p>Vocabulary <br />\n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.</p>\n\n<p>More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.</p>\n\n<p>Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?</p>\n\n<p>Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.</p>\n\n<p>Inspiration <br />\n TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device. <br />\n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.</p>\n\n<p>Open Exhibits <br />\n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.</p>\n\n<p>LemurTron</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron3\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron3</a><em>Evan</em>Cairo.jpg</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron4\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron4</a><em>Evan</em>Cairo.jpg</p>\n\n<p>LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely. <br />\n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.</p>\n\n<p>Bibliography</p>\n\n<p>Sheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print. <br />\n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print. <br />\n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print. <br />\n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print. <br />\n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.</p>\n\n<p>Norman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.</p>\n\n<p>3quarksdaily. Web. 10 Feb. 2011. &lt;>. </></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297342881000,"created_by":1,"updated_at":1396135753000,"updated_by":1,"published_at":1297342881000,"published_by":1},{"id":223,"uuid":"4ff7583f-cca7-46d3-a9eb-bca715bfea27","title":"Traveling Exhibits","slug":"traveling-exhibits-2","markdown":"\n In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.\n\n The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.\n\n One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.\n\n\n","html":"<p>In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.</p>\n\n<p>The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.</p>\n\n<p>One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297645648000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":224,"uuid":"f472d29c-41e3-4f41-b361-b05afe704dcc","title":"Forbidden City: MET","slug":"forbidden-city-met-2","markdown":"\n[![forbiddencity](http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg)](http://www.flickr.com/photos/zevenrodriguez/5445260425/ \"forbiddencity by zevenwolf, on Flickr\")\n\nI felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5445260425/\" title=\"forbiddencity by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg\" alt=\"forbiddencity\" title=\"\" /></a></p>\n\n<p>I felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297708099000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":225,"uuid":"7c569bbb-d952-4505-b898-f08baa3072d1","title":"Prototype and Production","slug":"prototype-and-production-2","markdown":"\nMy thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â [![](http://oddgui.com/content/images/2011/02/inputtooutput.jpg \"inputtooutput\")](http://oddgui.com/content/images/2011/02/inputtooutput.jpg)In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.\n\n[![](http://oddgui.com/content/images/2011/02/users.jpg \"users\")](http://oddgui.com/content/images/2011/02/users.jpg)\n\nOnce users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.\n\nAreas of focus(What will be built out for thesis):\n\n- Everything except the general diagnostics\n\n[![](http://oddgui.com/content/images/2011/02/usersinter.jpg \"usersinter\")](http://oddgui.com/content/images/2011/02/usersinter.jpg)\n\nOnce the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.\n\nAreas of focus:\n\n- Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)\n\n[![](http://oddgui.com/content/images/2011/02/design.jpg \"design\")](http://oddgui.com/content/images/2011/02/design.jpg)The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.\n\nArea of focus:\n\n- The 2 loads I will focus on are steppers and LEDs\n- In the interaction type will be Gesture(being swipes, etc) Â and Button\n\n[![](http://oddgui.com/content/images/2011/02/setup.jpg \"setup\")](http://oddgui.com/content/images/2011/02/setup.jpg)\n\nThe output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.\n\nArea of focus:\n\n- This is a crucial step that needs to be done\n\n[![](http://oddgui.com/content/images/2011/02/output.jpg \"output\")](http://oddgui.com/content/images/2011/02/output.jpg)\n\nBuild for thesis:\n\n**Online Software (This should happen in the next 2 weeks)**\n\n- 2 displays use cases using gestures\n- User Main area\n- Stepper Form\n- Led Form\n- Gesture Form\n- Button Form\n- Input Interpreter\n- Output Interpreter\n\n**Hardware (Rest of the Semester)**\n\n- Software to interpret information coming from online\n- Create 2 turntables\n- Collect information to put in the display cases ie Vase and Elements or Minerals\n\nThese are the 2 use cases:\n\nOne is a rotating vase that updates content based on how the user rotates it .\n\n[![](http://oddgui.com/content/images/2011/02/vase.jpg \"vase\")](http://oddgui.com/content/images/2011/02/vase.jpg)\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">[![](http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg \"microscope-exhibit\")](http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg)  \n</span></span></span>\n\n\n","html":"<p>My thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â <a href=\"http://oddgui.com/content/images/2011/02/inputtooutput.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/inputtooutput.jpg\" alt=\"\" title=\"inputtooutput\" /></a>In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.</p>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/users.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/users.jpg\" alt=\"\" title=\"users\" /></a></p>\n\n<p>Once users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.</p>\n\n<p>Areas of focus(What will be built out for thesis):</p>\n\n<ul>\n<li>Everything except the general diagnostics</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/usersinter.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/usersinter.jpg\" alt=\"\" title=\"usersinter\" /></a></p>\n\n<p>Once the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.</p>\n\n<p>Areas of focus:</p>\n\n<ul>\n<li>Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/design.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/design.jpg\" alt=\"\" title=\"design\" /></a>The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>The 2 loads I will focus on are steppers and LEDs</li>\n<li>In the interaction type will be Gesture(being swipes, etc) Â and Button</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/setup.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/setup.jpg\" alt=\"\" title=\"setup\" /></a></p>\n\n<p>The output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>This is a crucial step that needs to be done</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/output.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/output.jpg\" alt=\"\" title=\"output\" /></a></p>\n\n<p>Build for thesis:</p>\n\n<p><strong>Online Software (This should happen in the next 2 weeks)</strong></p>\n\n<ul>\n<li>2 displays use cases using gestures</li>\n<li>User Main area</li>\n<li>Stepper Form</li>\n<li>Led Form</li>\n<li>Gesture Form</li>\n<li>Button Form</li>\n<li>Input Interpreter</li>\n<li>Output Interpreter</li>\n</ul>\n\n<p><strong>Hardware (Rest of the Semester)</strong></p>\n\n<ul>\n<li>Software to interpret information coming from online</li>\n<li>Create 2 turntables</li>\n<li>Collect information to put in the display cases ie Vase and Elements or Minerals</li>\n</ul>\n\n<p>These are the 2 use cases:</p>\n\n<p>One is a rotating vase that updates content based on how the user rotates it .</p>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/vase.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/vase.jpg\" alt=\"\" title=\"vase\" /></a></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\"><a href=\"http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg\" alt=\"\" title=\"microscope-exhibit\" /></a> <br />\n</span></span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298565772000,"created_by":1,"updated_at":1396135530000,"updated_by":1,"published_at":1298565772000,"published_by":1},{"id":226,"uuid":"93e9e105-75d0-4dcf-971a-cb0806d9ac3d","title":"Moma: Abstract Expressionists","slug":"moma-abstract-expressionists-2","markdown":"\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486203504/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485609505/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.\n\n[![abstractexpressionists](http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485650855/ \"abstractexpressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486205936/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485612137/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nOne of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486203504/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485609505/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485650855/\" title=\"abstractexpressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg\" alt=\"abstractexpressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486205936/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485612137/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>One of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298913273000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":227,"uuid":"6802e05f-6df8-4b84-8822-16c2498fd1fa","title":"Commercial Gallery","slug":"commercial-gallery-2","markdown":"\nI went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.\n\n[![P1020530](http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547681740/ \"P1020530 by zevenwolf, on Flickr\")\n\nThe Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.\n\n[![P1020532](http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547682142/ \"P1020532 by zevenwolf, on Flickr\")\n\nThe main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.\n\n![](http://arrestedmotion.com/content/images/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\")\n\n\n","html":"<p>I went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547681740/\" title=\"P1020530 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg\" alt=\"P1020530\" title=\"\" /></a></p>\n\n<p>The Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547682142/\" title=\"P1020532 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg\" alt=\"P1020532\" title=\"\" /></a></p>\n\n<p>The main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.</p>\n\n<p><img src=\"http://arrestedmotion.com/content/images/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1300735279000,"created_by":1,"updated_at":1396135497000,"updated_by":1,"published_at":null,"published_by":1},{"id":228,"uuid":"90a9ebd0-e05c-41c2-b3cb-80232168e906","title":"Adafruit Stepper Gear","slug":"adafruit-stepper-gear-2","markdown":"\nThis Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:\n\nNumber of Teeth: 10\n\nCircular Pitch: 6.4\n\nPressure angle: 10\n\n\n","html":"<p>This Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:</p>\n\n<p>Number of Teeth: 10</p>\n\n<p>Circular Pitch: 6.4</p>\n\n<p>Pressure angle: 10</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1302124038000,"created_by":1,"updated_at":1396135622000,"updated_by":1,"published_at":1302124038000,"published_by":1},{"id":229,"uuid":"0bdb541e-f0dc-4b62-a3ba-a63fc1a57797","title":"Sparkfun OpAmp Breakout  LMV358","slug":"sparkfun-opamp-breakout-lmv358-2","markdown":"\nThe LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.\n\n[http://www.sparkfun.com/products/9816](http://www.sparkfun.com/products/9816)\n\n[![Sparkfun OpAmp Breakout LMV358](http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg)](http://www.flickr.com/photos/zevenrodriguez/6258550298/ \"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\")\n\n\n","html":"<p>The LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.</p>\n\n<p><a href=\"http://www.sparkfun.com/products/9816\">http://www.sparkfun.com/products/9816</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6258550298/\" title=\"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg\" alt=\"Sparkfun OpAmp Breakout LMV358\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1318967797000,"created_by":1,"updated_at":1396135612000,"updated_by":1,"published_at":1318967797000,"published_by":1},{"id":230,"uuid":"1739ac0b-5145-4e4a-ba82-5434c42604ab","title":"ChronoDot and Arduino 1.0","slug":"chronodot-and-arduino-1-0-2","markdown":"\nRecently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;\n\nThe code can be found here [https://github.com/adafruit/RTClib](https://github.com/adafruit/RTClib)\n\n[![ChronoDot and Arduino](http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347082745/ \"ChronoDot and Arduino by zevenwolf, on Flickr\")\n\nThe red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.\n\n\n","html":"<p>Recently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;</p>\n\n<p>The code can be found here <a href=\"https://github.com/adafruit/RTClib\">https://github.com/adafruit/RTClib</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347082745/\" title=\"ChronoDot and Arduino by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg\" alt=\"ChronoDot and Arduino\" title=\"\" /></a></p>\n\n<p>The red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321371914000,"created_by":1,"updated_at":1396135601000,"updated_by":1,"published_at":1321371914000,"published_by":1},{"id":231,"uuid":"b232c9db-83ad-47ef-81b2-804fbbf2b24a","title":"8 minute PCB Test","slug":"8-minute-pcb-test-2","markdown":"\nToday I am testing out the [8 minute PCB kit from PulsarFX](http://www.pcbfx.com/)\n\nI am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.\n\n[![PCB Test](http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347135881/ \"PCB Test by zevenwolf, on Flickr\")\n\n\n","html":"<p>Today I am testing out the <a href=\"http://www.pcbfx.com/\">8 minute PCB kit from PulsarFX</a></p>\n\n<p>I am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347135881/\" title=\"PCB Test by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg\" alt=\"PCB Test\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321383642000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":232,"uuid":"a75a982b-b20a-45d9-9eee-2ef09c02aba3","title":"Working with Rotary Encoders","slug":"working-with-rotary-encoders-2","markdown":"\nA rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on [Paul Stoffregen’s Encoder library and explanations](http://www.pjrc.com/teensy/td_libs_Encoder.html).\n\n[![Rotary Encoder](http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6835975655/ \"Rotary Encoder by zevenwolf, on Flickr\")\n\n[![encoder](http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg)](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\nInside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png)\n\nPin 1 == Low & Pin 2 == Low ==> Position 1\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png)\n\nPin 1 == High & Pin 2 == Low ==> Position 2. Â We know that we have moved left.\n\nThe arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library [http://www.pjrc.com/teensy/td_libs_Encoder.html](http://www.pjrc.com/teensy/td_libs_Encoder.html \"Encoder Library\"). I used the basic code in the library example.\n\n**Arduino**\n\n[cc lang=\"c\"]  \n /* Encoder Library – Basic Example\n\n* http://www.pjrc.com/teensy/td_libs_Encoder.html\n\nThis example code is in the public domain.  \n */  \n #include <Encoder.h>  \n // Change these two numbers to the pins connected to your encoder.  \n // Â  Best Performance: both pins have interrupt capability  \n // Â  Good Performance: only the first pin has interrupt capability  \n // Â  Low Performance: Â neither pin has interrupt capability  \n Encoder myEnc(5, 6);  \n // Â  avoid using pins with LEDs attached  \n void setup() {  \n Serial.begin(9600);  \n Serial.println(“Basic Encoder Test:”);  \n }  \n long oldPosition Â = -999;  \n void loop() {  \n long newPosition = myEnc.read();  \n if (newPosition != oldPosition) {  \n oldPosition = newPosition;  \n Serial.println(newPosition);  \n }  \n }  \n [/cc]  \n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.\n\n[  \n](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\n[![encoder serial monitor](http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6871360321/ \"encoder serial monitor by zevenwolf, on Flickr\")\n\n**Advanced Topic: Inverse Logic and Arduino Pull-up**\n\nThe Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.\n\n[![pullupresistor](http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg)](http://www.flickr.com/photos/zevenrodriguez/6836949291/ \"pullupresistor by zevenwolf, on Flickr\")\n\n*Note: This library can use the [arduinoÂ interrupt](http://arduino.cc/playground/Code/Interrupts) pins for better performance.*\n\n\n","html":"<p>A rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\">Paul Stoffregen’s Encoder library and explanations</a>.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6835975655/\" title=\"Rotary Encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg\" alt=\"Rotary Encoder\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg\" alt=\"encoder\" title=\"\" /></a></p>\n\n<p>Inside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 <mark> Low &amp; Pin 2 </mark> Low <mark>> Position 1</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 </mark> High &amp; Pin 2 <mark> Low </mark>> Position 2. Â We know that we have moved left.</p>\n\n<p>The arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\" title=\"Encoder Library\">http://www.pjrc.com/teensy/td<em>libs</em>Encoder.html</a>. I used the basic code in the library example.</p>\n\n<p><strong>Arduino</strong></p>\n\n<p>[cc lang=\"c\"] <br />\n /* Encoder Library – Basic Example</p>\n\n<ul>\n<li><a href=\"http://www.pjrc.com/teensy/td\">http://www.pjrc.com/teensy/td</a><em>libs</em>Encoder.html</li>\n</ul>\n\n<p>This example code is in the public domain. <br />\n */ <br />\n #include <Encoder.h> <br />\n // Change these two numbers to the pins connected to your encoder. <br />\n // Â  Best Performance: both pins have interrupt capability <br />\n // Â  Good Performance: only the first pin has interrupt capability <br />\n // Â  Low Performance: Â neither pin has interrupt capability <br />\n Encoder myEnc(5, 6); <br />\n // Â  avoid using pins with LEDs attached <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n Serial.println(“Basic Encoder Test:”); <br />\n } <br />\n long oldPosition Â = -999; <br />\n void loop() { <br />\n long newPosition = myEnc.read(); <br />\n if (newPosition != oldPosition) { <br />\n oldPosition = newPosition; <br />\n Serial.println(newPosition); <br />\n } <br />\n } <br />\n [/cc] <br />\n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"> <br />\n</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6871360321/\" title=\"encoder serial monitor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg\" alt=\"encoder serial monitor\" title=\"\" /></a></p>\n\n<p><strong>Advanced Topic: Inverse Logic and Arduino Pull-up</strong></p>\n\n<p>The Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6836949291/\" title=\"pullupresistor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg\" alt=\"pullupresistor\" title=\"\" /></a></p>\n\n<p><em>Note: This library can use the <a href=\"http://arduino.cc/playground/Code/Interrupts\">arduinoÂ interrupt</a> pins for better performance.</em></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1328640717000,"created_by":1,"updated_at":1396135569000,"updated_by":1,"published_at":1328640717000,"published_by":1},{"id":233,"uuid":"d72cc117-def1-4c4e-ad8d-fde66280ab20","title":"Intro to TSL2561","slug":"intro-to-tsl2561-2","markdown":"\nThe TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using [Lady Ada’s guide](http://www.ladyada.net/learn/sensors/tsl2561.html) and [library](https://github.com/adafruit/TSL2561-Arduino-Library). In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room\n\n[![tsl2561output](http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg)](http://www.flickr.com/photos/zevenrodriguez/6810906612/ \"tsl2561output by zevenwolf, on Flickr\")\n\n \n\n<span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span>\n\n[cc lang=\"c\"]\n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n //uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n //Serial.println(x, DEC);\n\n// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum  \n // That way you can do whatever math and comparions you want!  \n uint32_t lum = tsl.getFullLuminosity();  \n uint16_t ir, full;  \n ir = lum >> 16;  \n full = lum & 0xFFFF;  \n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”);  \n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”);  \n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”);  \n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir));  \n Serial.print(“n”);  \n delay(100);  \n }\n\n \n\n \n\nIn thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read [http://www.arduino.cc/playground/Code/BitMath](http://www.arduino.cc/playground/Code/BitMath \"BitMath\")\n\nir = lum >> 16;\n\nfull = lum & 0xFFFF;\n\n \n\nFor a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561_VISIBLE,Â TSL2561_FULLSPECTRUM,Â TSL2561_INFRARED into it.\n\n \n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n Serial.println(x, DEC);  \n delay(100);  \n }  \n [/cc]\n\n\n","html":"<p>The TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using <a href=\"http://www.ladyada.net/learn/sensors/tsl2561.html\">Lady Ada’s guide</a> and <a href=\"https://github.com/adafruit/TSL2561-Arduino-Library\">library</a>. In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6810906612/\" title=\"tsl2561output by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg\" alt=\"tsl2561output\" title=\"\" /></a></p>\n\n<p><span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span></p>\n\n<p>[cc lang=\"c\"]</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n //Serial.println(x, DEC);</p>\n\n<p>// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum <br />\n // That way you can do whatever math and comparions you want! <br />\n uint32<em>t lum = tsl.getFullLuminosity(); <br />\n uint16</em>t ir, full; <br />\n ir = lum >> 16; <br />\n full = lum &amp; 0xFFFF; <br />\n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”); <br />\n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”); <br />\n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”); <br />\n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir)); <br />\n Serial.print(“n”); <br />\n delay(100); <br />\n }</p>\n\n<p>In thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read <a href=\"http://www.arduino.cc/playground/Code/BitMath\" title=\"BitMath\">http://www.arduino.cc/playground/Code/BitMath</a></p>\n\n<p>ir = lum >> 16;</p>\n\n<p>full = lum &amp; 0xFFFF;</p>\n\n<p>For a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561<em>VISIBLE,Â TSL2561</em>FULLSPECTRUM,Â TSL2561_INFRARED into it.</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n Serial.println(x, DEC); <br />\n delay(100); <br />\n } <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1330985412000,"created_by":1,"updated_at":1396137609000,"updated_by":1,"published_at":1330985412000,"published_by":1},{"id":234,"uuid":"beaf171c-7143-4218-a12d-dc3d81e91231","title":"Blog","slug":"blog-2","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1332297471000,"created_by":1,"updated_at":1332297471000,"updated_by":1,"published_at":1332297471000,"published_by":1},{"id":235,"uuid":"73c280e9-5a96-42a3-ad3c-3e3347cfabcb","title":"Arduino Motor Shield","slug":"arduino-motor-shield-2","markdown":"\nI have been working with the [Arduino Motor Shield](http://arduino.cc/en/Main/ArduinoMotorShieldR3). Here are some of the basic specs for theÂ shield:\n\n- Operating Voltage – 5v to 12v\n- Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor\n- Max Current – 2A per channel or 4A max (with external power supply)\n- Current Sensing – 1.65V/A\n- Free Running stop and brake function\n\n \n\n[![](http://oddgui.com/content/images/2012/04/motorshield.jpg \"motorshield\")](http://oddgui.com/content/images/2012/04/motorshield.jpg)\n\nThis Shield has 4 main functions:\n\n<table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\">**Function**</td><td align=\"center\">**pins per Ch. A**</td><td align=\"center\">**pins per Ch. B**</td></tr><tr><td align=\"left\">*Direction*</td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\">*PWM*</td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\">*Brake*</td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td>*Current Sensing*</td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.\n\nThe last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.\n\nIMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.\n\n \n\n[![](http://oddgui.com/content/images/2012/04/motorshieldback1.jpg \"motorshieldback\")](http://oddgui.com/content/images/2012/04/motorshieldback1.jpg)\n\n \n\n \n\n \n\n \n\n**DC Motor**\n\nThis shield can run 2 DC motors\n\nThis is an example of running 2 DC Motors with Current Sense.\n\n[Â https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino](https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino \"DC Motor example\")\n\n\n","html":"<p>I have been working with the <a href=\"http://arduino.cc/en/Main/ArduinoMotorShieldR3\">Arduino Motor Shield</a>. Here are some of the basic specs for theÂ shield:</p>\n\n<ul>\n<li>Operating Voltage – 5v to 12v</li>\n<li>Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor</li>\n<li>Max Current – 2A per channel or 4A max (with external power supply)</li>\n<li>Current Sensing – 1.65V/A</li>\n<li><p>Free Running stop and brake function</p></li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2012/04/motorshield.jpg\"><img src=\"http://oddgui.com/content/images/2012/04/motorshield.jpg\" alt=\"\" title=\"motorshield\" /></a></p>\n\n<p>This Shield has 4 main functions:</p>\n\n<p><table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\"><strong>Function</strong></td><td align=\"center\"><strong>pins per Ch. A</strong></td><td align=\"center\"><strong>pins per Ch. B</strong></td></tr><tr><td align=\"left\"><em>Direction</em></td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\"><em>PWM</em></td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\"><em>Brake</em></td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td><em>Current Sensing</em></td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.</p>\n\n<p>The last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.</p>\n\n<p>IMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.</p>\n\n<p><a href=\"http://oddgui.com/content/images/2012/04/motorshieldback1.jpg\"><img src=\"http://oddgui.com/content/images/2012/04/motorshieldback1.jpg\" alt=\"\" title=\"motorshieldback\" /></a></p>\n\n<p><strong>DC Motor</strong></p>\n\n<p>This shield can run 2 DC motors</p>\n\n<p>This is an example of running 2 DC Motors with Current Sense.</p>\n\n<p><a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\" title=\"DC Motor example\">Â <a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\">https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino</a></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1334005095000,"created_by":1,"updated_at":1396137563000,"updated_by":1,"published_at":1334005095000,"published_by":1},{"id":236,"uuid":"8a2b353f-efc2-4567-b6b5-92e4b0f89fd0","title":"Gestios.com","slug":"gestios-com-2","markdown":"\nYou can visit my finished thesis at [gestIOs.com](http://gestios.com \"gestIOs.com\")\n\n\n","html":"<p>You can visit my finished thesis at <a href=\"http://gestios.com\" title=\"gestIOs.com\">gestIOs.com</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1336694397000,"created_by":1,"updated_at":1396135296000,"updated_by":1,"published_at":null,"published_by":1},{"id":237,"uuid":"592609e3-2004-4324-8193-6a48f5439013","title":"Sensor Walk","slug":"sensor-walk-2","markdown":"\nI took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>\n","html":"<p>I took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.</p>\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252978010000,"created_by":1,"updated_at":1396135939000,"updated_by":1,"published_at":null,"published_by":1},{"id":238,"uuid":"51c40915-97a6-46ca-95eb-8b8cfa0af59a","title":"Lab 1","slug":"lab-1-2","markdown":"\nThis is my first PhysComp lab. It involved the alternating the states of two LEDs.\n\nHere is the code I used\n\nMore details on the lab could be found [here](http://itp.nyu.edu/physcomp/Labs/DigitalInOut)\n\n*int switchButton = 2; // button  \n int pinYellow = 3; // Yellow LED  \n int pinGreen = 4; // Green LED  \n int switchIni = 0; // Initial state of switch*\n\n*void setup(){  \n pinMode(switchButton, INPUT); //takes in switch signal  \n pinMode(pinYellow, OUTPUT); //yellow output  \n pinMode(pinGreen,OUTPUT); //green output  \n }*\n\n*void loop(){  \n // read the switch  \n switchIni = digitalRead(switchButton);*\n\n*if (switchIni == 1) {  \n // if the switch is closed:  \n digitalWrite(pinYellow, HIGH); // turn on the yellow LED  \n digitalWrite(pinGreen, LOW); // turn off the red LED  \n }  \n else {  \n //if the switch is open:  \n digitalWrite(pinYellow, LOW); // turn off the yellow LED  \n digitalWrite(pinGreen, HIGH); // turn on the red LED  \n }*\n\n*}*  \n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short\n\n![IMG_0093](http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\")\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp – Lab 1](http://vimeo.com/6580726) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This is my first PhysComp lab. It involved the alternating the states of two LEDs.</p>\n\n<p>Here is the code I used</p>\n\n<p>More details on the lab could be found <a href=\"http://itp.nyu.edu/physcomp/Labs/DigitalInOut\">here</a></p>\n\n<p><em>int switchButton = 2; // button <br />\n int pinYellow = 3; // Yellow LED <br />\n int pinGreen = 4; // Green LED <br />\n int switchIni = 0; // Initial state of switch</em></p>\n\n<p><em>void setup(){ <br />\n pinMode(switchButton, INPUT); //takes in switch signal <br />\n pinMode(pinYellow, OUTPUT); //yellow output <br />\n pinMode(pinGreen,OUTPUT); //green output <br />\n }</em></p>\n\n<p><em>void loop(){ <br />\n // read the switch <br />\n switchIni = digitalRead(switchButton);</em></p>\n\n<p><em>if (switchIni == 1) { <br />\n // if the switch is closed: <br />\n digitalWrite(pinYellow, HIGH); // turn on the yellow LED <br />\n digitalWrite(pinGreen, LOW); // turn off the red LED <br />\n } <br />\n else { <br />\n //if the switch is open: <br />\n digitalWrite(pinYellow, LOW); // turn off the yellow LED <br />\n digitalWrite(pinGreen, HIGH); // turn on the red LED <br />\n }</em></p>\n\n<p><em>}</em> <br />\n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\"\" alt=\"IMG_0093\" /></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6580726\">Physcomp – Lab 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252985398000,"created_by":1,"updated_at":1396135947000,"updated_by":1,"published_at":null,"published_by":1},{"id":239,"uuid":"ec0b5b14-d2a4-4289-a6d1-d5d01f89c740","title":"El Pirata","slug":"el-pirata-3","markdown":"\nThis is a Pirate I made using processing.\n\n[El Pirata](http://www.zevenrodriguez.com/itp/icm/week1)\n\n\n","html":"<p>This is a Pirate I made using processing.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week1\">El Pirata</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252967431000,"created_by":1,"updated_at":1396135928000,"updated_by":1,"published_at":null,"published_by":1},{"id":240,"uuid":"11875f7c-0532-44f4-a88f-784a262e281a","title":"Sensor Walk","slug":"sensor-walk-3","markdown":"\nI took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>\n","html":"<p>I took a walk around my neighborhood around Wall street. As part of a assignment for my PhysComp class, I documented all the sensors I saw in the area.</p>\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_23\" style=\"width: 410px\">![Outside of my building this doorbell also contains a camera which picks up anyone who comes close. ](http://zevenwolf.com/itp/uploads/doorbellandcamera.jpg \"doorbellandcamera\")Outside of my building this doorbell also contains a camera which picks up anyone who comes close.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_22\" style=\"width: 410px\">![Buttons and touch screen on both the cell phone and the ATM help users navigate through menus](http://zevenwolf.com/itp/uploads/cellphoneatm.jpg \"cellphoneatm\")Buttons and touch screen on both the cell phone and the ATM help users navigate through menus\n\n</div><div class=\"wp-caption alignnone\" id=\"attachment_20\" style=\"width: 610px\">![Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.](http://zevenwolf.com/itp/uploads/camera.jpg \"camera\")Being on Wall St. a lot of tourists and the media are in the area. Most carry cameras which have sensors to detect light and touch screens and buttons to navigate through menus.\n\n</div>Minutes after taking these pictures I tuned in to MSNBC and the scene I documents in the first picture was on TV following the Presidents address at the Federal Reserve.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_27\" style=\"width: 410px\">![I counted about 20 security cameras in my area all picking up data on the people on the street](http://zevenwolf.com/itp/uploads/securitycam.jpg \"securitycam\")I counted about 20 security cameras in my area all picking up data on the people on the street\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_26\" style=\"width: 310px\">![The Postal Office has a teller for automatic mail services with buttons and touch screen](http://zevenwolf.com/itp/uploads/postaloffice.jpg \"postaloffice\")The Postal Office has a teller for automatic mail services with buttons and touch screen\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_24\" style=\"width: 410px\">![This door signals an emergency when you push the lever](http://zevenwolf.com/itp/uploads/dooropener.jpg \"dooropener\")This door signals an emergency when you push the lever\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_21\" style=\"width: 410px\">![The cashier uses the touch screen on the register to ring up the customer](http://zevenwolf.com/itp/uploads/cashier.jpg \"cashier\")The cashier uses the touch screen on the register to ring up the customer\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 410px\">![This alarm has buttons to test the alarm, but function on sensors to sound the alarm](http://zevenwolf.com/itp/uploads/alarm2.jpg \"alarm\")This alarm has buttons to test the alarm, but function on sensors to sound the alarm\n\n</div>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252978010000,"created_by":1,"updated_at":1396135939000,"updated_by":1,"published_at":null,"published_by":1},{"id":241,"uuid":"6a7ff56c-b9ad-4ca3-b9c4-f4441be1c2bb","title":"Lab 1","slug":"lab-1-3","markdown":"\nThis is my first PhysComp lab. It involved the alternating the states of two LEDs.\n\nHere is the code I used\n\nMore details on the lab could be found [here](http://itp.nyu.edu/physcomp/Labs/DigitalInOut)\n\n*int switchButton = 2; // button  \n int pinYellow = 3; // Yellow LED  \n int pinGreen = 4; // Green LED  \n int switchIni = 0; // Initial state of switch*\n\n*void setup(){  \n pinMode(switchButton, INPUT); //takes in switch signal  \n pinMode(pinYellow, OUTPUT); //yellow output  \n pinMode(pinGreen,OUTPUT); //green output  \n }*\n\n*void loop(){  \n // read the switch  \n switchIni = digitalRead(switchButton);*\n\n*if (switchIni == 1) {  \n // if the switch is closed:  \n digitalWrite(pinYellow, HIGH); // turn on the yellow LED  \n digitalWrite(pinGreen, LOW); // turn off the red LED  \n }  \n else {  \n //if the switch is open:  \n digitalWrite(pinYellow, LOW); // turn off the yellow LED  \n digitalWrite(pinGreen, HIGH); // turn on the red LED  \n }*\n\n*}*  \n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short\n\n![IMG_0093](http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\")\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp – Lab 1](http://vimeo.com/6580726) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This is my first PhysComp lab. It involved the alternating the states of two LEDs.</p>\n\n<p>Here is the code I used</p>\n\n<p>More details on the lab could be found <a href=\"http://itp.nyu.edu/physcomp/Labs/DigitalInOut\">here</a></p>\n\n<p><em>int switchButton = 2; // button <br />\n int pinYellow = 3; // Yellow LED <br />\n int pinGreen = 4; // Green LED <br />\n int switchIni = 0; // Initial state of switch</em></p>\n\n<p><em>void setup(){ <br />\n pinMode(switchButton, INPUT); //takes in switch signal <br />\n pinMode(pinYellow, OUTPUT); //yellow output <br />\n pinMode(pinGreen,OUTPUT); //green output <br />\n }</em></p>\n\n<p><em>void loop(){ <br />\n // read the switch <br />\n switchIni = digitalRead(switchButton);</em></p>\n\n<p><em>if (switchIni == 1) { <br />\n // if the switch is closed: <br />\n digitalWrite(pinYellow, HIGH); // turn on the yellow LED <br />\n digitalWrite(pinGreen, LOW); // turn off the red LED <br />\n } <br />\n else { <br />\n //if the switch is open: <br />\n digitalWrite(pinYellow, LOW); // turn off the yellow LED <br />\n digitalWrite(pinGreen, HIGH); // turn on the red LED <br />\n }</em></p>\n\n<p><em>}</em> <br />\n In the wiring I initially had an issue with this. I did not realize I had put the red wire in the same rail as the blue. Thus I was getting a short</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/IMG_0093.jpg \"IMG_0093\"\" alt=\"IMG_0093\" /></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6580726&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6580726\">Physcomp – Lab 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252985398000,"created_by":1,"updated_at":1396135947000,"updated_by":1,"published_at":null,"published_by":1},{"id":242,"uuid":"c6bce243-2c4c-4121-91c2-7756c17a0ba7","title":"Traffic light","slug":"traffic-light-3","markdown":"\nSo I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Traffic Light](http://vimeo.com/6582107) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the code I used\n\nint pinRed = 3;  \n int pinYellow = 4;  \n int pinGreen = 5;  \n int switchButton = 2; // button  \n int switchIni = 0; // Initial state of switch\n\nvoid setup(){  \n pinMode(pinRed, OUTPUT);  \n pinMode(pinYellow, OUTPUT);  \n pinMode(pinGreen, OUTPUT);  \n pinMode(switchButton, INPUT); //takes in switch signal\n\n}\n\nvoid loop(){  \n switchIni = digitalRead(switchButton);\n\nif (switchIni == 1){  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);  \n digitalWrite(pinYellow, HIGH);  \n digitalWrite(pinRed, LOW);  \n digitalWrite(pinGreen, LOW);  \n delay(1000);\n\ndigitalWrite(pinGreen, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinRed, LOW);  \n delay(5000);\n\n}\n\nelse{  \n digitalWrite(pinRed, HIGH);  \n digitalWrite(pinYellow, LOW);  \n digitalWrite(pinGreen, LOW);  \n }\n\n}\n\n\n","html":"<p>So I tried to code a traffic light. This is a rough sketch. The idea is to have a toy car roll over the contacts and it initiate the traffic signaling.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6582107&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6582107\">Traffic Light</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the code I used</p>\n\n<p>int pinRed = 3; <br />\n int pinYellow = 4; <br />\n int pinGreen = 5; <br />\n int switchButton = 2; // button <br />\n int switchIni = 0; // Initial state of switch</p>\n\n<p>void setup(){ <br />\n pinMode(pinRed, OUTPUT); <br />\n pinMode(pinYellow, OUTPUT); <br />\n pinMode(pinGreen, OUTPUT); <br />\n pinMode(switchButton, INPUT); //takes in switch signal</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n switchIni = digitalRead(switchButton);</p>\n\n<p>if (switchIni == 1){ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000); <br />\n digitalWrite(pinYellow, HIGH); <br />\n digitalWrite(pinRed, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n delay(1000);</p>\n\n<p>digitalWrite(pinGreen, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinRed, LOW); <br />\n delay(5000);</p>\n\n<p>}</p>\n\n<p>else{ <br />\n digitalWrite(pinRed, HIGH); <br />\n digitalWrite(pinYellow, LOW); <br />\n digitalWrite(pinGreen, LOW); <br />\n }</p>\n\n<p>}</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1252995651000,"created_by":1,"updated_at":1396135995000,"updated_by":1,"published_at":1252995651000,"published_by":1},{"id":243,"uuid":"5c446f1e-782a-4fad-b8b8-8118f2ed21d4","title":"processingWeek2","slug":"processingweek2-3","markdown":"\nWell this is the 2nd week of processing and all is going well so far.\n\nFor my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.\n\n[http://www.zevenrodriguez.com/itp/icm/week2/](http://www.zevenrodriguez.com/itp/icm/week2/)\n\nI decided also to do a second animation with my pirate\n\n[http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/](http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/)\n\n\n","html":"<p>Well this is the 2nd week of processing and all is going well so far.</p>\n\n<p>For my first assignment I went ahead and used randomization and mouse position to create rectangles, trapezoids, and circles. click the link to view the program.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/\">http://www.zevenrodriguez.com/itp/icm/week2/</a></p>\n\n<p>I decided also to do a second animation with my pirate</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/\">http://www.zevenrodriguez.com/itp/icm/week2/elpirata2/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253395966000,"created_by":1,"updated_at":1396136013000,"updated_by":1,"published_at":null,"published_by":1},{"id":244,"uuid":"89decba4-a74c-442b-a965-d60e5a8375b3","title":"Fantasy Machine: De-atomizer","slug":"fantasy-machine-de-atomizer-3","markdown":"\nThis is my Fantasy machine for Tom Igoe’s Physical Comp class.\n\n![deatomizer](http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\")\n\nFor a better view download [here](http://zevenrodriguez.com/itp/uploads/deatomizer.pdf)\n\n\n","html":"<p>This is my Fantasy machine for Tom Igoe’s Physical Comp class.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/deatomizer1-525x1024.jpg \"deatomizer\"\" alt=\"deatomizer\" /></p>\n\n<p>For a better view download <a href=\"http://zevenrodriguez.com/itp/uploads/deatomizer.pdf\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253533703000,"created_by":1,"updated_at":1396136026000,"updated_by":1,"published_at":1253533703000,"published_by":1},{"id":245,"uuid":"19aff9a3-72bc-42e5-851b-78279def9d76","title":"Lab 2 part 3","slug":"lab-2-part-3-3","markdown":"\nThis was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red\n\nThis is the code I wrote\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led3 = 3; // displays what the pot is doing  \n int led6 = 6;  \n int led9 = 9;  \n int led10 = 10;  \n int led11 = 11;\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){  \n /*  \n so I need potvalue/4 and divide by 7 to get the range\n\n*/  \n potValue = analogRead(potPin); //read pot value  \n potValue = potValue/4;\n\nif (potValue <= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) && (potValue <= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) && (potValue <= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) && (potValue <= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) && (potValue <= 240)){  \n analogWrite(led11, 255);  \n analogWrite(led3, 0);  \n analogWrite(led6, 0);  \n analogWrite(led9, 0);  \n analogWrite(led10, 0);  \n }\n\n//pwm led w/ pot value  \n Serial.println(potValue/4);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part3](http://vimeo.com/6686222) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This was a simple experiment using a pot to show changing lights from red–>yellow–>green–>yellow–>red</p>\n\n<p>This is the code I wrote</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led3 = 3; // displays what the pot is doing <br />\n int led6 = 6; <br />\n int led9 = 9; <br />\n int led10 = 10; <br />\n int led11 = 11;</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){ <br />\n /* <br />\n so I need potvalue/4 and divide by 7 to get the range</p>\n\n<p>*/ <br />\n potValue = analogRead(potPin); //read pot value <br />\n potValue = potValue/4;</p>\n\n<p>if (potValue &lt;= 42){ analogWrite(led3, 255); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if((potValue > 42) &amp;&amp; (potValue &lt;= 84)){ analogWrite(led6, 255); analogWrite(led3, 0); analogWrite(led9, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 84) &amp;&amp; (potValue &lt;= 126)){ analogWrite(led9, 255); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led10, 0); analogWrite(led11, 0); } else if ((potValue > 126) &amp;&amp; (potValue &lt;= 168)){ analogWrite(led10, potValue); analogWrite(led3, 0); analogWrite(led6, 0); analogWrite(led9, 0); analogWrite(led11, 0); } else if ((potValue > 168) &amp;&amp; (potValue &lt;= 240)){ <br />\n analogWrite(led11, 255); <br />\n analogWrite(led3, 0); <br />\n analogWrite(led6, 0); <br />\n analogWrite(led9, 0); <br />\n analogWrite(led10, 0); <br />\n }</p>\n\n<p>//pwm led w/ pot value <br />\n Serial.println(potValue/4);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6686222&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6686222\">Physcomp-Lab 2 part3</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534410000,"created_by":1,"updated_at":1396136039000,"updated_by":1,"published_at":null,"published_by":1},{"id":246,"uuid":"d7df691c-2b33-4bc6-8f87-0876db4e5fe0","title":"Lab 2 Part 2","slug":"lab-2-part-2-3","markdown":"\nThis second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.\n\nThis is the code I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing  \n int led2 = 10;  \n int x = 0;  \n int y = 0;  \n void setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n x = potValue/4;// sets the value arrange between 0 and 255\n\nif (x < 10){  \n // makes for smoother range control  \n x = 0;  \n }  \n x = map(x,0, 150, 0, 255);\n\ny = -(x – 150);  \n if (y < 20){  \n // makes for smoother range control  \n y = 0;  \n }  \n y = map(y,0, 150, 0, 255);\n\nanalogWrite(led, x); //pwm led w/ pot value  \n analogWrite(led2, y); //pwm led w/ pot value\n\n//Serial.println(x);//print value  \n Serial.println(y);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp-Lab 2 part2](http://vimeo.com/6656105) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This second part was using another type of analog switch to control leds. I used a photocell and when you put your hand over it switches between the lights. The hardest part was figuring out how to get the arduino to read the photocell. I referenced week 4′s lab. What I figured out was on the board first to run the positive —>photocell(+)—> photocell(-)—>Arduino analog in—>220Ohm resister—>Ground. The analog in reads the resistance off the photocell. Another issue I ran into was dealing with the photocell reading to make it smoother because of the fluctuations in light.</p>\n\n<p>This is the code I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing <br />\n int led2 = 10; <br />\n int x = 0; <br />\n int y = 0; <br />\n void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n x = potValue/4;// sets the value arrange between 0 and 255</p>\n\n<p>if (x &lt; 10){ <br />\n // makes for smoother range control <br />\n x = 0; <br />\n } <br />\n x = map(x,0, 150, 0, 255);</p>\n\n<p>y = -(x – 150); <br />\n if (y &lt; 20){ <br />\n // makes for smoother range control <br />\n y = 0; <br />\n } <br />\n y = map(y,0, 150, 0, 255);</p>\n\n<p>analogWrite(led, x); //pwm led w/ pot value <br />\n analogWrite(led2, y); //pwm led w/ pot value</p>\n\n<p>//Serial.println(x);//print value <br />\n Serial.println(y);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"align\" value=\"center\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed align=\"center\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656105&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656105\">Physcomp-Lab 2 part2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534507000,"created_by":1,"updated_at":1396136047000,"updated_by":1,"published_at":null,"published_by":1},{"id":247,"uuid":"ccefe4c2-24a8-4f9d-adf1-5506712c309a","title":"Lab2 Working with Pots","slug":"lab2-working-with-pots-3","markdown":"\nThis Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.\n\nint potPin = 0; // analog pin that pot attaches too “blue wire”  \n int potValue = 0; //value initial  \n int led = 9; // displays what the pot is doing\n\nvoid setup(){\n\nSerial.begin(9600);\n\n}\n\nvoid loop(){\n\npotValue = analogRead(potPin); //read pot value  \n analogWrite(led, potValue/4); //pwm led w/ pot value  \n Serial.println(potValue);//print value  \n delay(10);\n\n}\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab2 part1](http://vimeo.com/6656078) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nFor more info about this lab [click here](http://itp.nyu.edu/physcomp/Intro/HomePage)\n\n\n","html":"<p>This Lab worked with analog circuits. This first part was not too challenging. Here is the code that I used for this.</p>\n\n<p>int potPin = 0; // analog pin that pot attaches too “blue wire” <br />\n int potValue = 0; //value initial <br />\n int led = 9; // displays what the pot is doing</p>\n\n<p>void setup(){</p>\n\n<p>Serial.begin(9600);</p>\n\n<p>}</p>\n\n<p>void loop(){</p>\n\n<p>potValue = analogRead(potPin); //read pot value <br />\n analogWrite(led, potValue/4); //pwm led w/ pot value <br />\n Serial.println(potValue);//print value <br />\n delay(10);</p>\n\n<p>}</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6656078&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6656078\">Physcomp Lab2 part1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>For more info about this lab <a href=\"http://itp.nyu.edu/physcomp/Intro/HomePage\">click here</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1253534627000,"created_by":1,"updated_at":1396136055000,"updated_by":1,"published_at":null,"published_by":1},{"id":248,"uuid":"376c3889-a86f-4683-8653-0ca883a4f220","title":"Lab 3 Working without Arduino","slug":"lab-3-working-without-arduino-3","markdown":"\nThis lab was mostly to focus on building circuits with out the Arduino\n\nI started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.\n\n![measuringwallwart](http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\")\n\nThe power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v\n\n![measuringaftervoltageregulator](http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\")\n\nThis is my basic LED circuit with a switch.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Basic circuit](http://vimeo.com/6815927) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nI then connected another LED in series\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Components in Series](http://vimeo.com/6815988) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThen measured the first LED in the circuit  \n![series1](http://zevenwolf.com/itp/uploads/series1.jpg \"series1\")\n\nThen the second\n\n![series2](http://zevenwolf.com/itp/uploads/series2.jpg \"series2\")\n\nFinally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3- series Led plus 1](http://vimeo.com/6816161) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nIn the parallel circuit I measured the amperage after the LEDs.\n\n![parallelmilliamps](http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\")\n\nThe last part I measured the resistance on a pot.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n[Physcomp Lab3-Pot Variable Voltage Measuring](http://vimeo.com/6816307) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This lab was mostly to focus on building circuits with out the Arduino</p>\n\n<p>I started by first looking at my power adapter. The adapter I was using was Positive on the outside and Negative on the inside.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringwallwart.jpg \"measuringwallwart\"\" alt=\"measuringwallwart\" /></p>\n\n<p>The power adapter is connected through the breadboard to a 7805 5-volt voltage regulator which drops the 9v to 5v</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/measuringaftervoltageregulator.jpg \"measuringaftervoltageregulator\"\" alt=\"measuringaftervoltageregulator\" /></p>\n\n<p>This is my basic LED circuit with a switch.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815927&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815927\">Physcomp Lab3-Basic circuit</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>I then connected another LED in series</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6815988&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6815988\">Physcomp Lab3-Components in Series</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Then measured the first LED in the circuit <br />\n<img src=\"http://zevenwolf.com/itp/uploads/series1.jpg \"series1\"\" alt=\"series1\" /></p>\n\n<p>Then the second</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/series2.jpg \"series2\"\" alt=\"series2\" /></p>\n\n<p>Finally, I added with a third LED. When I did that the intensity of the LEDs dropped. The last led dims because most of the voltage is sucked up by the first 2 leaving the last LED with a smaller current.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816161&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816161\">Physcomp Lab3- series Led plus 1</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>In the parallel circuit I measured the amperage after the LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/parallelmilliamps.jpg \"parallelmilliamps\"\" alt=\"parallelmilliamps\" /></p>\n\n<p>The last part I measured the resistance on a pot.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6816307&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p><a href=\"http://vimeo.com/6816307\">Physcomp Lab3-Pot Variable Voltage Measuring</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1254227620000,"created_by":1,"updated_at":1396136062000,"updated_by":1,"published_at":null,"published_by":1},{"id":249,"uuid":"263e9b5e-104b-4db9-9a86-89a1315e216e","title":"Lab 4 Servo and Tone","slug":"lab-4-servo-and-tone-3","markdown":"\nThe breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Photocell tone](http://vimeo.com/6990458) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code is to check the range of the photocells\n\n*<span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }* This code uses the 2 photocells to make a thermin *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\">[http://code.google.com/p/arduino-tone/](http://code.google.com/p/arduino-tone/)</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }*\n\nThis video shows using 3 analog resistors to make a make-shift instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab4 - Three analog inputs](http://vimeo.com/6990488) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n Here is the code\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> */</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor < 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }*\n\nFinally I made an instrument\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Musical Instrument](http://vimeo.com/6990438) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).  \n*#include <Tone.h>*  \n*Tone noiseMaker; // instance of the tone library*  \n*int notes[] = {*  \n*NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };*  \n*int durations[] = {*  \n*100, 100, 100, 100, 100};*  \n*void setup() {*  \n*// start the music:*  \n*noiseMaker.begin(8);*  \n*Serial.begin(9600);*  \n*}*  \n*void loop() {*  \n*int pot = analogRead(5);*  \n*pot = pot/4;*  \n*Serial.println(pot);*  \n*//depending on were the pot is play series of tones at differnt pitches*  \n*if(pot > 204){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[0]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*}*  \n*else if((pot < 204) && (pot > 153)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[1]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 153) && (pot > 102)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[2]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 102) && (pot > 51)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[3]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n*}*  \n*// hold before repeating:*  \n*}*  \n*else if((pot < 51) && (pot >= 0)){*  \n*for (int thisNote = 0; thisNote < 5; thisNote ++) {*  \n*// change the pitch:*  \n*noiseMaker.play(notes[4]);*  \n*delay(durations[thisNote]);*  \n*// stop for the next note:*  \n*noiseMaker.stop();*  \n }  \n*// hold before repeating:*  \n*}*  \n*}*  \n**  \n Now using the servo\n\nThe servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.\n\n**\n\n<div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 – Using Pulse code](http://vimeo.com/6990504) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis code does not use the arduino servo library\n\n*<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw & Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\">*/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab4 - Using Servo Library](http://vimeo.com/6990466) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com). *<span style=\"color: #7e7e7e;\">/*</span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include <<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *\n\n\n","html":"<p>The breadboard is wired with 2 photocells in series go to pin 0. The photocells give an average range in the resistance. Depending which photocell you choose it pushes the resistance either towards the ends of the range. They make sure that all the voltage does not reach the arduino. The speaker goes to pin 8. It does not go to the Pulse Width Modulation because PWM changes the volume of the speaker.</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990458&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990458\">Physcomp Lab4 – Photocell tone</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code is to check the range of the photocells</p>\n\n<p><em><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">int</span> sensorValue = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">println</span>(sensorValue, <span style=\"color: #006699;\">DEC</span>); }</em> This code uses the 2 photocells to make a thermin <em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Theremin</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> Plays tones based on a sensor reading</span><span style=\"color: #7e7e7e;\"> uses Tone library by Brett Hagman</span><span style=\"color: #7e7e7e;\"><a href=\"http://code.google.com/p/arduino-tone/\">http://code.google.com/p/arduino-tone/</a></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * photoresistor from +5V to analog in 0</span><span style=\"color: #7e7e7e;\"> * photoresistor from analog pin 0 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> created 10 Sep 2009</span><span style=\"color: #7e7e7e;\"> by Tom Igoe </span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(0); <span style=\"color: #7e7e7e;\">// map the results from the sensor reading's range</span><span style=\"color: #7e7e7e;\">// to the desired pitch range:</span><span style=\"color: #cc6600;\">int</span> pitch = <span style=\"color: #cc6600;\">map</span>(sensorReading, 200, 900, 100, 1000); <span style=\"color: #7e7e7e;\">// change the pitch:</span> noiseMaker.play(pitch); }</em></p>\n\n<p>This video shows using 3 analog resistors to make a make-shift instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990488&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990488\">Phsycomp Lab4 - Three analog inputs</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n Here is the code</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> circuit:</span><span style=\"color: #7e7e7e;\"> * 3 force-sensing resistors from +5V to analog in 0 through 5</span><span style=\"color: #7e7e7e;\"> * 3 10K resistors from analog in 0 through 5 to ground</span><span style=\"color: #7e7e7e;\"> * 8-ohm speaker on digital pin 8</span><span style=\"color: #7e7e7e;\"></span><span style=\"color: #7e7e7e;\"> <em>/</span> #include <Tone.h> Tone noiseMaker; <span style=\"color: #7e7e7e;\">// instance of the tone library</span> const <span style=\"color: #cc6600;\">int</span> threshold = 10; <span style=\"color: #7e7e7e;\">// minimum reading of the sensors that generates a note</span><span style=\"color: #7e7e7e;\">// notes to play, corresponding to the 3 sensors:</span><span style=\"color: #cc6600;\">int</span> notes[] = { NOTE_A4, NOTE_B4,NOTE_C4 }; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start the music:</span> noiseMaker.<span style=\"color: #cc6600;\">begin</span>(8); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #cc6600;\">for</span> (<span style=\"color: #cc6600;\">int</span> thisSensor = 0; thisSensor &lt; 3; thisSensor++) { <span style=\"color: #7e7e7e;\">// get a sensor reading:</span><span style=\"color: #cc6600;\">int</span> sensorReading = <span style=\"color: #cc6600;\">analogRead</span>(thisSensor); <span style=\"color: #7e7e7e;\">// if the sensor is pressed hard enough:</span><span style=\"color: #cc6600;\">if</span> (sensorReading > threshold) { <span style=\"color: #7e7e7e;\">// play the note corresponding to this sensor:</span> noiseMaker.play(notes[thisSensor]); } <span style=\"color: #cc6600;\">else</span> { <span style=\"color: #7e7e7e;\">// stop playing:</span> noiseMaker.<span style=\"color: #cc6600;\">stop</span>(); } } }</em></p>\n\n<p>Finally I made an instrument</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990438&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990438\">Physcomp Lab4 - Musical Instrument</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. <br />\n<em>#include <Tone.h></em> <br />\n<em>Tone noiseMaker; // instance of the tone library</em> <br />\n<em>int notes[] = {</em> <br />\n<em>NOTE_D4, NOTE_E4,NOTE_C4,NOTE_C3 };</em> <br />\n<em>int durations[] = {</em> <br />\n<em>100, 100, 100, 100, 100};</em> <br />\n<em>void setup() {</em> <br />\n<em>// start the music:</em> <br />\n<em>noiseMaker.begin(8);</em> <br />\n<em>Serial.begin(9600);</em> <br />\n<em>}</em> <br />\n<em>void loop() {</em> <br />\n<em>int pot = analogRead(5);</em> <br />\n<em>pot = pot/4;</em> <br />\n<em>Serial.println(pot);</em> <br />\n<em>//depending on were the pot is play series of tones at differnt pitches</em> <br />\n<em>if(pot > 204){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[0]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 204) &amp;&amp; (pot > 153)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[1]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 153) &amp;&amp; (pot > 102)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[2]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 102) &amp;&amp; (pot > 51)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[3]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n<em>}</em> <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>else if((pot &lt; 51) &amp;&amp; (pot >= 0)){</em> <br />\n<em>for (int thisNote = 0; thisNote &lt; 5; thisNote ++) {</em> <br />\n<em>// change the pitch:</em> <br />\n<em>noiseMaker.play(notes[4]);</em> <br />\n<em>delay(durations[thisNote]);</em> <br />\n<em>// stop for the next note:</em> <br />\n<em>noiseMaker.stop();</em> <br />\n } <br />\n<em>// hold before repeating:</em> <br />\n<em>}</em> <br />\n<em>}</em> <br />\n** <br />\n Now using the servo</p>\n\n<p>The servo is connected directly to 5v rail on the breadboard. The servo goes to pin 2. The force sensor goes to analog in.</p>\n\n<p>**</p>\n\n<p><div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990504&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990504\">Physcomp Lab4 – Using Pulse code</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This code does not use the arduino servo library</p>\n\n<p><em><span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\"> Servo control from an analog input</span><span style=\"color: #7e7e7e;\">The minimum (minPulse) and maxiumum (maxPulse) values</span><span style=\"color: #7e7e7e;\">will be different depending on your specific servo motor.</span><span style=\"color: #7e7e7e;\">Ideally, it should be between 1 and 2 milliseconds, but in practice,</span><span style=\"color: #7e7e7e;\">0.5 - 2.5 milliseconds works well for me.</span><span style=\"color: #7e7e7e;\">Try different values to see what numbers are best for you.</span><span style=\"color: #7e7e7e;\">This program uses the millis() function to keep track of when the servo was</span><span style=\"color: #7e7e7e;\">last pulsed. millis() produces an overflow error (i.e. generates a number</span><span style=\"color: #7e7e7e;\">that's too big to fit in a long variable) after about 5 days. if you're</span><span style=\"color: #7e7e7e;\">making a program that has to run for more than 5 days, you may need to</span><span style=\"color: #7e7e7e;\">account for this.</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">additions by Carlyn Maw &amp; Rob Faludi</span><span style=\"color: #7e7e7e;\">Created 28 Jan. 2006</span><span style=\"color: #7e7e7e;\">Updated 10 Jun. 2008</span><span style=\"color: #7e7e7e;\"><em>/</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor</span><span style=\"color: #cc6600;\">int</span> minPulse = 500; <span style=\"color: #7e7e7e;\">// Minimum servo position</span><span style=\"color: #cc6600;\">int</span> maxPulse = 2500; <span style=\"color: #7e7e7e;\">// Maximum servo position</span><span style=\"color: #cc6600;\">int</span> pulse = 0; <span style=\"color: #7e7e7e;\">// Amount to pulse the servo</span><span style=\"color: #cc6600;\">long</span> lastPulse = 0; <span style=\"color: #7e7e7e;\">// the time in milliseconds of the last pulse</span><span style=\"color: #cc6600;\">int</span> refreshTime = 20; <span style=\"color: #7e7e7e;\">// the time needed in between pulses</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor's on</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #cc6600;\">pinMode</span>(servoPin, <span style=\"color: #006699;\">OUTPUT</span>); <span style=\"color: #7e7e7e;\">// Set servo pin as an output pin</span> pulse = minPulse; <span style=\"color: #7e7e7e;\">// Set the motor position value to the minimum</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input</span> pulse = <span style=\"color: #cc6600;\">map</span>(analogValue,0,1023,minPulse,maxPulse); <span style=\"color: #7e7e7e;\">// convert the analog value</span><span style=\"color: #7e7e7e;\">// to a range between minPulse</span><span style=\"color: #7e7e7e;\">// and maxPulse.</span><span style=\"color: #7e7e7e;\">// pulse the servo again if rhe refresh time (20 ms) have passed:</span><span style=\"color: #cc6600;\">if</span> (<span style=\"color: #cc6600;\">millis</span>() - lastPulse >= refreshTime) { <span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">HIGH</span>); <span style=\"color: #7e7e7e;\">// Turn the motor on</span><span style=\"color: #cc6600;\">delayMicroseconds</span>(pulse); <span style=\"color: #7e7e7e;\">// Length of the pulse sets the motor position</span><span style=\"color: #cc6600;\">digitalWrite</span>(servoPin, <span style=\"color: #006699;\">LOW</span>); <span style=\"color: #7e7e7e;\">// Turn the motor off</span> lastPulse = <span style=\"color: #cc6600;\">millis</span>(); <span style=\"color: #7e7e7e;\">// save the time of the last pulse</span> } } *This is servo part is using the Servo.h library <div style=\" text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=6990466&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/6990466\">Physcomp Lab4 - Using Servo Library</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>. *<span style=\"color: #7e7e7e;\">/</em></span><span style=\"color: #7e7e7e;\">Servo control from an analog input using the Arduino Servo library</span><span style=\"color: #7e7e7e;\">This example code uses the Arduino Servo library which comes packaged with the Arduino software.</span><span style=\"color: #7e7e7e;\">In order to make this work, you must include the Servo.h library file, create an instance of the Servo object. </span><span style=\"color: #7e7e7e;\">attach a pin to the Servo object, and then write an analog value to the Servo object to set its </span><span style=\"color: #7e7e7e;\">position.</span><span style=\"color: #7e7e7e;\">The difference between using the Servo library and the older method of pulsing a digital pin is that the library</span><span style=\"color: #7e7e7e;\">handles a lot of the work for you. You no longer need to figure out the translation between pulse length and position. </span><span style=\"color: #7e7e7e;\">You now can simply specify the angle you'd like your servo to be at and it will turn to that position.</span><span style=\"color: #7e7e7e;\">Updated 08 Sep 2009</span><span style=\"color: #7e7e7e;\">by Rory Nugent</span><span style=\"color: #7e7e7e;\">Created 20 Jan 2009</span><span style=\"color: #7e7e7e;\">by Tom Igoe</span><span style=\"color: #7e7e7e;\">*/</span> #include &lt;<span style=\"color: #cc6600;\">Servo</span>.h> <span style=\"color: #7e7e7e;\">// include the servo library</span><span style=\"color: #cc6600;\">Servo</span> servoMotor; <span style=\"color: #7e7e7e;\">// creates an instance of the servo object to control a servo</span><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #7e7e7e;\">// the analog pin that the sensor is on</span><span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #7e7e7e;\">// the value returned from the analog sensor</span><span style=\"color: #cc6600;\">int</span> servoPin = 2; <span style=\"color: #7e7e7e;\">// Control pin for servo motor, may only be pin 9 or 10</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { servoMotor.<span style=\"color: #cc6600;\">attach</span>(servoPin); <span style=\"color: #7e7e7e;\">// attaches the servo on pin 2 to the servo object</span> } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); <span style=\"color: #7e7e7e;\">// read the analog input (value between 0 and 1023)</span> analogValue = <span style=\"color: #cc6600;\">map</span>(analogValue, 0, 1023, 0, 179); <span style=\"color: #7e7e7e;\">// map the analog value (0 - 1023) to the angle of the servo (0 - 179)</span> servoMotor.<span style=\"color: #cc6600;\">write</span>(analogValue); <span style=\"color: #7e7e7e;\">// write the new mapped analog value to set the position of the servo</span><span style=\"color: #cc6600;\">delay</span>(15); <span style=\"color: #7e7e7e;\">// waits for the servo to get there </span> } *</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255210186000,"created_by":1,"updated_at":1396136072000,"updated_by":1,"published_at":null,"published_by":1},{"id":250,"uuid":"92fd7318-67b2-458f-8dd7-e91e9be5e936","title":"Stupid Pet Trick: The Nurse Station","slug":"stupid-pet-trick-the-nurse-station-3","markdown":"\nThe Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: The Nurse Station](http://vimeo.com/7003116) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Stupid Pet Trick: Internals](http://vimeo.com/7003141) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nHere is the code\n\n*#include <Servo.h>  \n Servo servoMotor;*\n\n*int fsrPin = 0; // Analog input pin that the potentiometer is attached to  \n int fsrValue = 0; // value read from the pot  \n int fsrRef = 10; // value read from the pot  \n int redLed = 4;  \n int yellowLed = 3;  \n int greenLed = 2;  \n int servoPin = 8;  \n long time = 0;  \n long lastTime = 0;  \n boolean setTime=true;*\n\n*void setup() {  \n // initialize serial communications at 9600 bps:  \n Serial.begin(9600);  \n // declare the led pin as an output:  \n pinMode(redLed, OUTPUT);  \n pinMode(greenLed, OUTPUT);  \n pinMode(yellowLed, OUTPUT);  \n //pinMode(speakerPin, OUTPUT);  \n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin  \n // pulse = minPulse;  \n servoMotor.attach(servoPin);  \n //noiseMaker.begin(9);*\n\n*}*\n\n*void loop() {*\n\n*fsrValue = analogRead(fsrPin); // read the pot value  \n Serial.println(fsrValue);  \n if(fsrValue < 60){  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n digitalWrite(greenLed, LOW);  \n // Serial.println(“this is when the fsr is not pressed”);  \n //Serial.println(time);  \n servoMotor.write(0);  \n setTime=true;  \n // Serial.println(lastTime);*\n\n*}*\n\n*if(fsrValue > 60 && setTime == true){  \n lastTime= millis();  \n //Serial.println(“START TIMER”);  \n setTime=false;  \n //Serial.println(lastTime);  \n }*\n\n*if(fsrValue > 60) {  \n if(millis() – lastTime < 5000){  \n digitalWrite(greenLed, HIGH);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, LOW);  \n servoMotor.write(27);*\n\n*}  \n if((millis() – lastTime >= 5000) && (millis() – lastTime <10000)){*\n\n*digitalWrite(greenLed, LOW);  \n digitalWrite(redLed, LOW);  \n digitalWrite(yellowLed, HIGH);  \n servoMotor.write(50);  \n // Serial.println(“TEN SECOND LOOP”);  \n //Serial.println(lastTime);  \n }*\n\n*if (millis() – lastTime >= 10000 ){  \n //Serial.println(“20 SECOND LOOP”);*\n\n*digitalWrite(yellowLed, LOW);  \n digitalWrite(redLed, HIGH);  \n digitalWrite(greenLed, LOW);  \n servoMotor.write(75);  \n //Serial.println(lastTime);  \n }  \n delay(100);  \n }*\n\n*//Serial.println(lastTime);  \n }*\n\nThe next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.\n\n\n","html":"<p>The Nurse Station is a beer nursing meter. It goes placed on a bar counter and is used to measure if the person who places their beer on the coaster has left their beer too long on the counter.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003116&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003116\">Stupid Pet Trick: The Nurse Station</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7003141&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7003141\">Stupid Pet Trick: Internals</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Here is the code</p>\n\n<p><em>#include <Servo.h> <br />\n Servo servoMotor;</em></p>\n\n<p><em>int fsrPin = 0; // Analog input pin that the potentiometer is attached to <br />\n int fsrValue = 0; // value read from the pot <br />\n int fsrRef = 10; // value read from the pot <br />\n int redLed = 4; <br />\n int yellowLed = 3; <br />\n int greenLed = 2; <br />\n int servoPin = 8; <br />\n long time = 0; <br />\n long lastTime = 0; <br />\n boolean setTime=true;</em></p>\n\n<p><em>void setup() { <br />\n // initialize serial communications at 9600 bps: <br />\n Serial.begin(9600); <br />\n // declare the led pin as an output: <br />\n pinMode(redLed, OUTPUT); <br />\n pinMode(greenLed, OUTPUT); <br />\n pinMode(yellowLed, OUTPUT); <br />\n //pinMode(speakerPin, OUTPUT); <br />\n pinMode(servoPin, OUTPUT); // Set servo pin as an output pin <br />\n // pulse = minPulse; <br />\n servoMotor.attach(servoPin); <br />\n //noiseMaker.begin(9);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void loop() {</em></p>\n\n<p><em>fsrValue = analogRead(fsrPin); // read the pot value <br />\n Serial.println(fsrValue); <br />\n if(fsrValue &lt; 60){ <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n digitalWrite(greenLed, LOW); <br />\n // Serial.println(“this is when the fsr is not pressed”); <br />\n //Serial.println(time); <br />\n servoMotor.write(0); <br />\n setTime=true; <br />\n // Serial.println(lastTime);</em></p>\n\n<p><em>}</em></p>\n\n<p><em>if(fsrValue > 60 &amp;&amp; setTime == true){ <br />\n lastTime= millis(); <br />\n //Serial.println(“START TIMER”); <br />\n setTime=false; <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if(fsrValue > 60) { <br />\n if(millis() – lastTime &lt; 5000){ <br />\n digitalWrite(greenLed, HIGH); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, LOW); <br />\n servoMotor.write(27);</em></p>\n\n<p><em>} <br />\n if((millis() – lastTime >= 5000) &amp;&amp; (millis() – lastTime &lt;10000)){</em></p>\n\n<p><em>digitalWrite(greenLed, LOW); <br />\n digitalWrite(redLed, LOW); <br />\n digitalWrite(yellowLed, HIGH); <br />\n servoMotor.write(50); <br />\n // Serial.println(“TEN SECOND LOOP”); <br />\n //Serial.println(lastTime); <br />\n }</em></p>\n\n<p><em>if (millis() – lastTime >= 10000 ){ <br />\n //Serial.println(“20 SECOND LOOP”);</em></p>\n\n<p><em>digitalWrite(yellowLed, LOW); <br />\n digitalWrite(redLed, HIGH); <br />\n digitalWrite(greenLed, LOW); <br />\n servoMotor.write(75); <br />\n //Serial.println(lastTime); <br />\n } <br />\n delay(100); <br />\n }</em></p>\n\n<p><em>//Serial.println(lastTime); <br />\n }</em></p>\n\n<p>The next step is to re-implement the code not using the Servo.h library so I could add tone. Because tone and servo libraries use the internal timers of the arduino it makes the servo movement erratic. Also I could like to make a more mobile unit.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255211616000,"created_by":1,"updated_at":1396136102000,"updated_by":1,"published_at":1255211616000,"published_by":1},{"id":251,"uuid":"a10c0415-15b5-40f0-a3c1-dfd649797198","title":"ICM Week5 XML and Processing","slug":"icm-week5-xml-and-processing-3","markdown":"\nThis project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.\n\n![week5](http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\")\n\nHere is the code\n\n[Main code](http://www.zevenwolf.com/itp/icm/week5/week5_2.pde)\n\n[Letter Object](http://www.zevenwolf.com/itp/icm/week5/letter.pde)\n\n*import simpleML.*;  \n letter[] table = new letter[26];  \n char[] rssTemp;  \n int rssLength = 0;  \n String[] headlines;  \n String headlinesTemp;  \n int row = 0;  \n int modInterval = 6;  \n int modNumber = 0;  \n int[] letterAmount = new int[26];  \n PFont f;  \n int letterPosX = 0;  \n int letterPosY = 0;*\n\n*void setup(){  \n size(635,480);  \n smooth();  \n background(255);  \n f = createFont( ” Arial ” ,3,true); // Loading font  \n for(int i = 0; i  \n*\n\n* if(i < 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) && (i<12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) && (i<18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) && (i<24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){  \n row = 384;  \n modNumber = i%modInterval;  \n table[i] = new letter( modNumber , row ,106,96);  \n }*\n\n* }*\n\n* //end of array parsing  \n XMLRequest xreq = new XMLRequest(this,”http://rss.netflix.com/Top100RSS”);  \n xreq.makeRequest();*\n\n*}*\n\n*void draw(){  \n for(int i = 0; i  \n 0){  \n for(int i =0; i< rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 && c <= 122) {  \n letterAmount[c-97]++;  \n }  \n //println(c);  \n }// end of i for loop*\n\n* }//end of b loop*\n\n* for(int i = 0; i < letterAmount.length; i++){  \n //println((char) (z+97) + ” ” + letterAmount[z]);  \n table[i].setAmount(letterAmount[i]);*\n\n* textFont(f,16);  \n textAlign(LEFT);  \n text(letterAmount[i],letterPosX + 10,letterPosY +10);  \n /*  \n if(i < 6){ letterPosY = 0; letterPosX = i*106; } if((i >=6) && (i<12)){ letterPosY = 96; letterPosX = ((i%modInterval)*106); } if((i >=12) && (i<18)){ letterPosY = 192; letterPosX = ((i%modInterval)*106); } if((i >=18) && (i<24)){ letterPosY = 288; letterPosX = ((i%modInterval)*106); } if(i>=24){  \n letterPosY = 384;  \n letterPosX = ((i%modInterval)*106);*\n\n* }*\n\n* */*\n\n* }*\n\n*}*\n\n*Letter Object*\n\n*class letter{  \n float x;  \n float y;  \n float letterWidth;  \n float letterHeight;*\n\n*int totalAmount = 0;*\n\n*letter(float tempX, float tempY, float widthLetter, float heightLetter){*\n\n*x = tempX;  \n y = tempY;  \n letterWidth = widthLetter;  \n letterHeight = heightLetter;*\n\n*}*\n\n*void display(){*\n\n*fill(totalAmount);  \n noStroke();  \n rect(x*106,y,letterWidth,letterHeight);  \n }*\n\n*/*  \n void letterdisplay(char letterBig){  \n //takes in a letter and displays it at the top right with a margin of 10  \n textFont(f,16);  \n textAlign(LEFT);  \n text(letterBig,x*106 + 10,y +10);*\n\n*}*/  \n void setAmount(int tempAmount){*\n\n*totalAmount = tempAmount;  \n /*  \n takes the total amount and displays it*\n\n**/*\n\n*}*\n\n*}*\n\n**\n\n\n","html":"<p>This project was using Simplml and Processing to pull in the netflix top 100 and takes all of the titles and counts the amount of a specific letter there are in the titles. The image below shows the graphic representation of this. There are 26 boxes. The darker the box the lest amount of letters there are. The issue I current have is figuring out how to use PFont with objects.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/week5-300x237.jpg \"week5\"\" alt=\"week5\" /></p>\n\n<p>Here is the code</p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/week5_2.pde\">Main code</a></p>\n\n<p><a href=\"http://www.zevenwolf.com/itp/icm/week5/letter.pde\">Letter Object</a></p>\n\n<p><em>import simpleML.</em>; <br />\n letter[] table = new letter[26]; <br />\n char[] rssTemp; <br />\n int rssLength = 0; <br />\n String[] headlines; <br />\n String headlinesTemp; <br />\n int row = 0; <br />\n int modInterval = 6; <br />\n int modNumber = 0; <br />\n int[] letterAmount = new int[26]; <br />\n PFont f; <br />\n int letterPosX = 0; <br />\n int letterPosY = 0;*</p>\n\n<p>*void setup(){ <br />\n size(635,480); <br />\n smooth(); <br />\n background(255); <br />\n f = createFont( ” Arial ” ,3,true); // Loading font <br />\n for(int i = 0; i <br />\n*</p>\n\n<ul>\n<li><p>if(i &lt; 6){ row = 0; table[i] = new letter( i , row ,106,96); } if((i >=6) &amp;&amp; (i&lt;12)){ row = 96; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=12) &amp;&amp; (i&lt;18)){ row = 192; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if((i >=18) &amp;&amp; (i&lt;24)){ row = 288; modNumber = i%modInterval; table[i] = new letter( modNumber , row ,106,96); } if(i>=24){ <br />\nrow = 384; <br />\nmodNumber = i%modInterval; <br />\ntable[i] = new letter( modNumber , row ,106,96); <br />\n}*</p></li>\n<li><p>}*</p></li>\n<li><p>//end of array parsing <br />\nXMLRequest xreq = new XMLRequest(this,”<a href=\"http://rss.netflix.com/Top100RSS”\">http://rss.netflix.com/Top100RSS”</a>); <br />\nxreq.makeRequest();*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>void draw(){ <br />\n for(int i = 0; i <br />\n 0){ <br />\n for(int i =0; i&lt; rssLength;i++){ char c = headlinesTemp.charAt(i); if (c >= 97 &amp;&amp; c &lt;= 122) { <br />\n letterAmount[c-97]++; <br />\n } <br />\n //println(c); <br />\n }// end of i for loop</em></p>\n\n<ul>\n<li><p>}//end of b loop*</p></li>\n<li><p>for(int i = 0; i &lt; letterAmount.length; i++){ <br />\n//println((char) (z+97) + ” ” + letterAmount[z]); <br />\ntable[i].setAmount(letterAmount[i]);*</p></li>\n<li><p>textFont(f,16); <br />\ntextAlign(LEFT); <br />\ntext(letterAmount[i],letterPosX + 10,letterPosY +10); <br />\n/* <br />\nif(i &lt; 6){ letterPosY = 0; letterPosX = i<em>106; } if((i >=6) &amp;&amp; (i&lt;12)){ letterPosY = 96; letterPosX = ((i%modInterval)</em>106); } if((i >=12) &amp;&amp; (i&lt;18)){ letterPosY = 192; letterPosX = ((i%modInterval)<em>106); } if((i >=18) &amp;&amp; (i&lt;24)){ letterPosY = 288; letterPosX = ((i%modInterval)</em>106); } if(i>=24){ <br />\nletterPosY = 384; <br />\nletterPosX = ((i%modInterval)<em>106);</em></p></li>\n<li><p>}*</p></li>\n<li><p><em>/</em></p></li>\n<li><p>}*</p></li>\n</ul>\n\n<p><em>}</em></p>\n\n<p><em>Letter Object</em></p>\n\n<p><em>class letter{ <br />\n float x; <br />\n float y; <br />\n float letterWidth; <br />\n float letterHeight;</em></p>\n\n<p><em>int totalAmount = 0;</em></p>\n\n<p><em>letter(float tempX, float tempY, float widthLetter, float heightLetter){</em></p>\n\n<p><em>x = tempX; <br />\n y = tempY; <br />\n letterWidth = widthLetter; <br />\n letterHeight = heightLetter;</em></p>\n\n<p><em>}</em></p>\n\n<p><em>void display(){</em></p>\n\n<p><em>fill(totalAmount); <br />\n noStroke(); <br />\n rect(x</em>106,y,letterWidth,letterHeight); <br />\n }*</p>\n\n<p><em>/</em> <br />\n void letterdisplay(char letterBig){ <br />\n //takes in a letter and displays it at the top right with a margin of 10 <br />\n textFont(f,16); <br />\n textAlign(LEFT); <br />\n text(letterBig,x<em>106 + 10,y +10);</em></p>\n\n<p><em>}</em>/ <br />\n void setAmount(int tempAmount){*</p>\n\n<p><em>totalAmount = tempAmount; <br />\n /</em> <br />\n takes the total amount and displays it*</p>\n\n<p><em>*/</em></p>\n\n<p><em>}</em></p>\n\n<p><em>}</em></p>\n\n<p>**</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1255506019000,"created_by":1,"updated_at":1396136113000,"updated_by":1,"published_at":null,"published_by":1},{"id":252,"uuid":"4a703f67-83ef-45e7-ad5f-9b9be94cc05a","title":"Physcomp Lab6 - Serial Communication","slug":"physcomp-lab6-serial-communication-3","markdown":"\nUsing Serial Communication with Arduino and Processing was not too bad.\n\nThe arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.\n\n<span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }\n\nOnce you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code.  \n import processing.serial.*;\n\nSerial myPort; // The serial port  \n int graphXPos = 1; // the horizontal position of the graph:  \n float randNum = 0;  \n void setup () {  \n size(640, 480); // window size\n\n// List all the available serial ports  \n println(Serial.list());  \n // I know that the fisrt port in the serial list on my mac  \n // is usually my Arduino module, so I open Serial.list()[0].  \n // Open whatever port is the one you’re using.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// set inital background:  \n background(255);  \n smooth();  \n }  \n void draw () {  \n // nothing happens in draw. It all happens in SerialEvent()  \n }\n\nvoid serialEvent (Serial myPort) {  \n // get the byte:  \n int inByte = myPort.read();  \n randNum = random(255);  \n // print it:  \n println(inByte);  \n // set the drawing color. Pick a pretty color:  \n fill(randNum, randNum);  \n noStroke();  \n // draw the ellipse:  \n ellipse(graphXPos, inByte*2, 100, 100);\n\n// at the edge of the screen, go back to the beginning:  \n if (graphXPos >= width) {  \n graphXPos = 0;\n\n}  \n else {  \n // increment the horizontal position for the next reading:  \n graphXPos++;  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab6 – Serial Communication](http://vimeo.com/7165637) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>Using Serial Communication with Arduino and Processing was not too bad.</p>\n\n<p>The arduino code is simple. We are using a Pot put in pin0 and doing a basic analogread. The import things about this whole lab is that you make sure you always close the serial monitor, because only one application could read the serial stream.</p>\n\n<p><span style=\"color: #cc6600;\">int</span> analogPin = 0; <span style=\"color: #cc6600;\">int</span> analogValue = 0; <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// start serial port at 9600 bps:</span><span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">begin</span>(9600); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read analog input, divide by 4 to make the range 0-255:</span> analogValue = <span style=\"color: #cc6600;\">analogRead</span>(analogPin); analogValue = analogValue / 4; <span style=\"color: #cc6600;\">Serial</span>.<span style=\"color: #cc6600;\">print</span>(analogValue, <span style=\"color: #006699;\">BYTE</span>); <span style=\"color: #7e7e7e;\">// pause for 10 milliseconds:</span><span style=\"color: #cc6600;\">delay</span>(10); }</p>\n\n<p>Once you upload close the Arduino application. So you avoid any serial issues. Open processing. I simply altered some code and made a sort of paint brush. Here is the code. <br />\n import processing.serial.*;</p>\n\n<p>Serial myPort; // The serial port <br />\n int graphXPos = 1; // the horizontal position of the graph: <br />\n float randNum = 0; <br />\n void setup () { <br />\n size(640, 480); // window size</p>\n\n<p>// List all the available serial ports <br />\n println(Serial.list()); <br />\n // I know that the fisrt port in the serial list on my mac <br />\n // is usually my Arduino module, so I open Serial.list()[0]. <br />\n // Open whatever port is the one you’re using. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// set inital background: <br />\n background(255); <br />\n smooth(); <br />\n } <br />\n void draw () { <br />\n // nothing happens in draw. It all happens in SerialEvent() <br />\n }</p>\n\n<p>void serialEvent (Serial myPort) { <br />\n // get the byte: <br />\n int inByte = myPort.read(); <br />\n randNum = random(255); <br />\n // print it: <br />\n println(inByte); <br />\n // set the drawing color. Pick a pretty color: <br />\n fill(randNum, randNum); <br />\n noStroke(); <br />\n // draw the ellipse: <br />\n ellipse(graphXPos, inByte*2, 100, 100);</p>\n\n<p>// at the edge of the screen, go back to the beginning: <br />\n if (graphXPos >= width) { <br />\n graphXPos = 0;</p>\n\n<p>} <br />\n else { <br />\n // increment the horizontal position for the next reading: <br />\n graphXPos++; <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7165637&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7165637\">Physcomp Lab6 – Serial Communication</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256047253000,"created_by":1,"updated_at":1396136121000,"updated_by":1,"published_at":null,"published_by":1},{"id":253,"uuid":"0a562274-dfa9-44e6-a08a-eb274b8efede","title":"Observation: The Brita Filter","slug":"observation-the-brita-filter-3","markdown":"\nObservation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.\n\n![filter](http://zevenwolf.com/itp/uploads/filter.jpg \"filter\")\n\nReaction\n\nThe piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.\n\nI think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.\n\n\n","html":"<p>Observation. Pick a piece of interactive technology in public, used by multiple people. Write down your assumptions as to how it’s used, and describe the context in which it’s being used. Watch people use it, preferably without them knowing they’re being observed. Take notes on how they use it, what they do differently, what appear to be the difficulties, what appear to be the easiest parts. Record what takes the longest, what takes the least amount of time, and how long the whole transaction takes. Consider how the readings from Norman and Crawford reflect on what you see.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/filter.jpg \"filter\"\" alt=\"filter\" /></p>\n\n<p>Reaction</p>\n\n<p>The piece of technology I chose was a very simple low tech water purifier that had a short life span on the ITP floor. The technology is called the Brita filter. At first, the Brita filter seems to be designed nicely. Its has a very round shape and its white which makes it seem clean and streamline. This I think is the biggest flaw with the Brita filter. It took me a second to figure out how to switch between purified water and tap water. The knob was tough to grab if your hands get wet and the knob seemed to spin continuously. The nail on the coffin for the Brita filter was when I observed some people not realizing that they were washing dishes with the filtered water. I think this happened because people are not invested in the technology. People tend to take for granted that things happen automatically.</p>\n\n<p>I think the biggest problems with the Brita filter could be fixed some what easily. First would be a more visual indicator that you are using purified water (even if they come out of different orifices). The second would be a larger lever as the switch. The Brita filter helps with using countless water bottles. If you do not make it able to become second nature then the technology fails. Sadly, the filter is now gone.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256084418000,"created_by":1,"updated_at":1396136128000,"updated_by":1,"published_at":null,"published_by":1},{"id":254,"uuid":"fdbfc72b-9beb-4f4b-8606-5dbb7bd87ca3","title":"Lab 7 - Serial Communication 2 and Handshaking","slug":"lab-7-serial-communication-2-and-handshaking-3","markdown":"\nFor this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.\n\nThis arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.\n\n***Arduino Code***\n\nint analogOne = 0; // analog input  \n int analogTwo = 1; // analog input  \n int analogThree = 2; // digital input\n\nint sensorValue = 0; // reading from the sensor\n\nvoid setup() {  \n // configure the serial connection:  \n Serial.begin(9600);  \n // configure the digital input:  \n // pinMode(digitalOne, INPUT);  \n establishContact();  \n }\n\nvoid loop() {  \n if(Serial.available()>0){  \n // read the sensor:  \n sensorValue = analogRead(analogOne);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogTwo);  \n // print the results:  \n Serial.print(sensorValue, DEC);  \n Serial.print(“,”);\n\n// read the sensor:  \n sensorValue = analogRead(analogThree);  \n // print the last sensor value with a println() so that  \n // each set of four readings prints on a line by itself:  \n Serial.println(sensorValue, DEC);  \n }  \n }  \n void establishContact() {  \n while (Serial.available() <= 0) {  \n Serial.println(“hello”); // send a starting message  \n delay(300);  \n }  \n }\n\n***Processing Code***  \n import processing.serial.*; // import the Processing serial library  \n Serial myPort; // The serial port\n\nfloat bgcolor; // Background color  \n float fgcolor; // Fill color  \n float xpos, ypos; // Starting position of the ball  \n boolean firstContact = false; // Whether we’ve heard from the microcontroller\n\nvoid setup() {  \n size(640,480);  \n background(255);  \n smooth();  \n // List all the available serial ports  \n println(Serial.list());\n\n// I know that the first port in the serial list on my mac  \n // is always my Arduino module, so I open Serial.list()[0].  \n // Change the 0 to the appropriate number of the serial port  \n // that your microcontroller is attached to.  \n myPort = new Serial(this, Serial.list()[0], 9600);\n\n// read bytes into a buffer until you get a linefeed (ASCII 10):  \n myPort.bufferUntil(‘n’);\n\n}\n\nvoid draw() {\n\nfill(random(255),fgcolor,random(255), random(255));  \n noStroke();  \n // Draw the shape  \n ellipse(xpos, ypos, 100, 100);  \n }\n\n// serialEvent method is run automatically by the Processing applet  \n // whenever the buffer reaches the byte value set in the bufferUntil()  \n // method in the setup():\n\nvoid serialEvent(Serial myPort) {  \n // read the serial buffer:  \n String myString = myPort.readStringUntil(‘n’);  \n // if you got any bytes other than the linefeed:  \n if (myString != null) {\n\nmyString = trim(myString);\n\nif (firstContact == false) {  \n if (myString.equals(“hello”)) {  \n myPort.clear(); // clear the serial port buffer  \n firstContact = true; // you’ve had first contact from the microcontroller  \n myPort.write(‘A’); // ask for more  \n }  \n }\n\nelse{\n\n// split the string at the commas  \n // and convert the sections into integers:  \n int sensors[] = int(split(myString, ‘,’));\n\n// print out the values you got:  \n for (int sensorNum = 0; sensorNum < sensors.length; sensorNum++) {  \n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”);  \n }  \n // add a linefeed after all the sensor values are printed:  \n println();  \n if (sensors.length > 1) {  \n xpos = map(sensors[0], 0,400,0,width/2);  \n ypos = map(sensors[1], 0,400,0,height/2);  \n fgcolor = sensors[2] / 4;  \n }\n\n}  \n myPort.write(“A”);  \n }  \n }\n\n<div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab7 – Serial Lab 2](http://vimeo.com/7302074) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>For this lab we were doing more advanced serial communication with the arduino and processing. I used 2 pins of an accelerometer and a pot. The hardest part of this lab is the handshaking aspect. The reason it is tricky is because the different types, punctuation and handshaking. The handshaking makes sure that the information does not get backed up in the buffer.</p>\n\n<p>This arduino code sends the information in this format 0,0,0. The punctuation method would just be the code with out this function establishContact(); and this if(Serial.available()>0) . With these 2 parts, we establish the handshake method between the arduino and processing. When the “hello” is sent from the arduino code, the processing code picks it up and sends back a character. This enables processing to get information when it needs it.</p>\n\n<p><strong><em>Arduino Code</em></strong></p>\n\n<p>int analogOne = 0; // analog input <br />\n int analogTwo = 1; // analog input <br />\n int analogThree = 2; // digital input</p>\n\n<p>int sensorValue = 0; // reading from the sensor</p>\n\n<p>void setup() { <br />\n // configure the serial connection: <br />\n Serial.begin(9600); <br />\n // configure the digital input: <br />\n // pinMode(digitalOne, INPUT); <br />\n establishContact(); <br />\n }</p>\n\n<p>void loop() { <br />\n if(Serial.available()>0){ <br />\n // read the sensor: <br />\n sensorValue = analogRead(analogOne); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogTwo); <br />\n // print the results: <br />\n Serial.print(sensorValue, DEC); <br />\n Serial.print(“,”);</p>\n\n<p>// read the sensor: <br />\n sensorValue = analogRead(analogThree); <br />\n // print the last sensor value with a println() so that <br />\n // each set of four readings prints on a line by itself: <br />\n Serial.println(sensorValue, DEC); <br />\n } <br />\n } <br />\n void establishContact() { <br />\n while (Serial.available() &lt;= 0) { <br />\n Serial.println(“hello”); // send a starting message <br />\n delay(300); <br />\n } <br />\n }</p>\n\n<p><strong><em>Processing Code</em></strong> <br />\n import processing.serial.*; // import the Processing serial library <br />\n Serial myPort; // The serial port</p>\n\n<p>float bgcolor; // Background color <br />\n float fgcolor; // Fill color <br />\n float xpos, ypos; // Starting position of the ball <br />\n boolean firstContact = false; // Whether we’ve heard from the microcontroller</p>\n\n<p>void setup() { <br />\n size(640,480); <br />\n background(255); <br />\n smooth(); <br />\n // List all the available serial ports <br />\n println(Serial.list());</p>\n\n<p>// I know that the first port in the serial list on my mac <br />\n // is always my Arduino module, so I open Serial.list()[0]. <br />\n // Change the 0 to the appropriate number of the serial port <br />\n // that your microcontroller is attached to. <br />\n myPort = new Serial(this, Serial.list()[0], 9600);</p>\n\n<p>// read bytes into a buffer until you get a linefeed (ASCII 10): <br />\n myPort.bufferUntil(‘n’);</p>\n\n<p>}</p>\n\n<p>void draw() {</p>\n\n<p>fill(random(255),fgcolor,random(255), random(255)); <br />\n noStroke(); <br />\n // Draw the shape <br />\n ellipse(xpos, ypos, 100, 100); <br />\n }</p>\n\n<p>// serialEvent method is run automatically by the Processing applet <br />\n // whenever the buffer reaches the byte value set in the bufferUntil() <br />\n // method in the setup():</p>\n\n<p>void serialEvent(Serial myPort) { <br />\n // read the serial buffer: <br />\n String myString = myPort.readStringUntil(‘n’); <br />\n // if you got any bytes other than the linefeed: <br />\n if (myString != null) {</p>\n\n<p>myString = trim(myString);</p>\n\n<p>if (firstContact == false) { <br />\n if (myString.equals(“hello”)) { <br />\n myPort.clear(); // clear the serial port buffer <br />\n firstContact = true; // you’ve had first contact from the microcontroller <br />\n myPort.write(‘A’); // ask for more <br />\n } <br />\n }</p>\n\n<p>else{</p>\n\n<p>// split the string at the commas <br />\n // and convert the sections into integers: <br />\n int sensors[] = int(split(myString, ‘,’));</p>\n\n<p>// print out the values you got: <br />\n for (int sensorNum = 0; sensorNum &lt; sensors.length; sensorNum++) { <br />\n print(“Sensor ” + sensorNum + “: ” + sensors[sensorNum] + “t”); <br />\n } <br />\n // add a linefeed after all the sensor values are printed: <br />\n println(); <br />\n if (sensors.length > 1) { <br />\n xpos = map(sensors[0], 0,400,0,width/2); <br />\n ypos = map(sensors[1], 0,400,0,height/2); <br />\n fgcolor = sensors[2] / 4; <br />\n }</p>\n\n<p>} <br />\n myPort.write(“A”); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align:center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7302074&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7302074\">Physcomp Lab7 – Serial Lab 2</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256687500000,"created_by":1,"updated_at":1396136142000,"updated_by":1,"published_at":null,"published_by":1},{"id":255,"uuid":"c3c5f7a8-9ce6-4493-9e48-35f4212f2842","title":"ICM Midterm Project","slug":"icm-midterm-project-3","markdown":"\nFor my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: [http://www.zevenrodriguez.com/itp/icm/midterm/](http://www.zevenrodriguez.com/itp/icm/midterm/)\n\nThis would be the first prompt\n\n![firstpage](http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\")\n\nAfter to press start it should either take a video capture or a image of you and create the display below\n\n![output](http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\")\n\n\n","html":"<p>For my ICM midterm project I want the user to choose a series of of websites that they identify with and using rss feeds compose a text-ural representation of themselves. To view the actual processing app and code visit: <a href=\"http://www.zevenrodriguez.com/itp/icm/midterm/\">http://www.zevenrodriguez.com/itp/icm/midterm/</a></p>\n\n<p>This would be the first prompt</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/firstpage-300x225.png \"firstpage\"\" alt=\"firstpage\" /></p>\n\n<p>After to press start it should either take a video capture or a image of you and create the display below</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/output-300x187.jpg \"output\"\" alt=\"output\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1256732391000,"created_by":1,"updated_at":1396136182000,"updated_by":1,"published_at":1256732391000,"published_by":1},{"id":256,"uuid":"e6b0d5f6-fd99-407d-9117-19c697b9da1a","title":"PComp Midterm-MIDI Light Table: Making the table","slug":"pcomp-midterm-midi-light-table-making-the-table-3","markdown":"\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nFor our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.\n\n<div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Midterm – MIDI Light Table](http://vimeo.com/7494936) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nOne day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.\n\n![1cardboardframe](http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\")\n\nWe decided to use foil to help with the diffusion of light.\n\n![2wiredandfoiled](http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\")\n\nAfter soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.\n\n![3juliofirstwiring](http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\")\n\nWe decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.![4woodtrackwithredlightsonly](http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg \"4woodtrackwithredlightsonly\")\n\nThe wooden block between the tracks contains bearings which help guide the wood easier along the tracks.\n\n![5woodtrackcloseup](http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\")\n\nWe used a resistor ladder to control the brightness of the lights.\n\n![6resistorladderforlights](http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\")\n\nDue to the high friction and the lack of rigidity of wood, metal was used to fix this issue.\n\n![7usingmetal](http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\")\n\nThis was the first time we started testing the brightness of the LEDs and the readings from the photocells.\n\n![8lightgradationtest](http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\")\n\nWe decided to use 2 photocells per cell because after trying one per cell we were getting better readings.\n\n![10undertheobject](http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\")\n\nAfter the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.![11vellumgradtest](http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg \"11vellumgradtest\")The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.\n\n![12aftertheladder](http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\")\n\nAfter testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.\n\n![13testing](http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\")\n\nHere are Julio and Mike doing some testing and calibration.\n\n![14theguystesting](http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\")\n\nThis is the final pot ladder for the lights.\n\n![15finalptladder](http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\")\n\nThis is was the lights looked like when they were tuned.\n\n![16itsworkingkinda](http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\")\n\nOur puck turned out to be a cool little mascot\n\n![17working](http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\")\n\nIn the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit [Julio Terra’s blog](http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp)\n\n\n","html":"<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>For our physical computing midterm Julio Terra, Michael Martinez-Campos, and Myself created a MIDI based light table. We used LEDs in a gradient pattern and a puck like object with photocells to achieve this. The photocells pick up the brightness from the LEDs. The Photocells are connected to the Arduino. Through Processing and using the OSC library we turn the photocell values into MIDI. The light has 2 sets of lights, green and red. Each of cell is composed of a red and green light. The cells provide 2 discrete values that affect the MIDI values that go to the music software. The MIDI information could then be used by many music software. In our case we chose Ableton. This article mostly focuses on the making of the light table.</p>\n\n<p><div style=\"text-align:center\"><object height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494936&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494936\">Physcomp Midterm – MIDI Light Table</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>One day while looking around the shop, I found this cardboard grid. The cardboard grid needed stiffening. Hot glue and a simple wood frame were used. This piece we meant only as a sketch but it seemed to be of great use in the prototype.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/1cardboardframe.jpg \"1cardboardframe\"\" alt=\"1cardboardframe\" /></p>\n\n<p>We decided to use foil to help with the diffusion of light.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/2wiredandfoiled.jpg \"2wiredandfoiled\"\" alt=\"2wiredandfoiled\" /></p>\n\n<p>After soldering the 50 LEDs, we wired the rows of lights in parallel. This made it easy to make sure which lights were not working.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/3juliofirstwiring.jpg \"3juliofirstwiring\"\" alt=\"3juliofirstwiring\" /></p>\n\n<p>We decided to limit the puck object to get a better reading off the LEDs. Initially, we used a wood track to guide the movement of the puck.<img src=\"http://zevenwolf.com/itp/uploads/4woodtrackwithredlightsonly.jpg\" alt=\"4woodtrackwithredlightsonly\" title=\"4woodtrackwithredlightsonly\" /></p>\n\n<p>The wooden block between the tracks contains bearings which help guide the wood easier along the tracks.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/5woodtrackcloseup.jpg \"5woodtrackcloseup\"\" alt=\"5woodtrackcloseup\" /></p>\n\n<p>We used a resistor ladder to control the brightness of the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/6resistorladderforlights.jpg \"6resistorladderforlights\"\" alt=\"6resistorladderforlights\" /></p>\n\n<p>Due to the high friction and the lack of rigidity of wood, metal was used to fix this issue.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/7usingmetal.jpg \"7usingmetal\"\" alt=\"7usingmetal\" /></p>\n\n<p>This was the first time we started testing the brightness of the LEDs and the readings from the photocells.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/8lightgradationtest.jpg \"8lightgradationtest\"\" alt=\"8lightgradationtest\" /></p>\n\n<p>We decided to use 2 photocells per cell because after trying one per cell we were getting better readings.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/10undertheobject.jpg \"10undertheobject\"\" alt=\"10undertheobject\" /></p>\n\n<p>After the first test, we realized that we needed further diffusion of the light. After a chat with our professor, Tom Igoe he suggested some vellum for this purpose.<img src=\"http://zevenwolf.com/itp/uploads/11vellumgradtest.jpg\" alt=\"11vellumgradtest\" title=\"11vellumgradtest\" />The biggest challenge for use was to get the maximum output from the LEDs as possible. We learned that pots could help use vary the resistance of the voltage to get a range of LEDs. This was better then the resistance ladder because it was easier to set. We originally used 10k pots but there was not enough control. We ended up using 1k pots. After using a 5v voltage regulator, we achieved around 2.3 volts on the brightest row of LEDs.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/12aftertheladder.jpg \"12aftertheladder\"\" alt=\"12aftertheladder\" /></p>\n\n<p>After testing, we found that our readings were difficult to map. To help achieve a better reading we decided to put in a push button to only pick up values when you pressed it. We also added a dome and a slit to put in a scroll-like wheel(which is actually a pot) to control volume.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/13testing.jpg \"13testing\"\" alt=\"13testing\" /></p>\n\n<p>Here are Julio and Mike doing some testing and calibration.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/14theguystesting.jpg \"14theguystesting\"\" alt=\"14theguystesting\" /></p>\n\n<p>This is the final pot ladder for the lights.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/15finalptladder.jpg \"15finalptladder\"\" alt=\"15finalptladder\" /></p>\n\n<p>This is was the lights looked like when they were tuned.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/16itsworkingkinda.jpg \"16itsworkingkinda\"\" alt=\"16itsworkingkinda\" /></p>\n\n<p>Our puck turned out to be a cool little mascot</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/17working-265x300.jpg \"17working\"\" alt=\"17working\" /></p>\n\n<p>In the end, the thing we learned most about this project is the amount of testing it really takes for something like this to work. Because of the photocells prefer something with a higher contrast, the table did not work out perfectly. For more information about the programming aspects of this project visit <a href=\"http://julioterrany.blogspot.com/search/label/ITP-IntroPhysicalComp\">Julio Terra’s blog</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257378870000,"created_by":1,"updated_at":1396136195000,"updated_by":1,"published_at":1257378870000,"published_by":1},{"id":257,"uuid":"96c19840-7b8d-4ce6-b8bb-c670e07d3f88","title":"Physcomp Lab8 - Transistors and HBridge","slug":"physcomp-lab8-transistors-and-hbridge-3","markdown":"\nThis week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy.  \n![P1000245-w400](http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\")\n\nThis code is to program the arduino to speed up and slow done the motor.\n\n const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**setup**</span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\">**loop**</span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Physcomp Lab8 – Transistor](http://vimeo.com/7495071) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nNow to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.\n\n![](http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg)This is my wiring.\n\n![P1000237-w400](http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\")\n\nHere is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.\n\nconst int switchPin = 2; // switch input  \n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A)  \n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A)  \n const int enablePin = 9; // H-bridge enable pin  \n const int ledPin = 13; // LED  \n int pot= 0;  \n int potValue = 0;  \n void setup() {  \n Serial.begin(9600);  \n // set the switch as an input:  \n pinMode(switchPin, INPUT);\n\n// set all the other pins you’re using as outputs:  \n pinMode(motor1Pin, OUTPUT);  \n pinMode(motor2Pin, OUTPUT);  \n pinMode(enablePin, OUTPUT);  \n pinMode(ledPin, OUTPUT);\n\n// set enablePin high so that motor can turn on:  \n //digitalWrite(enablePin, HIGH);\n\n// blink the LED 3 times. This should happen only once.  \n // if you see the LED blink three times, it means that the module  \n // reset itself,. probably because the motor caused a brownout  \n // or a short.  \n blink(ledPin, 3, 100);  \n }\n\nvoid loop() {  \n potValue = analogRead(pot);  \n Serial.println(potValue);\n\n// if the switch is high, motor will turn on one direction:  \n if (digitalRead(switchPin) == HIGH) {\n\nanalogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low  \n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high  \n }  \n // if the switch is low, motor will turn in the other direction:  \n else {  \n analogWrite(enablePin, potValue/4);  \n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high  \n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low  \n }  \n }\n\n/*  \n blinks an LED  \n */  \n void blink(int whatPin, int howManyTimes, int milliSecs) {  \n int i = 0;  \n for ( i = 0; i < howManyTimes; i++) {  \n digitalWrite(whatPin, HIGH);  \n delay(milliSecs/2);  \n digitalWrite(whatPin, LOW);  \n delay(milliSecs/2);  \n }  \n }\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Phsycomp Lab8 – HBridge with Pot](http://vimeo.com/7494976) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p>This week we delt with tranistors and HBridge. The transistor help to control motors, lights, or objects that have a higher voltage that the Arduino cannot power. The Transistor has a Base, Collector, and Emitter. The base goes from a pin of the arduino. This acts like a switch for the object you are controlling. The collector, which is the middle pin, goes to ground. The Emitter, the last pin left to right, takes the ground of a motor in this case. The power to the motor comes from the power source that correlates to the voltage of the motor. In this case, we are taking power from the Vin pin. There is a diode that crosses from the Collector to the Emitter. The silver edge goes to the collector. It helps especially with motors because when they spin down they still are making energy. <br />\n<img src=\"http://zevenwolf.com/blog/uploads/P1000245-w400.jpg \"P1000245-w400\"\" alt=\"P1000245-w400\" /></p>\n\n<p>This code is to program the arduino to speed up and slow done the motor.</p>\n\n<p>const <span style=\"color: #cc6600;\">int</span> potPin = 0; <span style=\"color: #7e7e7e;\">// Analog in 0 connected to the potentiometer</span> const <span style=\"color: #cc6600;\">int</span> transistorPin = 9; <span style=\"color: #7e7e7e;\">// connected to the base of the transistor</span><span style=\"color: #cc6600;\">int</span> potValue = 0; <span style=\"color: #7e7e7e;\">// value returned from the potentiometer</span><span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>setup</strong></span>() { <span style=\"color: #7e7e7e;\">// set the transistor pin as output:</span><span style=\"color: #cc6600;\">pinMode</span>(transistorPin, <span style=\"color: #006699;\">OUTPUT</span>); } <span style=\"color: #cc6600;\">void</span><span style=\"color: #cc6600;\"><strong>loop</strong></span>() { <span style=\"color: #7e7e7e;\">// read the potentiometer, convert it to 0 - 255:</span> potValue = <span style=\"color: #cc6600;\">analogRead</span>(potPin) / 4; <span style=\"color: #7e7e7e;\">// use that to control the transistor:</span><span style=\"color: #cc6600;\">analogWrite</span>(9, potValue); }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7495071&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7495071\">Physcomp Lab8 – Transistor</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>Now to the HBridge Lab. The HBridge is used to control multiple actions. In this case we are reversing the direction of a DC motor. This is how the HBridge wiring looks like.</p>\n\n<p><img src=\"http://itp.nyu.edu/physcomp/images/labs/hbridge_labpinout.jpg\" alt=\"\" title=\"\" />This is my wiring.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/P1000237-w400.jpg \"P1000237-w400\"\" alt=\"P1000237-w400\" /></p>\n\n<p>Here is the code to get the HBridge to work. This code uses a pot to control the speed and a switch to reverse the direction. If you remove the analogWrite code, it will just work with the switch.</p>\n\n<p>const int switchPin = 2; // switch input <br />\n const int motor1Pin = 3; // H-bridge leg 1 (pin 2, 1A) <br />\n const int motor2Pin = 4; // H-bridge leg 2 (pin 7, 2A) <br />\n const int enablePin = 9; // H-bridge enable pin <br />\n const int ledPin = 13; // LED <br />\n int pot= 0; <br />\n int potValue = 0; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n // set the switch as an input: <br />\n pinMode(switchPin, INPUT);</p>\n\n<p>// set all the other pins you’re using as outputs: <br />\n pinMode(motor1Pin, OUTPUT); <br />\n pinMode(motor2Pin, OUTPUT); <br />\n pinMode(enablePin, OUTPUT); <br />\n pinMode(ledPin, OUTPUT);</p>\n\n<p>// set enablePin high so that motor can turn on: <br />\n //digitalWrite(enablePin, HIGH);</p>\n\n<p>// blink the LED 3 times. This should happen only once. <br />\n // if you see the LED blink three times, it means that the module <br />\n // reset itself,. probably because the motor caused a brownout <br />\n // or a short. <br />\n blink(ledPin, 3, 100); <br />\n }</p>\n\n<p>void loop() { <br />\n potValue = analogRead(pot); <br />\n Serial.println(potValue);</p>\n\n<p>// if the switch is high, motor will turn on one direction: <br />\n if (digitalRead(switchPin) == HIGH) {</p>\n\n<p>analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, LOW); // set leg 1 of the H-bridge low <br />\n digitalWrite(motor2Pin, HIGH); // set leg 2 of the H-bridge high <br />\n } <br />\n // if the switch is low, motor will turn in the other direction: <br />\n else { <br />\n analogWrite(enablePin, potValue/4); <br />\n digitalWrite(motor1Pin, HIGH); // set leg 1 of the H-bridge high <br />\n digitalWrite(motor2Pin, LOW); // set leg 2 of the H-bridge low <br />\n } <br />\n }</p>\n\n<p>/* <br />\n blinks an LED <br />\n */ <br />\n void blink(int whatPin, int howManyTimes, int milliSecs) { <br />\n int i = 0; <br />\n for ( i = 0; i &lt; howManyTimes; i++) { <br />\n digitalWrite(whatPin, HIGH); <br />\n delay(milliSecs/2); <br />\n digitalWrite(whatPin, LOW); <br />\n delay(milliSecs/2); <br />\n } <br />\n }</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=7494976&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/7494976\">Phsycomp Lab8 – HBridge with Pot</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257676898000,"created_by":1,"updated_at":1396136223000,"updated_by":1,"published_at":null,"published_by":1},{"id":258,"uuid":"f335c2cb-fe57-4308-8102-eae74931380a","title":"Pcomp Final Concept Drawing","slug":"pcomp-final-concept-drawing-3","markdown":"\nThe Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.\n\n![design](http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\")\n\n\n","html":"<p>The Helper is a assitive technology robot. The purpose of the robot is to be able to pick up and reach objects for individuals in wheel chairs. The project is composed of 2 parts one is the Helper robot that is able to reach and grab the objects. The other is the control unit. One of the main design concerns for the control unit is that a lot of people of handicap cannot pinch. For this reason the orb works with large objects that rotate like a pot to control the robot.</p>\n\n<p><img src=\"http://zevenwolf.com/itp/uploads/design-647x1023.jpg \"design\"\" alt=\"design\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1257891131000,"created_by":1,"updated_at":1396136274000,"updated_by":1,"published_at":1257891131000,"published_by":1},{"id":259,"uuid":"c8202af4-62df-4b9d-bc48-80381994ab18","title":"The Helper","slug":"thehelper-3","markdown":"\nThe helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.\n\n![design2](http://zevenwolf.com/blog/uploads/design2.jpg \"design2\")\n\nThe grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&hl=en_US&fs=1&\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\">![For the controller we used bowls because they would be easier to rotate with the palm of your hand.](http://zevenwolf.com/blog/uploads/bowl1.jpg \"bowl1\")</dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\">![The controller was designed to be anbidextrous.](http://zevenwolf.com/blog/uploads/internaldesign.jpg \"internaldesign\")The controller was designed to be anbidextrous.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\">![We installed buttons to allow for preset commands such as \"Bring it to me\" and \"Grab item\"](http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg \"internalswithbuttons\")We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”\n\n</div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\">![This is before the controller was wired in to the breadboard and arduino.](http://zevenwolf.com/blog/uploads/controllerfinal.jpg \"controllerfinal\")This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\">![The helper is controlled by two 360 potentiometer and two lighted big buttons.](http://zevenwolf.com/blog/uploads/internalwiring.jpg \"internalwiring\")The helper is controlled by two 360 potentiometer and two lighted big buttons.\n\n</div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\">![Russ started with a cardboard mock up of how the grabber will operate.](http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg \"cardboard-mock-up\")Russ started with a cardboard mock up of how the grabber will operate.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\">![Parts are in for the Grabber and Servo for the Arm.](http://zevenwolf.com/blog/uploads/grabberparts.jpg \"grabberparts\")Parts are in for the Grabber and Servo for the Arm.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\">![The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.](http://zevenwolf.com/blog/uploads/grabberside1.jpg \"grabberside1\")The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\">![This is the top design of 1st interation of the grabber.](http://zevenwolf.com/blog/uploads/grabbertop1.jpg \"grabbertop1\")We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\">![This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.](http://zevenwolf.com/blog/uploads/grabbernew1.jpg \"grabbernew1\")This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\">![This is the side view of the interim design for the grabber.](http://zevenwolf.com/blog/uploads/grabbernewside.jpg \"grabbernewside\")This is the side view of the interim design for the grabber.\n\n</div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&photo_secret=3d38388cb4&photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\">![In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.](http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg \"grabberfirst-install\")In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\">![One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.](http://zevenwolf.com/blog/uploads/redesigning-internals.jpg \"redesigning-internals\")One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\">![Quick test to see if the servo can lift the Grabber from it's new mounting point.](http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg \"grabberweightdistro\")Quick test to see if the servo can lift the Grabber from it’s new mounting point.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\">![Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.](http://zevenwolf.com/blog/uploads/smallservobefore.jpg \"smallservobefore\")Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\">![The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.](http://zevenwolf.com/blog/uploads/motorbracket.jpg \"motorbracket\")The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\">![This is the final version of the grabber.](http://zevenwolf.com/blog/uploads/grabberfinal.jpg \"grabberfinal\")This is the final version of the grabber. We are using a motor to drive the Grabber motion.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\">![We are using springs to lift the Grabber above the items it intends to grab.](http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg \"grabberwithsprings\")We are using springs to lift the Grabber above the items it intends to grab.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\">![Russ testing everything out.](http://zevenwolf.com/blog/uploads/russtest.jpg \"russtest\")Russ making sure everything works.\n\n</div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n</div>[Pcomp Final – The Helper](http://vimeo.com/8206417) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nCODE\n\n#include\n\nint analogPin0 = 0; // blue up and down  \n int analogPin1 = 1; // green left right pot  \n int analogPin2 = 2; // blue pot to control hbridge speed\n\n// pins for buttons  \n int redButton = 2; // red wire to pin 2  \n int greenButton = 5; // green wire to pin 5\n\n// pins for lights  \n int redLight = 10; // yellow wire to pin 10  \n int greenLight = 11; // white wire to pin 11\n\n// pins for motors  \n int servo1 = 6; // no color yet left right  \n int servo2 = 7; // no color yet up down  \n int motor1 = 9; // pulse pin for the hbridge\n\nint red = 0;  \n int green = 0;\n\nint analogSensorPin = 0; // select the input pin for the potentiometer  \n int analogSensorPin1 = 1; // select the input pin for the potentiometer\n\nint formerValue = 0;  \n int nowValue = 0;  \n float difference = 0;  \n float deg = 83;\n\nint formerValue1 = 0;  \n int nowValue1 = 0;  \n float difference1 = 0;  \n float deg1 = 0;\n\nServo updown;  \n Servo leftright;  \n void setup() {  \n Serial.begin(9600);  \n updown.attach(8);  \n leftright.attach(7);  \n pinMode(redButton, INPUT);  \n pinMode(greenButton,INPUT);  \n }\n\nvoid loop()  \n {  \n // read the value from the sensor:\n\n// this reads pot 1  \n nowValue = analogRead(analogSensorPin);  \n //Serial.print(“this is pot”);  \n //Serial.println(nowValue);  \n difference = nowValue – formerValue;\n\nif(abs(difference) > 500)  \n {  \n if(difference > 0)  \n {  \n difference = formerValue + (1023 – nowValue);  \n }  \n else  \n {  \n difference = (1023 – formerValue) + nowValue;  \n }  \n }\n\ndeg += difference / 30;\n\nif(deg < 0) { deg = 0; } else if(deg > 180)  \n {  \n deg = 180;  \n }\n\n// Serial.println(deg);\n\nformerValue = nowValue;\n\n// this reads pot 2  \n nowValue1 = analogRead(analogSensorPin1);  \n //Serial.print(“this is pot1″);  \n //Serial.println(nowValue1);  \n difference1 = nowValue1 – formerValue1;\n\nif(abs(difference1) > 500)  \n {  \n if(difference1 > 0)  \n {  \n difference1 = formerValue1 + (1023 – nowValue1);  \n }  \n else  \n {  \n difference1 = (1023 – formerValue1) + nowValue1;  \n }  \n }\n\ndeg1 += difference1 / 30;\n\nif(deg1 < 0) { deg1 = 0; } else if(deg1 > 180)  \n {  \n deg1 = 180;  \n }\n\n// Serial.println(deg1);\n\nformerValue = nowValue;\n\nupdown.write(deg);  \n Serial.println(deg);  \n leftright.write(deg1);\n\nred = digitalRead(redButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n green = digitalRead(greenButton);  \n //Serial.print(“this is the red button”);  \n //Serial.println(red);  \n }\n\n\n","html":"<p>The helper is an assistive technology for a person with muscular dystrophy who can not pinch. It is composed of an arm and a controller. The controller is composed of 2 round objects the control the arm sided to side and around itself. The controller has 2 buttons one to open and close the grabber and a preset button that will bring the arm to bring object to the user.</p>\n\n<p><img src=\"http://zevenwolf.com/blog/uploads/design2.jpg \"design2\"\" alt=\"design2\" /></p>\n\n<p>The grabber mechanism motion is very similar to a fun childhood game hungry hungry hippos.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"344\" width=\"425\"><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"344\" src=\"http://www.youtube.com/v/65fhH_Uzfp8&amp;hl=en_US&amp;fs=1&amp;\" type=\"application/x-shockwave-flash\" width=\"425\"></embed></object></div><div style=\"text-align: center;\"><dl class=\"wp-caption aligncenter\" id=\"attachment_155\" style=\"width: 410px;\"><dt class=\"wp-caption-dt\"><img src=\"http://zevenwolf.com/blog/uploads/bowl1.jpg\" alt=\"For the controller we used bowls because they would be easier to rotate with the palm of your hand.\" title=\"bowl1\" /></dt><dd class=\"wp-caption-dd\">For the controller we used bowls because they would be easier to rotate with the palm of your hand.</dd></dl></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_168\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internaldesign.jpg\" alt=\"The controller was designed to be anbidextrous.\" title=\"internaldesign\" />The controller was designed to be anbidextrous.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_169\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalswithbuttons.jpg\" alt=\"We installed buttons to allow for preset commands such as &quot;Bring it to me&quot; and &quot;Grab item&quot;\" title=\"internalswithbuttons\" />We installed buttons to allow for preset commands such as “Bring it to me” and “Grab item”</p>\n\n<p></div></div><div style=\"text-align: center;\"><div class=\"wp-caption aligncenter\" id=\"attachment_157\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/controllerfinal.jpg\" alt=\"This is before the controller was wired in to the breadboard and arduino.\" title=\"controllerfinal\" />This is before the controller was wired in to the breadboard and arduino. We used big buttons to make it easier for the user who lack dexterity to push them.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_170\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/internalwiring.jpg\" alt=\"The helper is controlled by two 360 potentiometer and two lighted big buttons.\" title=\"internalwiring\" />The helper is controlled by two 360 potentiometer and two lighted big buttons.</p>\n\n<p></div></div><div class=\"wp-caption aligncenter\" id=\"attachment_156\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/cardboard-mock-up.jpg\" alt=\"Russ started with a cardboard mock up of how the grabber will operate.\" title=\"cardboard-mock-up\" />Russ started with a cardboard mock up of how the grabber will operate.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_162\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberparts.jpg\" alt=\"Parts are in for the Grabber and Servo for the Arm.\" title=\"grabberparts\" />Parts are in for the Grabber and Servo for the Arm.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_164\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberside1.jpg\" alt=\"The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.\" title=\"grabberside1\" />The original design for the grabber the gears went on the outside, then mount for gear, then the axel. This did not let the axel spin 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_165\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbertop1.jpg\" alt=\"This is the top design of 1st interation of the grabber.\" title=\"grabbertop1\" />We kept the main box clear any obstructions down to the rivets in order to have smooth movement for the Grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_160\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernew1.jpg\" alt=\"This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.\" title=\"grabbernew1\" />This is the interim design that the grabber had. We mounted the axel on the inside which let the axel rotate 360 degrees.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_161\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabbernewside.jpg\" alt=\"This is the side view of the interim design for the grabber.\" title=\"grabbernewside\" />This is the side view of the interim design for the grabber.</p>\n\n<p></div><div style=\"text-align: center;\"><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" flashvars=\"intl_lang=en-us&amp;photo_secret=3d38388cb4&amp;photo_id=4171962643\" height=\"300\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>We initially tested the arm to see how the servo would react to the weight of the servo.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"This was the first install of the grabber. We made the mistake of mounting it on the rear of the grabber. This put all of the weight at the end of the grabber making it too heavy for the servo.\" title=\"grabberfirst-install\" />The required torque power for mounting to the rear of the Grabber was to great for our servo. We cut down the lifting force by mounting the arm closer to the center of the Grabber box.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_159\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfirst-install.jpg\" alt=\"In order for us to mount the arm in the center, we had to redesign the Grabber box  to include a roof.\" title=\"grabberfirst-install\" />In order for us to mount the arm in the center, we had to redesign the Grabber box to include a roof.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_172\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/redesigning-internals.jpg\" alt=\"One stumbling block that we found was the Grabber was binding if drove it from only one side.   We had to run a drive shaft to the other side so that they wheels rotated equally.\" title=\"redesigning-internals\" />One stumbling block that we found was the Grabber was binding if drove it from only one side. We had to run a drive shaft to the other side so that they wheels rotated equally.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_166\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberweightdistro.jpg\" alt=\"Quick test to see if the servo can lift the Grabber from it's new mounting point.\" title=\"grabberweightdistro\" />Quick test to see if the servo can lift the Grabber from it’s new mounting point.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_174\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/smallservobefore.jpg\" alt=\"Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.\" title=\"smallservobefore\" />Originally we mounted the arm directly to servo. This put to much stress on center screw on the servo and flexed to much.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_171\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/motorbracket.jpg\" alt=\"The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.\" title=\"motorbracket\" />The new servo turret takes the stress off the servo but allows the servo to rotate the grabber.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_158\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberfinal.jpg\" alt=\"This is the final version of the grabber.\" title=\"grabberfinal\" />This is the final version of the grabber. We are using a motor to drive the Grabber motion.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_167\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/grabberwithsprings.jpg\" alt=\"We are using springs to lift the Grabber above the items it intends to grab.\" title=\"grabberwithsprings\" />We are using springs to lift the Grabber above the items it intends to grab.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_173\" style=\"width: 410px\"><img src=\"http://zevenwolf.com/blog/uploads/russtest.jpg\" alt=\"Russ testing everything out.\" title=\"russtest\" />Russ making sure everything works.</p>\n\n<p></div><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8206417&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p></div><a href=\"http://vimeo.com/8206417\">Pcomp Final – The Helper</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>CODE</p>\n\n<h1 id=\"include\">include</h1>\n\n<p>int analogPin0 = 0; // blue up and down <br />\n int analogPin1 = 1; // green left right pot <br />\n int analogPin2 = 2; // blue pot to control hbridge speed</p>\n\n<p>// pins for buttons <br />\n int redButton = 2; // red wire to pin 2 <br />\n int greenButton = 5; // green wire to pin 5</p>\n\n<p>// pins for lights <br />\n int redLight = 10; // yellow wire to pin 10 <br />\n int greenLight = 11; // white wire to pin 11</p>\n\n<p>// pins for motors <br />\n int servo1 = 6; // no color yet left right <br />\n int servo2 = 7; // no color yet up down <br />\n int motor1 = 9; // pulse pin for the hbridge</p>\n\n<p>int red = 0; <br />\n int green = 0;</p>\n\n<p>int analogSensorPin = 0; // select the input pin for the potentiometer <br />\n int analogSensorPin1 = 1; // select the input pin for the potentiometer</p>\n\n<p>int formerValue = 0; <br />\n int nowValue = 0; <br />\n float difference = 0; <br />\n float deg = 83;</p>\n\n<p>int formerValue1 = 0; <br />\n int nowValue1 = 0; <br />\n float difference1 = 0; <br />\n float deg1 = 0;</p>\n\n<p>Servo updown; <br />\n Servo leftright; <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n updown.attach(8); <br />\n leftright.attach(7); <br />\n pinMode(redButton, INPUT); <br />\n pinMode(greenButton,INPUT); <br />\n }</p>\n\n<p>void loop() <br />\n { <br />\n // read the value from the sensor:</p>\n\n<p>// this reads pot 1 <br />\n nowValue = analogRead(analogSensorPin); <br />\n //Serial.print(“this is pot”); <br />\n //Serial.println(nowValue); <br />\n difference = nowValue – formerValue;</p>\n\n<p>if(abs(difference) > 500) <br />\n { <br />\n if(difference > 0) <br />\n { <br />\n difference = formerValue + (1023 – nowValue); <br />\n } <br />\n else <br />\n { <br />\n difference = (1023 – formerValue) + nowValue; <br />\n } <br />\n }</p>\n\n<p>deg += difference / 30;</p>\n\n<p>if(deg &lt; 0) { deg = 0; } else if(deg > 180) <br />\n { <br />\n deg = 180; <br />\n }</p>\n\n<p>// Serial.println(deg);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>// this reads pot 2 <br />\n nowValue1 = analogRead(analogSensorPin1); <br />\n //Serial.print(“this is pot1″); <br />\n //Serial.println(nowValue1); <br />\n difference1 = nowValue1 – formerValue1;</p>\n\n<p>if(abs(difference1) > 500) <br />\n { <br />\n if(difference1 > 0) <br />\n { <br />\n difference1 = formerValue1 + (1023 – nowValue1); <br />\n } <br />\n else <br />\n { <br />\n difference1 = (1023 – formerValue1) + nowValue1; <br />\n } <br />\n }</p>\n\n<p>deg1 += difference1 / 30;</p>\n\n<p>if(deg1 &lt; 0) { deg1 = 0; } else if(deg1 > 180) <br />\n { <br />\n deg1 = 180; <br />\n }</p>\n\n<p>// Serial.println(deg1);</p>\n\n<p>formerValue = nowValue;</p>\n\n<p>updown.write(deg); <br />\n Serial.println(deg); <br />\n leftright.write(deg1);</p>\n\n<p>red = digitalRead(redButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n green = digitalRead(greenButton); <br />\n //Serial.print(“this is the red button”); <br />\n //Serial.println(red); <br />\n }</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258494603000,"created_by":1,"updated_at":1396136290000,"updated_by":1,"published_at":1258494603000,"published_by":1},{"id":260,"uuid":"a5e97a6f-cb4d-4434-8d06-e532d1310cc2","title":"Solar Design Presentation","slug":"solar-design-presentation-3","markdown":"\n[Solar Design Presentation ](https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&hl=en)\n\n\n","html":"<p><a href=\"https://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV80MmNqZmYyOGc1&amp;hl=en\">Solar Design Presentation </a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1258745619000,"created_by":1,"updated_at":1396136335000,"updated_by":1,"published_at":1258745619000,"published_by":1},{"id":261,"uuid":"c1e524ef-cb72-4ea2-b16c-1f6049edb3a8","title":"ICM Final","slug":"icm-final-3","markdown":"\nI wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[ICM Final](http://vimeo.com/8209038) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>Here is the code for this project\n\n[final](http://zevenwolf.com/blog/icm/final.zip)\n\n\n","html":"<p>I wanted to use images and particles to morph on image into the other. I did this by importing images and then creating a particle system which moved one image to the next.</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=8209038&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/8209038\">ICM Final</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div>Here is the code for this project</p>\n\n<p><a href=\"http://zevenwolf.com/blog/icm/final.zip\">final</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1260917515000,"created_by":1,"updated_at":1396136345000,"updated_by":1,"published_at":1260917515000,"published_by":1},{"id":262,"uuid":"b15d8179-bf7e-465b-8e22-f903b0fb3164","title":"obra nueva","slug":"obra-nueva-3","markdown":"\nslsl\n\n\n","html":"<p>slsl</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1262792503000,"created_by":1,"updated_at":1390233393000,"updated_by":1,"published_at":null,"published_by":1},{"id":263,"uuid":"e79cac9e-0b71-40db-9b2e-40eafaacae55","title":"Hospitable Room - Assignment 1","slug":"hospitable-room-assignment-1-3","markdown":"\nSo tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,\n\n[![](http://zevenwolf.com/blog/uploads/assignment1.jpg \"assignment1\")](http://zevenwolf.com/blog/uploads/assignment1.jpg)\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key == ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>\n","html":"<p>So tracking the red color of the iphone red light from the flashlight app, this code moves the cursor(the cow) around,</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/assignment1.jpg\" alt=\"\" title=\"assignment1\" /></a></p>\n\n<div id=\"_mcePaste\"><div id=\"_mcePaste\">import processing.video.Capture;</div><div id=\"_mcePaste\">Capture video;// regular processing libary</div><div id=\"_mcePaste\">PFont f;</div><div id=\"_mcePaste\">int threshold = 150; //255 is white, 0 is black</div><div id=\"_mcePaste\">int aveX, aveY; //this is what we are trying to find</div><div id=\"_mcePaste\">int objectR =255;</div><div id=\"_mcePaste\">int objectG = 0;</div><div id=\"_mcePaste\">int objectB = 0;</div><div id=\"_mcePaste\">boolean debug = true;</div><div id=\"_mcePaste\">int lastTime, ellapsedTime; //for checking performance</div><div id=\"_mcePaste\">PImage cow;</div><div id=\"_mcePaste\">PImage grass;</div><div id=\"_mcePaste\">String message;</div><div id=\"_mcePaste\">void setup() {</div><div id=\"_mcePaste\">size(640, 480);</div><div id=\"_mcePaste\">println(Capture.list());</div><div id=\"_mcePaste\">video = new Capture(this,width,height);</div><div id=\"_mcePaste\">//video.settings();</div><div id=\"_mcePaste\">cow = loadImage(“cowsmall.png”);</div><div id=\"_mcePaste\">grass = loadImage(“grass.png”);</div><div id=\"_mcePaste\">f = createFont(“Arial”, 32);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void draw(){</div><div id=\"_mcePaste\">if (video.available()){</div><div id=\"_mcePaste\">ellapsedTime = millis() – lastTime; Â //find time since last time, only print it out if you press “t”</div><div id=\"_mcePaste\">lastTime = millis(); Â //reset timer for checking time next fram</div><div id=\"_mcePaste\">video.read();</div><div id=\"_mcePaste\">int totalFoundPixels= 0; Â //we are going to find the average location of change pixes so</div><div id=\"_mcePaste\">int sumX = 0; Â //we will need the sum of all the x find, the sum of all the y find and the total finds</div><div id=\"_mcePaste\">int sumY = 0;</div><div id=\"_mcePaste\">//enter into the classic nested for statements of computer vision</div><div id=\"_mcePaste\">for (int row = 0; row < video.height; row++) {</div><div id=\"_mcePaste\">for (int col = 0; col < video.width; col++) {</div><div id=\"_mcePaste\">//the pixels file into the room long line you use this simple formula to find what row and column the sit in</div><div id=\"_mcePaste\">int offset = row * width + col;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float r = red(thisColor);</div><div id=\"_mcePaste\">float g = green(thisColor);</div><div id=\"_mcePaste\">float b = blue(thisColor);</div><div id=\"_mcePaste\">//in a color “space” you find the distance between color the same whay you would in a cartesian space, phythag or dist in processing</div><div id=\"_mcePaste\">float diff = dist(r, g, b, objectR, objectG, objectB);</div><div id=\"_mcePaste\">if (diff < threshold) { Â //if it is close enough in size, add it to the average</div><div id=\"_mcePaste\">sumX = sumX + col;</div><div id=\"_mcePaste\">sumY= sumY + row;</div><div id=\"_mcePaste\">totalFoundPixels++;</div><div id=\"_mcePaste\">if (debug) video.pixels[offset] = 0xff000000;//debugging</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// look here</div><div id=\"_mcePaste\">if (debug){</div><div id=\"_mcePaste\">image(video,0,0);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">image(grass, 0,0);</div><div id=\"_mcePaste\">if (totalFoundPixels > 0){</div><div id=\"_mcePaste\">aveX = sumX/totalFoundPixels;</div><div id=\"_mcePaste\">aveY = sumY/totalFoundPixels;</div><div id=\"_mcePaste\">// noStroke();</div><div id=\"_mcePaste\">// fill(255 , 200,200);</div><div id=\"_mcePaste\">// ellipse(aveX-10,(aveY-10),20,20);</div><div id=\"_mcePaste\">image(cow,aveX-10,aveY-10);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">// This is how to get a hot area</div><div id=\"_mcePaste\">if(aveX > 450 && aveX < 650 && aveY >300 && aveY < 470){</div><div id=\"_mcePaste\">// Â noStroke();</div><div id=\"_mcePaste\">// Â fill(255,0,0);</div><div id=\"_mcePaste\">// Â ellipse(100,100,100,100);</div><div id=\"_mcePaste\">message = “The cow jumped over the moon”;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else{</div><div id=\"_mcePaste\">message = ” “;</div><div id=\"_mcePaste\">textFont(f);</div><div id=\"_mcePaste\">text(message, 75,75);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void mousePressed(){</div><div id=\"_mcePaste\">//if they click, use that picture for the new thing to follow</div><div id=\"_mcePaste\">int offset = mouseY * width + mouseX;</div><div id=\"_mcePaste\">//pull out the same pixel from the current frame</div><div id=\"_mcePaste\">int thisColor = video.pixels[offset];</div><div id=\"_mcePaste\">//pull out the individual colors for both pixels</div><div id=\"_mcePaste\">float objectR = red(thisColor);</div><div id=\"_mcePaste\">float objectG = green(thisColor);</div><div id=\"_mcePaste\">float objectB = blue(thisColor);</div><div id=\"_mcePaste\">println(“Chasing new color Â ” + objectR + ” ” + objectG + ” ” + objectB);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">void keyPressed() {</div><div id=\"_mcePaste\">//for adjusting things on the fly</div><div id=\"_mcePaste\">if (key <mark> ‘s’) {</div><div id=\"_mcePaste\">video.settings();</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘-’) {</div><div id=\"_mcePaste\">threshold–;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key <mark> ‘=’) {</div><div id=\"_mcePaste\">threshold++;</div><div id=\"_mcePaste\">println(“Threshold ” + threshold);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key </mark> ‘d’) {</div><div id=\"_mcePaste\">background(255);</div><div id=\"_mcePaste\">debug = !debug;</div><div id=\"_mcePaste\">println(“Debug ” + debug);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">else if (key == ‘t’) {</div><div id=\"_mcePaste\">println(“Time Between Frames ” + ellapsedTime);</div><div id=\"_mcePaste\">}</div><div id=\"_mcePaste\">}</div></div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1264511262000,"created_by":1,"updated_at":1396136368000,"updated_by":1,"published_at":1264511262000,"published_by":1},{"id":264,"uuid":"b0c486b2-1661-4ba5-a5cb-978131de74ce","title":"Hospitable Room: Initial Pitch","slug":"hospitable-room-initial-pitch-3","markdown":"\nKatherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.\n\n[http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/](http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/ \"Initial Idea\")\n\n\n","html":"<p>Katherine and I created this processing sketch to illustrate how the user would navigate through the world. In the next version the mouse will be replaced by a wheel chair. The idea is that the user will use the wheel chair to navigate around the world.</p>\n\n<p><a href=\"http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/\" title=\"Initial Idea\">http://www.zevenrodriguez.com/blog/hospitableroom/ZoomInViewer_Feb02/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265116569000,"created_by":1,"updated_at":1396136403000,"updated_by":1,"published_at":null,"published_by":1},{"id":265,"uuid":"d7d89768-2dd3-45ee-a76f-73ecdf78a202","title":"Wildlife/People Observation","slug":"wildlifepeople-observation-3","markdown":"\nWe went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected\n\n[Monkey observation](http://zevenwolf.com/blog/uploads/Monkey-observation.xls)\n\n\n","html":"<p>We went to Coles gym to observe people playing basketball. Tracking targets that move fast was difficult. The most important part was generating the short hand codes to be able to properly track the subjects. During our exercise, our code evolved to better track the game. An example of that was originally we only had a contact event. We added a grab event because we noticed that their were more times that contact was people trying to go for the ball. Here is all the info I collected</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/Monkey-observation.xls\">Monkey observation</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265208015000,"created_by":1,"updated_at":1396136421000,"updated_by":1,"published_at":null,"published_by":1},{"id":266,"uuid":"728896e4-7bfb-4899-ac87-954c5516afea","title":"Pan-Ball Flute","slug":"pan-ball-flute-3","markdown":"\nThe Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers\n\n[![](http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg \"piezogenerator\")](http://zevenwolf.com/blog/uploads/piezogenerator.jpg)\n\n\n","html":"<p>The Pan-Ball Flute is a hand crank device the pulls back a pinball style lever. Once the lever is let go a magnet advances passing through the coils and hitting a piezo. The crank has crowbar style forks that pull back the lever. The intention is that with combination of generators my hope is to power some piezo buzzers</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/piezogenerator.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/piezogenerator-300x225.jpg\" alt=\"\" title=\"piezogenerator\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265243492000,"created_by":1,"updated_at":1396136451000,"updated_by":1,"published_at":1265243492000,"published_by":1},{"id":267,"uuid":"889ee93f-aa4e-45a3-8c94-9f0a1dd62db8","title":"Reading and Writing Text Homework 1","slug":"reading-and-writing-text-homework-1-3","markdown":"\nFor this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.\n\nI started with\n\n*cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt*\n\nThis is how I combined multiple files.\n\nI ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5\n\n**This is the code for hwfeb05.py this code divides the poem in half**  \n [cc lang=\"python\"]  \n import sys\n\ncount = 0\n\nfor line in sys.stdin:\n\nline = line.strip()\n\nif count % 2 == 0:\n\noutput = line\n\nelse:\n\noutput = “”\n\nprint output\n\ncount += 1  \n [/cc]  \n Then I ran python Â hwfeb05replace.py< charles5.txt>charlesreplace.txt\n\n**Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.**  \n [cc lang=\"python\"]]  \n import sys\n\nfor line in sys.stdin:  \n line = line.strip()  \n line = line.replace(‘death’, ‘pandas’)  \n line = line.replace(‘corpses’, ‘puppies’)  \n line = line.replace(‘corpse’, ‘puppy’)  \n line = line.replace(‘drink’, ‘hug’)  \n line = line.replace(‘dark’, ‘puppy-eyed’)  \n line = line.replace(‘drinks’, ‘hugs’)  \n line = line.replace(‘ladies’, ‘unicorns’)  \n line = line.replace(‘lady’, ‘unicorn’)  \n line = line.replace(‘crime’,'party’)  \n line = line.replace(‘enemy’,'buddy’)  \n line = line.replace(‘enemies’,'buddies’)  \n line = line.replace(‘bar’,'playground’)  \n line = line.replace(‘alone’,'holding hands’)  \n line = line.replace(‘body’,'kitten’)  \n line = line.replace(‘bodies’,'kittens’)  \n print line\n\n[/cc]\n\nFinally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt\n\n[cc lang=\"python\"]  \n import sys  \n for line in sys.stdin:  \n line = line.strip()  \n offset = line.find(“pandas”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppies”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy”)  \n if offset != -1:  \n print line  \n offset = line.find(“hug”)  \n if offset != -1:  \n print line  \n offset = line.find(“puppy-eyed”)  \n if offset != -1:  \n print line  \n offset = line.find(“hugs”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorns”)  \n if offset != -1:  \n print line  \n offset = line.find(“unicorn”)  \n if offset != -1:  \n print line  \n offset = line.find(“party”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddy”)  \n if offset != -1:  \n print line  \n offset = line.find(“buddies”)  \n if offset != -1:  \n print line  \n offset = line.find(“playground”)  \n if offset != -1:  \n print line  \n offset = line.find(“holding hands”)  \n if offset != -1:  \n print line  \n offset = line.find(“kitten”)  \n if offset != -1:  \n print line  \n offset = line.find(“kittens”)  \n if offset != -1:  \n print line\n\n[/cc]  \n That gave me this output:\n\n<div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines\n\n\n","html":"<p>For this homework I wanted to mashup 3 Charles Bukowski programs and make them adorable. I started with 3 poems: Death wants more Death, The Riot, and Two Kinds of Hell.</p>\n\n<p>I started with</p>\n\n<p><em>cat deathwantsmoredeath.txt theriot.txt twokindsofhell.txt</em></p>\n\n<p>This is how I combined multiple files.</p>\n\n<p>I ran python hwfeb05.py <charles#.txt>charles#.txt with the pound being increasing numbers from 0-5</p>\n\n<p><strong>This is the code for hwfeb05.py this code divides the poem in half</strong> <br />\n [cc lang=\"python\"] <br />\n import sys</p>\n\n<p>count = 0</p>\n\n<p>for line in sys.stdin:</p>\n\n<p>line = line.strip()</p>\n\n<p>if count % 2 == 0:</p>\n\n<p>output = line</p>\n\n<p>else:</p>\n\n<p>output = “”</p>\n\n<p>print output</p>\n\n<p>count += 1 <br />\n [/cc] <br />\n Then I ran python Â hwfeb05replace.py&lt; charles5.txt>charlesreplace.txt</p>\n\n<p><strong>Here is Â the code for hwfeb05replace.py. This replace code is what looks for the words I want to make adorable.</strong> <br />\n [cc lang=\"python\"]] <br />\n import sys</p>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line = line.replace(‘death’, ‘pandas’) <br />\n line = line.replace(‘corpses’, ‘puppies’) <br />\n line = line.replace(‘corpse’, ‘puppy’) <br />\n line = line.replace(‘drink’, ‘hug’) <br />\n line = line.replace(‘dark’, ‘puppy-eyed’) <br />\n line = line.replace(‘drinks’, ‘hugs’) <br />\n line = line.replace(‘ladies’, ‘unicorns’) <br />\n line = line.replace(‘lady’, ‘unicorn’) <br />\n line = line.replace(‘crime’,'party’) <br />\n line = line.replace(‘enemy’,'buddy’) <br />\n line = line.replace(‘enemies’,'buddies’) <br />\n line = line.replace(‘bar’,'playground’) <br />\n line = line.replace(‘alone’,'holding hands’) <br />\n line = line.replace(‘body’,'kitten’) <br />\n line = line.replace(‘bodies’,'kittens’) <br />\n print line</p>\n\n<p>[/cc]</p>\n\n<p>Finally I ran python hwfeb05finder.py<charlesreplace.txt>charlesfinder.txt</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n for line in sys.stdin: <br />\n line = line.strip() <br />\n offset = line.find(“pandas”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hug”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“puppy-eyed”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“hugs”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorns”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“unicorn”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“party”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddy”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“buddies”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“playground”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“holding hands”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kitten”) <br />\n if offset != -1: <br />\n print line <br />\n offset = line.find(“kittens”) <br />\n if offset != -1: <br />\n print line</p>\n\n<p>[/cc] <br />\n That gave me this output:</p>\n\n<p><div id=\"_mcePaste\">pandas wants more pandas, and its webs are full:</div><div id=\"_mcePaste\">I would brush the puppies of flies</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">their sticky, ugly, vibrant kittens</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">towards some puppy-eyed corner</div><div id=\"_mcePaste\">I sat in the same playground for 7 years, from 5 a.m.</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">I had no money but the hugs kept</div><div id=\"_mcePaste\">to them I wasn’t the playground clown</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">and I began to hug holding hands and I found the company</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">heart, knocks began upon my door: unicorns</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">and the unicorns arrived one at a time and when it ended with</div><div id=\"_mcePaste\">but I remembered the 7 years in the playground, I hardly ever bedded</div><div id=\"_mcePaste\">his simple strength and salvation, they will send the unicorn</div><div id=\"_mcePaste\">and then you remember the playground</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">somekitten in the playground saying: “hey, sir, forget it, he’s a mental</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">gods arranged to get all those unicorns knocking and you went for</div><div id=\"_mcePaste\">the puff of kitten swelling</div><div id=\"_mcePaste\">looking for the buddy</div><div id=\"_mcePaste\">saw or sensed my party</div>The only thing that I need to figure out now is how not to print out duplicate lines</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265385956000,"created_by":1,"updated_at":1396136480000,"updated_by":1,"published_at":1265385956000,"published_by":1},{"id":268,"uuid":"8cce5b28-c0a5-4812-a0c8-82f0e0cf83b6","title":"Wildlife Tracking: RFID research","slug":"wildlife-tracking-rfid-research-3","markdown":"\nSo I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.\n\n**Active vs Passive**\n\n****Active  \n Power: Battery powered, average 7000 hrs **depending onÂ receiver*  \n Signal Strength needed: Low Signal  \n Range: up to 100m  \n Data Storage: 128kb read/write search and access to data\n\nPassive  \n Power: comes from RF reader  \n Signal Strength needed: High signal\n\nRange: 3-5m or less\n\nData Storage: 128 bytes of read/write\n\nDepending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in\n\nThis link is a diy aduino based RFID reader\n\n[http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/](http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/)\n\nThis is a couple of data sheets from different companies\n\n[http://www.ananiahelectronics.com/RF40315T-s.htm](http://www.ananiahelectronics.com/RF40315T-s.htm)\n\n[http://www.activewaveinc.com/products_datasheets.php](http://www.activewaveinc.com/products_datasheets.php)\n\n[http://cliste.sailwhatcom.com/catalog/1](http://cliste.sailwhatcom.com/catalog/1)\n\nThis link has standard pricing options\n\n[http://www.rfidexchange.com/purchasing.aspx](http://www.rfidexchange.com/purchasing.aspx)\n\nTracking Cows\n\n[http://www.zigbeef.com/index.html](http://www.zigbeef.com/index.html)\n\n\n","html":"<p>So I was interested in RFID for tracking monkeys. RFID comes in two flavors: passive and active. For tracking monkeys the preferable would be an active RFID chip.</p>\n\n<p><strong>Active vs Passive</strong></p>\n\n<p><em>*</em><em>Active <br />\n Power: Battery powered, average 7000 hrs *</em>depending onÂ receiver* <br />\n Signal Strength needed: Low Signal <br />\n Range: up to 100m <br />\n Data Storage: 128kb read/write search and access to data</p>\n\n<p>Passive <br />\n Power: comes from RF reader <br />\n Signal Strength needed: High signal</p>\n\n<p>Range: 3-5m or less</p>\n\n<p>Data Storage: 128 bytes of read/write</p>\n\n<p>Depending on models active RFID could have high operating temperature, between -35c and 50c. This is important for the highÂ temperaturesÂ in the amazon. Another advantage is the size andÂ weight. Ranging around 14 grams and 2.4 in x 1.2 in x 0.4 in to big ones that are around 2in x 3in x 0.5 in</p>\n\n<p>This link is a diy aduino based RFID reader</p>\n\n<p><a href=\"http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/\">http://pimm.wordpress.com/2008/03/09/first-rfid-experience-arduino-controlled-parallax-reader/</a></p>\n\n<p>This is a couple of data sheets from different companies</p>\n\n<p><a href=\"http://www.ananiahelectronics.com/RF40315T-s.htm\">http://www.ananiahelectronics.com/RF40315T-s.htm</a></p>\n\n<p><a href=\"http://www.activewaveinc.com/products_datasheets.php\">http://www.activewaveinc.com/products_datasheets.php</a></p>\n\n<p><a href=\"http://cliste.sailwhatcom.com/catalog/1\">http://cliste.sailwhatcom.com/catalog/1</a></p>\n\n<p>This link has standard pricing options</p>\n\n<p><a href=\"http://www.rfidexchange.com/purchasing.aspx\">http://www.rfidexchange.com/purchasing.aspx</a></p>\n\n<p>Tracking Cows</p>\n\n<p><a href=\"http://www.zigbeef.com/index.html\">http://www.zigbeef.com/index.html</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1265804026000,"created_by":1,"updated_at":1396136511000,"updated_by":1,"published_at":1265804026000,"published_by":1},{"id":269,"uuid":"0f5aca70-003b-440c-83b4-7cf271e4dbac","title":"Solar Presentation","slug":"solar-presentation-3","markdown":"\n[Solar Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV81NmZwejczdGR6&amp;hl=en\">Solar Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266487280000,"created_by":1,"updated_at":1396136650000,"updated_by":1,"published_at":1266487280000,"published_by":1},{"id":270,"uuid":"a00c0fd5-3836-4c68-86a5-14a746d4b3c8","title":"Python HW Feb 19 Reddit Headlines","slug":"python-hw-feb-19-reddit-headlines-3","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1266596891000,"created_by":1,"updated_at":1396136770000,"updated_by":1,"published_at":null,"published_by":1},{"id":271,"uuid":"e1eabdfc-eaf1-4c76-8207-18f592325889","title":"ASCII Art Presentation","slug":"ascii-art-presentation-3","markdown":"\n[ASCII Art Presentation](http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&hl=en)\n\n\n","html":"<p><a href=\"http://docs.google.com/present/edit?id=0Acobd4UZPorWZHd6a210NV83MGd4dDNqNGc2&amp;hl=en\">ASCII Art Presentation</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267134108000,"created_by":1,"updated_at":1396136785000,"updated_by":1,"published_at":1267134108000,"published_by":1},{"id":272,"uuid":"89cab084-aede-4583-ab0e-bb57c78d8361","title":"Pan Ball Flute Update","slug":"pan-ball-flute-update-3","markdown":"\nFor the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet.  \n[![](http://zevenwolf.com/blog/uploads/panball1-168x300.jpg \"panball1\")](http://zevenwolf.com/blog/uploads/panball1.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>[Shaker](http://vimeo.com/9761290) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).</div>[![](http://zevenwolf.com/blog/uploads/panball2-168x300.jpg \"panball2\")](http://zevenwolf.com/blog/uploads/panball2.jpg)  \n[![](http://zevenwolf.com/blog/uploads/panball3-189x300.jpg \"panball3\")](http://zevenwolf.com/blog/uploads/panball3.jpg)\n\nThese are just some basic numbers on the solo shaker  \n The Open Circuit Voltage = 10v  \n The Test Capcitor = 1 Farad  \n Start and End Voltage = 100mV-3V  \n Change in Joules = 4.5J  \n*E = 1/2 C * V 2  \n*  \n Time to Charge = 20 sec  \n Observed Power (watts) = .225 watts  \n*Energy / Time  \n*\n\n\n","html":"<p>For the first iteration of the pan ball flute, I decided to create a mock up of how this would work. The pan ball flute is set up like a piston in a car. This first iteration is using one magnet piston with a piezo buzzer, a led and a rectifier. The magnet induction piston uses 2 opposing 15 pound pull force magnets and a small magnet opposing the center magnet. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball1-168x300.jpg\" alt=\"\" title=\"panball1\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=9761290&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object><a href=\"http://vimeo.com/9761290\">Shaker</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</div><a href=\"http://zevenwolf.com/blog/uploads/panball2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball2-168x300.jpg\" alt=\"\" title=\"panball2\" /></a> <br />\n<a href=\"http://zevenwolf.com/blog/uploads/panball3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/panball3-189x300.jpg\" alt=\"\" title=\"panball3\" /></a></p>\n\n<p>These are just some basic numbers on the solo shaker <br />\n The Open Circuit Voltage = 10v <br />\n The Test Capcitor = 1 Farad <br />\n Start and End Voltage = 100mV-3V <br />\n Change in Joules = 4.5J <br />\n*E = 1/2 C * V 2 <br />\n* <br />\n Time to Charge = 20 sec <br />\n Observed Power (watts) = .225 watts <br />\n*Energy / Time <br />\n*</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1267195457000,"created_by":1,"updated_at":1396136802000,"updated_by":1,"published_at":1267195457000,"published_by":1},{"id":273,"uuid":"da0a7a87-39ee-4d7d-985d-5ff7bc9449a9","title":"RWET Midterm: SOS Poem","slug":"rwet-midterm-sos-poem-3","markdown":"\nThe SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.\n\nThe source text is a list of congress people and the Obama Health Care bill\n\nLee and Jos gradually clarifying gradually Lee and Jos  \n Ken and Ron currently conducting currently Ken and Ron  \n Dan and Max seriously increased seriously Dan and Max  \n Ike and Joe primarily empowering primarily Ike and Joe\n\nFor and Fee gradually clarifying gradually For and Fee  \n All and One currently conducting currently All and One  \n But and Tax seriously increased seriously But and Tax  \n Act and Key primarily empowering primarily Act and Key\n\n[cc lang=\"python\"]  \n import sys  \n import re  \n congress = set()  \n congressName = list()  \n bill = set()  \n billWords = list()  \n verbs = set()  \n verbsList = list()  \n adverbs = set()  \n adverbsList = list()  \n state = “New”  \n name = ” ”  \n words = ” ”  \n verb = ” ”  \n adverb = ” ”  \n congressCounter = 0  \n verbCounter = 0  \n adverbCounter = 0  \n displayCounter = 0  \n fileObj = open(‘obamacare.txt’)\n\nlines = fileObj.readlines()\n\nfor line in sys.stdin:  \n line.strip()  \n for matching_string in re.findall(r’s[A-Z][a-z][a-z]b’, line):  \n name = matching_string  \n congress.add(name)\n\ncongress.remove(” New”)\n\ncongressCounter = len(congress)  \n for num in range(0,congressCounter):  \n name = congress.pop()  \n name=name[1:]  \n congressName.append(name)\n\nfor words in lines:  \n words.strip()  \n for matching_verb in re.findall(r”bw{7}ed|bw{7}ing”,words):  \n verb = matching_verb  \n verb = verb.lower()  \n verbs.add(verb)\n\nverbCounter = len(verbs)  \n for num in range(0,verbCounter):  \n verb = verbs.pop()  \n verbsList.append(verb)\n\nfor words in lines:  \n words.strip()  \n for matching_adverb in re.findall(r”bw{7}ly”,words):  \n adverb = matching_adverb  \n adverb = adverb.lower()  \n adverbs.add(adverb)\n\nadverbCounter = len(adverbs)  \n for num in range(0,adverbCounter):  \n adverb = adverbs.pop()  \n adverbsList.append(adverb)\n\nif congressCounter < verbCounter and congressCounter < adverbCounter:  \n displayCounter = congressCounter  \n elif verbCounter < congressCounter and verbCounter < adverbCounter:  \n displayCounter = verbCounter  \n elif adverbCounter < verbCounter and adverbCounter < congressCounter:  \n displayCounter = adverbCounter\n\nfor num in range(0,displayCounter,2):  \n #print num  \n if num < displayCounter:  \n nameone = congressName[num]  \n nametwo = congressName[num +1]  \n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)\n\n[/cc]\n\n[Congress Text](http://www.zevenwolf.com/blog/rwet/congress.txt)  \n[Obama Care Text](http://www.zevenwolf.com/blog/rwet/obamacare.txt)\n\n\n","html":"<p>The SOS Poem structure is based on the Morse code sequence . . . _ _ _ Â . . . Another goal for the poem is to follow theÂ rhythm of SOS by using the following word structure: Name and Name Adverb Verb Adverb Name and Name. Also each name is composed of three letter names and the adverbs and verbs are composed of nine letter words. You can also see that it has a palindrome feel to it. Because of how the code is set up it words best when you input a list of names and another source text.</p>\n\n<p>The source text is a list of congress people and the Obama Health Care bill</p>\n\n<p>Lee and Jos gradually clarifying gradually Lee and Jos <br />\n Ken and Ron currently conducting currently Ken and Ron <br />\n Dan and Max seriously increased seriously Dan and Max <br />\n Ike and Joe primarily empowering primarily Ike and Joe</p>\n\n<p>For and Fee gradually clarifying gradually For and Fee <br />\n All and One currently conducting currently All and One <br />\n But and Tax seriously increased seriously But and Tax <br />\n Act and Key primarily empowering primarily Act and Key</p>\n\n<p>[cc lang=\"python\"] <br />\n import sys <br />\n import re <br />\n congress = set() <br />\n congressName = list() <br />\n bill = set() <br />\n billWords = list() <br />\n verbs = set() <br />\n verbsList = list() <br />\n adverbs = set() <br />\n adverbsList = list() <br />\n state = “New” <br />\n name = ” ” <br />\n words = ” ” <br />\n verb = ” ” <br />\n adverb = ” ” <br />\n congressCounter = 0 <br />\n verbCounter = 0 <br />\n adverbCounter = 0 <br />\n displayCounter = 0 <br />\n fileObj = open(‘obamacare.txt’)</p>\n\n<p>lines = fileObj.readlines()</p>\n\n<p>for line in sys.stdin: <br />\n line.strip() <br />\n for matching<em>string in re.findall(r’s[A-Z][a-z][a-z]b’, line): <br />\n name = matching</em>string <br />\n congress.add(name)</p>\n\n<p>congress.remove(” New”)</p>\n\n<p>congressCounter = len(congress) <br />\n for num in range(0,congressCounter): <br />\n name = congress.pop() <br />\n name=name[1:] <br />\n congressName.append(name)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>verb in re.findall(r”bw{7}ed|bw{7}ing”,words): <br />\n verb = matching</em>verb <br />\n verb = verb.lower() <br />\n verbs.add(verb)</p>\n\n<p>verbCounter = len(verbs) <br />\n for num in range(0,verbCounter): <br />\n verb = verbs.pop() <br />\n verbsList.append(verb)</p>\n\n<p>for words in lines: <br />\n words.strip() <br />\n for matching<em>adverb in re.findall(r”bw{7}ly”,words): <br />\n adverb = matching</em>adverb <br />\n adverb = adverb.lower() <br />\n adverbs.add(adverb)</p>\n\n<p>adverbCounter = len(adverbs) <br />\n for num in range(0,adverbCounter): <br />\n adverb = adverbs.pop() <br />\n adverbsList.append(adverb)</p>\n\n<p>if congressCounter &lt; verbCounter and congressCounter &lt; adverbCounter: <br />\n displayCounter = congressCounter <br />\n elif verbCounter &lt; congressCounter and verbCounter &lt; adverbCounter: <br />\n displayCounter = verbCounter <br />\n elif adverbCounter &lt; verbCounter and adverbCounter &lt; congressCounter: <br />\n displayCounter = adverbCounter</p>\n\n<p>for num in range(0,displayCounter,2): <br />\n #print num <br />\n if num &lt; displayCounter: <br />\n nameone = congressName[num] <br />\n nametwo = congressName[num +1] <br />\n print(nameone + ” and ” + nametwo + ” ” + adverbsList[num] + ” ” + verbsList[num] + ” ” + adverbsList[num] + ” ” + nameone + ” and ” + nametwo)</p>\n\n<p>[/cc]</p>\n\n<p><a href=\"http://www.zevenwolf.com/blog/rwet/congress.txt\">Congress Text</a> <br />\n<a href=\"http://www.zevenwolf.com/blog/rwet/obamacare.txt\">Obama Care Text</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1268394198000,"created_by":1,"updated_at":1396136835000,"updated_by":1,"published_at":1268394198000,"published_by":1},{"id":274,"uuid":"d8a5ba5f-4c1c-487f-b0fd-af3d14a8b25f","title":"RF Radios","slug":"rf-radios-3","markdown":"\nMy group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: [transmitter ](http://www.sparkfun.com/commerce/product_info.php?products_id=8946)and [receiver](http://www.sparkfun.com/commerce/product_info.php?products_id=8949).\n\nOne of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.\n\n[![](http://zevenwolf.com/blog/uploads/reciever.jpg \"reciever\")](http://zevenwolf.com/blog/uploads/reciever.jpg)\n\nThe receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.\n\n[![](http://zevenwolf.com/blog/uploads/transmitter.jpg \"transmitter\")](http://zevenwolf.com/blog/uploads/transmitter.jpg)\n\n\n","html":"<p>My group and I were testing these RF Radios to see if we can make some DIY rfids. These modules are 434 mhz radio transmitter and receiver pairs that run at a range from 2v – 12v. It operates at 2400 baud rate. For more information is located on the sparkfun site: <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8946\">transmitter </a>and <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8949\">receiver</a>.</p>\n\n<p>One of the most important things is the shape of the antenna. Coiling around a 1/2 inch cylinder give a good signal. The receiver is well labeled the only trick is that middle power pin needs to be grounded with a capacitor. This helps smooth out the radio signal coming through. The receiver data pin goes connected to the RX port. For simple tests simply listening to the serial port will give you the transmitted data.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/reciever.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/reciever.jpg\" alt=\"\" title=\"reciever\" /></a></p>\n\n<p>The receiver’s data pin goes connected to whatever you want to send across the link. In this case we are sending analog values via a pot. The data pin is connected to the RX pin.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/transmitter.jpg\" alt=\"\" title=\"transmitter\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269441969000,"created_by":1,"updated_at":1396136866000,"updated_by":1,"published_at":1269441969000,"published_by":1},{"id":275,"uuid":"d0bc6ce3-1d63-48f9-8176-95bada022b6e","title":"Charlotte's Web","slug":"charlottes-web-3","markdown":"\nZeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.\n\nWe are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts.  \n[![](http://zevenwolf.com/blog/uploads/audiocircuit.jpg \"audiocircuit\")](http://zevenwolf.com/blog/uploads/audiocircuit.jpg)\n\nThe Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit.  \n[![](http://zevenwolf.com/blog/uploads/miller-engine.jpg \"miller-engine\")](http://zevenwolf.com/blog/uploads/miller-engine.jpg)\n\nRight now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.\n\n\n","html":"<p>Zeven and I are creating a solar powered tone generator for our final with a form factor of a spider. A miller engine circuit will power the “legs” which will act as switches to set off the tones.</p>\n\n<p>We are using the simple LM 386 amplifier circuit and a hacked into Hex Schmitt Trigger. Both circuits are powered by four solar panels wired in Series and Parallel. The buzzing oscillator sound is a square wave and runs on 6 volts. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/audiocircuit.jpg\" alt=\"\" title=\"audiocircuit\" /></a></p>\n\n<p>The Miller Engine Circuit is powered by 4 solar panels wired in parallel creating 80 -100 miliamps and 3 volts. A small geared page motor acts as a “leg” switch to turn on the audio circuit. <br />\n<a href=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miller-engine.jpg\" alt=\"\" title=\"miller-engine\" /></a></p>\n\n<p>Right now we are having an issue with the miller engine. Our amperage for our circuit is being lost somewhere in our circuit. We are only getting 25mA out of a possible 130mA. After testing the capacitors, trigger, and transistor we have found out that those are not the problems. We now assume it could be the signal pin on the voltage trigger not letting all of the amperage through.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1269613841000,"created_by":1,"updated_at":1396136904000,"updated_by":1,"published_at":1269613841000,"published_by":1},{"id":276,"uuid":"7777f79e-41b4-4779-8e30-e60fdbe92b90","title":"Power Consumption Calculation for xbee 900","slug":"power-consumption-calculation-for-xbee-900-3","markdown":"\nFirst we calculate our [battery ](http://www.sparkfun.com/commerce/product_info.php?products_id=8818)  \n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.\n\nTo calculate the Watt hours = voltage * Amps  \n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours\n\nNow we Calculate the xbee 900 which run at 3.3v:  \n The xbee has 3 modes we have to deal with their consumption:  \n sleep mode: 60 micro amp hours  \n transmit mode: 210,000 micro amp hours  \n receive mode: 80,000 micro amp hours\n\nnext is calculating the time ratio  \n We are sending and receiving 100 times a day  \n each takes 1 second  \n thats 200 seconds everyday 73,000 seconds  \n 31,556,926 seconds in one year  \n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year\n\nWe have combined the 2 events so we can average:  \n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps\n\nNow that we have a time ratio we calculate  \n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours  \n The right side of our calculation gives use Watts and the left gives us Watt hours\n\n891 watts + 197 watts = 740,000 micro amp hours  \n 1088 watts = 740,000 micro amp hours  \n 740,000/1088 = 680 hours or 35 days on one battery  \n we need this to last at least a year and a half  \n That will be 27 batteries but we’ll need closer to 36 batteries to be safe\n\nThe most important number is that for a year and a half we need more then 3600 milliamps at 3.3v\n\n\n","html":"<p>First we calculate our <a href=\"http://www.sparkfun.com/commerce/product_info.php?products_id=8818\">battery </a> <br />\n The battery is rated at 3.7v @ 200 mA to make it easier to convert later we turn it into micro volts.</p>\n\n<p>To calculate the Watt hours = voltage * Amps <br />\n 740,000 micro watt hours = 3.7volts * 200,000 micro amp hours</p>\n\n<p>Now we Calculate the xbee 900 which run at 3.3v: <br />\n The xbee has 3 modes we have to deal with their consumption: <br />\n sleep mode: 60 micro amp hours <br />\n transmit mode: 210,000 micro amp hours <br />\n receive mode: 80,000 micro amp hours</p>\n\n<p>next is calculating the time ratio <br />\n We are sending and receiving 100 times a day <br />\n each takes 1 second <br />\n thats 200 seconds everyday 73,000 seconds <br />\n 31,556,926 seconds in one year <br />\n 73,000 secs/31,556,926 secs = .002 the xbee is transmitting and receiving during the year</p>\n\n<p>We have combined the 2 events so we can average: <br />\n 80,000 micro amps and 210,00 micro amps = 135,000 micro amps</p>\n\n<p>Now that we have a time ratio we calculate <br />\n (.002)(3.3volts)(135,000 micro volts) + (.998)(3.3volts)(60 micro volts) = 740, 000 micro amp hours <br />\n The right side of our calculation gives use Watts and the left gives us Watt hours</p>\n\n<p>891 watts + 197 watts = 740,000 micro amp hours <br />\n 1088 watts = 740,000 micro amp hours <br />\n 740,000/1088 = 680 hours or 35 days on one battery <br />\n we need this to last at least a year and a half <br />\n That will be 27 batteries but we’ll need closer to 36 batteries to be safe</p>\n\n<p>The most important number is that for a year and a half we need more then 3600 milliamps at 3.3v</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270646103000,"created_by":1,"updated_at":1396136938000,"updated_by":1,"published_at":1270646103000,"published_by":1},{"id":277,"uuid":"9e25130d-8408-482b-80eb-b021c43a16c2","title":"Reddit 5-7-5 poems","slug":"reddit-5-7-5-poems-3","markdown":"\nThis python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem\n\nHere YEARS Here 2 undercover  \n for goes YEARS report. Here is author  \n YEARS evangelical Atheist is church.\n\nconsider understands and seeking understands  \n service host; want understands want no you  \n assuming fucking one you’re Lunarpages.\n\nWas Laid Off Obama? Off  \n Obama? for Obama? Off Employee Was Voting  \n Voting for Was Off Voting\n\nCool infographic infographic Nintendo Nintendo  \n infographic infographic infographic Nintendo Nintendo Cool infographic  \n infographic Cool Cool Nintendo Cool\n\n[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import random\n\ndef haiku(words):\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList1.append(haiku)\n\n print ” “.join(haikuList1)\n\n for i in range(0,7):  \n haiku = random.choice(words)  \n haikuList2.append(haiku)\n\n print ” “.join(haikuList2)\n\n for i in range(0,5):  \n haiku = random.choice(words)  \n haikuList3.append(haiku)\n\n print ” “.join(haikuList3)\n\nurl = “http://www.reddit.com/r/reddit.com/”  \n titlesList = list()  \n num = int()  \n haikuList1 = list()  \n haikuList2 = list()  \n haikuList3 = list()\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\nfor tag in soup.findAll(“p”, {“class” : “title”} ):  \n a = tag.findAll(“a”, {“class” : “title “} )  \n titles = a[0].string.encode(‘ascii’, ‘ignore’)  \n titles = titles.strip()  \n titles = titles.split(” “)  \n titlesList.append(titles)\n\nnum = random.randrange(0,len(titlesList))  \n words = titlesList[num]  \n haiku(words)\n\n[/cc]\n\n\n","html":"<p>This python program grabs headlines from reddit’s homepage and picks a headline randomly and converts it into a randomized 5-7-5 structured poem</p>\n\n<p>Here YEARS Here 2 undercover <br />\n for goes YEARS report. Here is author <br />\n YEARS evangelical Atheist is church.</p>\n\n<p>consider understands and seeking understands <br />\n service host; want understands want no you <br />\n assuming fucking one you’re Lunarpages.</p>\n\n<p>Was Laid Off Obama? Off <br />\n Obama? for Obama? Off Employee Was Voting <br />\n Voting for Was Off Voting</p>\n\n<p>Cool infographic infographic Nintendo Nintendo <br />\n infographic infographic infographic Nintendo Nintendo Cool infographic <br />\n infographic Cool Cool Nintendo Cool</p>\n\n<p>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import random</p>\n\n<p>def haiku(words):</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList1.append(haiku)</p>\n\n<p>print ” “.join(haikuList1)</p>\n\n<p>for i in range(0,7): <br />\n haiku = random.choice(words) <br />\n haikuList2.append(haiku)</p>\n\n<p>print ” “.join(haikuList2)</p>\n\n<p>for i in range(0,5): <br />\n haiku = random.choice(words) <br />\n haikuList3.append(haiku)</p>\n\n<p>print ” “.join(haikuList3)</p>\n\n<p>url = “<a href=\"http://www.reddit.com/r/reddit.com/”\">http://www.reddit.com/r/reddit.com/”</a> <br />\n titlesList = list() <br />\n num = int() <br />\n haikuList1 = list() <br />\n haikuList2 = list() <br />\n haikuList3 = list()</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>for tag in soup.findAll(“p”, {“class” : “title”} ): <br />\n a = tag.findAll(“a”, {“class” : “title “} ) <br />\n titles = a[0].string.encode(‘ascii’, ‘ignore’) <br />\n titles = titles.strip() <br />\n titles = titles.split(” “) <br />\n titlesList.append(titles)</p>\n\n<p>num = random.randrange(0,len(titlesList)) <br />\n words = titlesList[num] <br />\n haiku(words)</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1270817115000,"created_by":1,"updated_at":1396137354000,"updated_by":1,"published_at":1270817115000,"published_by":1},{"id":278,"uuid":"7173c45b-606b-487a-82d0-c814ee50efed","title":"Collager","slug":"collager-3","markdown":"\nCollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.\n\n[![](http://zevenwolf.com/blog/uploads/mattandzeven.jpg \"mattandzeven\")](http://zevenwolf.com/blog/uploads/mattandzeven.jpg)\n\nThe system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.\n\n[![](http://zevenwolf.com/blog/uploads/collager-300x225.jpg \"collager\")](http://zevenwolf.com/blog/uploads/collager.jpg)\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>\n","html":"<p>CollagerÂ is a screen based interactive table that lets you compose collages from images you take from your surroundings and then stamp on the screen. Â It is designed by Zeven Rodriguez and Matt Swenson for the kids at the NYU Langone Medical Center: The Rusk Institute of Rehabilitation Medicine Pediatric Department.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/mattandzeven.jpg\" alt=\"\" title=\"mattandzeven\" /></a></p>\n\n<p>The system works in 2 parts: the controller and the the over head camera. The controller has a camera inside and a IR light. The controllers camera is used to take pictures of your surroundings. The IR light inside the ball is used to position and stamp the image on to the screen.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/collager.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/collager-300x225.jpg\" alt=\"\" title=\"collager\" /></a></p>\n\n<div id=\"_mcePaste\">The UI of the interface is displayed above. The interface is trying to maintain a easy and kid friendly approach. The use of primary colors is not only design choice, but is aÂ palette for the drawing tool.</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/interface-300x187.jpg \"interface\")](http://zevenwolf.com/blog/uploads/interface.jpg)</div><div></div><div>The Basic setup for the system is a computer, a 24in monitor, a camera, and a custom puck object we created.</div><div>[![](http://zevenwolf.com/blog/uploads/basicsetup.jpg \"basicsetup\")](http://zevenwolf.com/blog/uploads/basicsetup.jpg)</div><div></div><div>[![](http://zevenwolf.com/blog/uploads/puck.jpg \"puck\")](http://zevenwolf.com/blog/uploads/puck.jpg)</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1271589705000,"created_by":1,"updated_at":1396137285000,"updated_by":1,"published_at":1271589705000,"published_by":1},{"id":279,"uuid":"9aa48d97-2df7-4678-9203-c464c1b44a17","title":"LumiLife","slug":"lumilife-3","markdown":"\nLumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.\n\n[![](http://zevenwolf.com/blog/uploads/lumilife.jpg \"lumilife\")](http://zevenwolf.com/blog/uploads/lumilife.jpg)\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[LumiLife](http://vimeo.com/11143650) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\nThis is the diagram of how it all flows together.\n\n[![](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg \"circuitdiagramsmaller\")](http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg)\n\nThe nocturnal circuit is made of a 74AC14\n\n[![](http://zevenwolf.com/blog/uploads/noc.jpg \"noc\")](http://zevenwolf.com/blog/uploads/noc.jpg)\n\nThis is the schematic for the nocturnal circuit from the[ beam wiki site](http://www.beam-wiki.org/wiki/SIMD1).\n\n[![](http://zevenwolf.com/blog/uploads/nocturnal.gif \"nocturnal\")](http://zevenwolf.com/blog/uploads/nocturnal.gif)\n\nThe motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the [beam wiki site.](http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial) The parts include\n\n[74AC14](http://www.beam-wiki.org/wiki/74AC14 \"74AC14\") HexÂ [Schmitt Inverter](http://www.beam-wiki.org/wiki/Schmitt_Inverter \"Schmitt Inverter\") IC (theÂ [MicroCore](http://www.beam-wiki.org/wiki/MicroCore \"MicroCore\") chip).\n\n[74AC240](http://www.beam-wiki.org/wiki/74AC240 \"74AC240\") Octal Buffer / Line Driver with Tri-state Outputs (TheÂ [Motor Driver](http://www.beam-wiki.org/wiki/Motor_Driver \"Motor Driver\")).\n\n.22 uF MonolithicÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Four).\n\n10 uF Monolithic, Electrolytic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (Two).\n\n2 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") red-black-green (Four).\n\n4.2 uF Monolithic or TantalumÂ [Capacitors](http://www.beam-wiki.org/wiki/Capacitors \"Capacitors\") (One for the Reversing Circuit).\n\n3 MegÂ [Resistors](http://www.beam-wiki.org/wiki/Resistors \"Resistors\") orange-black-green (One for the Reversing Circuit).\n\n[1N914](http://www.beam-wiki.org/wiki/1N914 \"1N914\") orÂ [1N4148](http://www.beam-wiki.org/wiki/1N4148 \"1N4148\") Diodes (Two).\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\">[![](http://zevenwolf.com/blog/uploads/Microcore.jpg \"Microcore\")](http://zevenwolf.com/blog/uploads/Microcore.jpg)This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\">[![](http://zevenwolf.com/blog/uploads/walker_driver.jpg \"walker_driver\")](http://zevenwolf.com/blog/uploads/walker_driver.jpg)This is how to wire the 74AC240\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\">[![](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg \"Microcorewalkewithcap\")](http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg)The one thing missing from the graphic above is a cap going from pin 20 to pin 1.\n\n</div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\">[![](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg \"Microcore_complete\")](http://zevenwolf.com/blog/uploads/Microcore_complete.jpg)This image shows how to connect the motors and connect the 74AC14 and 74AC240.\n\n</div>![](http://zevenwolf.com/blog/uploads/motor-circuit.jpg \"motor-circuit\")\n\nâ¢Solar Panels  \n â Open circuit:Â 4x 4.5v @ ~20 mA  \n â¢Battery  \n â 3x 1.2v @ 600mAh  \n â¢Motors & LEDs = 3.6 @ 300mAh  \n â 2x Motors  \n â 6x LEDs\n\n\n","html":"<p>LumiLife is a solar powered lantern that during the day sleeps and charges and comes alive with breath and light at night. It uses a nocturnal circuit and a motor control circuit to light up and bellow the lamp. It was designed and created by Susan Ngo and Zeven Rodriguez.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/lumilife.jpg\" alt=\"\" title=\"lumilife\" /></a></p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11143650&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11143650\">LumiLife</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n\n<p>This is the diagram of how it all flows together.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/circuitdiagramsmaller.jpg\" alt=\"\" title=\"circuitdiagramsmaller\" /></a></p>\n\n<p>The nocturnal circuit is made of a 74AC14</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/noc.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/noc.jpg\" alt=\"\" title=\"noc\" /></a></p>\n\n<p>This is the schematic for the nocturnal circuit from the<a href=\"http://www.beam-wiki.org/wiki/SIMD1\"> beam wiki site</a>.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\"><img src=\"http://zevenwolf.com/blog/uploads/nocturnal.gif\" alt=\"\" title=\"nocturnal\" /></a></p>\n\n<p>The motor controller circuit is composed of a 74AC14 and a 74AC240. The motor circuit was made from this tutorial on the <a href=\"http://www.beam-wiki.org/wiki/Freeform_Microcore_Walker_Tutorial\">beam wiki site.</a> The parts include</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC14\" title=\"74AC14\">74AC14</a> HexÂ <a href=\"http://www.beam-wiki.org/wiki/Schmitt_Inverter\" title=\"Schmitt Inverter\">Schmitt Inverter</a> IC (theÂ <a href=\"http://www.beam-wiki.org/wiki/MicroCore\" title=\"MicroCore\">MicroCore</a> chip).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/74AC240\" title=\"74AC240\">74AC240</a> Octal Buffer / Line Driver with Tri-state Outputs (TheÂ <a href=\"http://www.beam-wiki.org/wiki/Motor_Driver\" title=\"Motor Driver\">Motor Driver</a>).</p>\n\n<p>.22 uF MonolithicÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Four).</p>\n\n<p>10 uF Monolithic, Electrolytic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (Two).</p>\n\n<p>2 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> red-black-green (Four).</p>\n\n<p>4.2 uF Monolithic or TantalumÂ <a href=\"http://www.beam-wiki.org/wiki/Capacitors\" title=\"Capacitors\">Capacitors</a> (One for the Reversing Circuit).</p>\n\n<p>3 MegÂ <a href=\"http://www.beam-wiki.org/wiki/Resistors\" title=\"Resistors\">Resistors</a> orange-black-green (One for the Reversing Circuit).</p>\n\n<p><a href=\"http://www.beam-wiki.org/wiki/1N914\" title=\"1N914\">1N914</a> orÂ <a href=\"http://www.beam-wiki.org/wiki/1N4148\" title=\"1N4148\">1N4148</a> Diodes (Two).</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_344\" style=\"width: 366px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore.jpg\" alt=\"\" title=\"Microcore\" /></a>This picture from the beam wiki site illustrates all of the basic connections for the 74AC14 microcore to work.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_345\" style=\"width: 373px\"><a href=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/walker_driver.jpg\" alt=\"\" title=\"walker_driver\" /></a>This is how to wire the 74AC240</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_346\" style=\"width: 332px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcorewalkewithcap.jpg\" alt=\"\" title=\"Microcorewalkewithcap\" /></a>The one thing missing from the graphic above is a cap going from pin 20 to pin 1.</p>\n\n<p></div><div class=\"wp-caption aligncenter\" id=\"attachment_347\" style=\"width: 315px\"><a href=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/Microcore_complete.jpg\" alt=\"\" title=\"Microcore_complete\" /></a>This image shows how to connect the motors and connect the 74AC14 and 74AC240.</p>\n\n<p></div><img src=\"http://zevenwolf.com/blog/uploads/motor-circuit.jpg\" alt=\"\" title=\"motor-circuit\" /></p>\n\n<p>â¢Solar Panels <br />\n â Open circuit:Â 4x 4.5v @ ~20 mA <br />\n â¢Battery <br />\n â 3x 1.2v @ 600mAh <br />\n â¢Motors &amp; LEDs = 3.6 @ 300mAh <br />\n â 2x Motors <br />\n â 6x LEDs</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272196657000,"created_by":1,"updated_at":1396137240000,"updated_by":1,"published_at":1272196657000,"published_by":1},{"id":280,"uuid":"6eab0dbc-3b86-4a23-a622-768d95b4fa42","title":"Nursery Rhyme","slug":"nursery-rhyme-3","markdown":"\n<div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> \n\n<div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> \n\n<div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> \n\n<div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> \n\n<div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> \n\n<div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> \n\n<div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> \n\n<div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> \n\n<div></div><div></div><div></div>[cc lang=\"python\"]  \n from BeautifulSoup import BeautifulSoup  \n import urllib  \n import sys  \n import random\n\nwords = set()  \n wordSet = set()  \n rhyme = dict()  \n rhymeList = list()\n\nurl = “littlemuffet.html”  \n changer = sys.argv[1]  \n name = sys.argv[2]\n\ndata = urllib.urlopen(url).read()  \n soup = BeautifulSoup(data)\n\ngenderID1 = “Mr.”  \n genderID2 = “his”\n\n#parses speech  \n for line in sys.stdin:  \n line = line.strip()  \n line_words = line.split(” “)  \n for word in line_words:  \n words.add(word)\n\nfor word in words:  \n wordLength = len(word)  \n if (“.”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“,”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“;”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“?”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n elif (“:”) in word:  \n wordSet.add(word[:(wordLength-1)])  \n else:  \n wordSet.add(word)\n\nfor word in wordSet:  \n wordLength = len(word)  \n lastLetter = word[wordLength-2:wordLength]\n\nif lastLetter in rhyme.keys():  \n rhyme[lastLetter].append(word)  \n else:  \n rhyme[lastLetter]=[word]\n\nif “true” in changer:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })\n\nfor i in range(0,len(gender1)):  \n gender1[i].replaceWith(genderID1)  \n for i in range(0,len(gender2)):  \n gender2[i].contents[0].replaceWith(genderID2)  \n else:  \n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer })  \n for i in range(0,len(gender1)):  \n origWord = gender1[i].contents[0]  \n gender1[i].replaceWith(origWord)\n\nnamer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ })  \n for i in range(0,len(namer)):  \n namer[i].contents[0].replaceWith(name)\n\n#rhyme 1  \n rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ })  \n baseRhyme1 = str(rhyme1[0].contents[0])  \n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)]  \n rhyme1Search = rhyme[baseRhyme1Last]  \n rhyme1Word = random.choice(rhyme1Search)  \n rhyme1[0].replaceWith(baseRhyme1)  \n rhyme1[1].replaceWith(rhyme1Word)  \n rhyme1[2].replaceWith(baseRhyme1)\n\n#rhyme 1  \n rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ })  \n letters = random.choice(rhyme.keys())  \n randomList = rhyme[letters]  \n rhyme2Word1 = random.choice(randomList)  \n rhyme2Word2 = random.choice(randomList)\n\nrhyme2[0].replaceWith(rhyme2Word1)  \n rhyme2[1].replaceWith(rhyme2Word2)\n\n#rhyme 3  \n rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ })  \n baseRhyme3 = str(rhyme3[0].contents[0])  \n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)]  \n rhyme3Search = rhyme[baseRhyme3Last]  \n rhyme3Word = random.choice(rhyme3Search)  \n rhyme3[0].replaceWith(baseRhyme3)  \n rhyme3[1].replaceWith(rhyme3Word)  \n rhyme3[2].replaceWith(baseRhyme3)\n\nprint soup\n\n[/cc]  \n [cc lang=\"html\"]  \n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span>\n\nEating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span>\n\nAlong came a <span id=\"5\">spider</span>\n\nWho sat down beside <span id=\"4\">her</span>\n\nAnd frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span>\n\n[/cc]\n\n<div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div>[Political Nursery Rhyme](http://vimeo.com/11550696) from [Zeven Rodriguez](http://vimeo.com/user2302394) on [Vimeo](http://vimeo.com).\n\n\n","html":"<p><div id=\"_mcePaste\">The idea for the project was to mash-up nursery rhymes. I used speeches from obama and palin to re-populate the rhymne</div><div></div><div>Little Mr. barack, sat on a check</div><div id=\"_mcePaste\">Eating his curds and growth</div><div id=\"_mcePaste\">Along came a crisis</div><div id=\"_mcePaste\">Who sat down beside his</div><div id=\"_mcePaste\">And frightened Mr. barack month</div><div></div><div><div>Little Mr. barack, sat on a stock</div><div>Eating his curds and risk</div><div>Along came a crisis</div><div>Who sat down beside his</div><div>And frightened Mr. barack risk</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a check</div><div>Eating his curds and applause.</div><div>Along came a This</div><div>Who sat down beside his</div><div>And frightened Mr. barack applause.</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and issue</div><div>Along came a is</div><div>Who sat down beside his</div><div>And frightened Mr. barack rescue</div><div></div> </p>\n\n<p><div>Little Mr. barack, sat on a pick</div><div>Eating his curds and come</div><div>Along came a this</div><div>Who sat down beside his</div><div>And frightened Mr. barack outcome</div><div></div> </p>\n\n<p><div></div><div>Little Miss palin, sat on a win</div><div>Eating her curds and kill</div><div>Along came a never</div><div>Who sat down beside her</div><div>And frightened Miss Â palin still</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a McCain</div><div>Eating her curds and Al</div><div>Along came a pollster</div><div>Who sat down beside her</div><div>And frightened Miss palin Al</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a remain</div><div>Eating her curds and food</div><div>Along came a teleprompter</div><div>Who sat down beside her</div><div>And frightened Miss palin good</div><div></div> </p>\n\n<p><div>Little Miss palin, sat on a again</div><div>Eating her curds and “TARP</div><div>Along came a another</div><div>Who sat down beside her</div><div>And frightened Miss palin “TARP</div><div></div> </p>\n\n<p><div>Little Miss sarah, sat on a Yeah</div><div>Eating her curds and question[s]</div><div>Along came a together</div><div>Who sat down beside her</div><div>And frightened Miss sarah question[s]</div></div> </p>\n\n<p><div></div><div></div><div></div>[cc lang=\"python\"] <br />\n from BeautifulSoup import BeautifulSoup <br />\n import urllib <br />\n import sys <br />\n import random</p>\n\n<p>words = set() <br />\n wordSet = set() <br />\n rhyme = dict() <br />\n rhymeList = list()</p>\n\n<p>url = “littlemuffet.html” <br />\n changer = sys.argv[1] <br />\n name = sys.argv[2]</p>\n\n<p>data = urllib.urlopen(url).read() <br />\n soup = BeautifulSoup(data)</p>\n\n<p>genderID1 = “Mr.” <br />\n genderID2 = “his”</p>\n\n<h1 id=\"parsesspeech\">parses speech</h1>\n\n<p>for line in sys.stdin: <br />\n line = line.strip() <br />\n line<em>words = line.split(” “) <br />\n for word in line</em>words: <br />\n words.add(word)</p>\n\n<p>for word in words: <br />\n wordLength = len(word) <br />\n if (“.”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“,”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“;”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“?”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n elif (“:”) in word: <br />\n wordSet.add(word[:(wordLength-1)]) <br />\n else: <br />\n wordSet.add(word)</p>\n\n<p>for word in wordSet: <br />\n wordLength = len(word) <br />\n lastLetter = word[wordLength-2:wordLength]</p>\n\n<p>if lastLetter in rhyme.keys(): <br />\n rhyme[lastLetter].append(word) <br />\n else: <br />\n rhyme[lastLetter]=[word]</p>\n\n<p>if “true” in changer: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n gender2 = soup.findAll(‘span’, { “id” : “4″ }, { “gender” : changer })</p>\n\n<p>for i in range(0,len(gender1)): <br />\n gender1[i].replaceWith(genderID1) <br />\n for i in range(0,len(gender2)): <br />\n gender2[i].contents[0].replaceWith(genderID2) <br />\n else: <br />\n gender1 = soup.findAll(‘span’, { “id” : “1″ }, { “gender” : changer }) <br />\n for i in range(0,len(gender1)): <br />\n origWord = gender1[i].contents[0] <br />\n gender1[i].replaceWith(origWord)</p>\n\n<p>namer = soup.findAll(‘span’, { “id” : “2″ }, { “namer” : “1″ }) <br />\n for i in range(0,len(namer)): <br />\n namer[i].contents[0].replaceWith(name)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme1 = soup.findAll(‘span’,{ “rhyme” : “1″ }) <br />\n baseRhyme1 = str(rhyme1[0].contents[0]) <br />\n baseRhyme1Last = baseRhyme1[len(baseRhyme1)-2:len(baseRhyme1)] <br />\n rhyme1Search = rhyme[baseRhyme1Last] <br />\n rhyme1Word = random.choice(rhyme1Search) <br />\n rhyme1[0].replaceWith(baseRhyme1) <br />\n rhyme1[1].replaceWith(rhyme1Word) <br />\n rhyme1[2].replaceWith(baseRhyme1)</p>\n\n<h1 id=\"rhyme1\">rhyme 1</h1>\n\n<p>rhyme2 = soup.findAll(‘span’,{ “rhyme” : “2″ }) <br />\n letters = random.choice(rhyme.keys()) <br />\n randomList = rhyme[letters] <br />\n rhyme2Word1 = random.choice(randomList) <br />\n rhyme2Word2 = random.choice(randomList)</p>\n\n<p>rhyme2[0].replaceWith(rhyme2Word1) <br />\n rhyme2[1].replaceWith(rhyme2Word2)</p>\n\n<h1 id=\"rhyme3\">rhyme 3</h1>\n\n<p>rhyme3 = soup.findAll(‘span’,{ “rhyme” : “3″ }) <br />\n baseRhyme3 = str(rhyme3[0].contents[0]) <br />\n baseRhyme3Last = baseRhyme3[len(baseRhyme3)-2:len(baseRhyme3)] <br />\n rhyme3Search = rhyme[baseRhyme3Last] <br />\n rhyme3Word = random.choice(rhyme3Search) <br />\n rhyme3[0].replaceWith(baseRhyme3) <br />\n rhyme3[1].replaceWith(rhyme3Word) <br />\n rhyme3[2].replaceWith(baseRhyme3)</p>\n\n<p>print soup</p>\n\n<p>[/cc] <br />\n [cc lang=\"html\"] <br />\n Little <span id=\"1\">Miss</span><span id=\"2\">Muffet</span>, sat on a <span id=\"3\">tuffet</span></p>\n\n<p>Eating <span id=\"4\">her</span> curds and <span id=\"5\">whey</span></p>\n\n<p>Along came a <span id=\"5\">spider</span></p>\n\n<p>Who sat down beside <span id=\"4\">her</span></p>\n\n<p>And frightened <span id=\"1\">Miss</span><span id=\"2\">Muffet</span><span id=\"6\">away</span></p>\n\n<p>[/cc]</p>\n\n<p><div style=\"text-align: center;\"><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"300\" width=\"400\"><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><param name=\"src\" value=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\"></param><embed allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"300\" src=\"http://vimeo.com/moogaloop.swf?clip_id=11550696&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></div><a href=\"http://vimeo.com/11550696\">Political Nursery Rhyme</a> from <a href=\"http://vimeo.com/user2302394\">Zeven Rodriguez</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1272620955000,"created_by":1,"updated_at":1396137367000,"updated_by":1,"published_at":1272620955000,"published_by":1},{"id":281,"uuid":"e41082ea-39fe-48a9-9db5-368343fa3f7f","title":"About","slug":"about-3","markdown":"\nODDGUI blog documents experiments in design, electronics, code, and fabrication by[ Zevensuy Rodriguez](http://www.zevenrodriguez.com).\n\nZevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded [Howlin’ Wolves](http://www.howlinwolves.com) a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.\n\nHe is a part of [Brooklyn Research](http://www.brooklynresearch.org), where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.\n\n\n","html":"<p>ODDGUI blog documents experiments in design, electronics, code, and fabrication by<a href=\"http://www.zevenrodriguez.com\"> Zevensuy Rodriguez</a>.</p>\n\n<p>Zevensuy Rodriguez is a maker/designer/prototyper born in Miami, FL. He graduated and was a Fellow at NYU’s Interactive Telecommunications Masters Program and did his undergrad at Univ. of Miamiâs Visual Communications program. Â He founded <a href=\"http://www.howlinwolves.com\">Howlin’ Wolves</a> a prototyping and fabrication company based in Williamsburg, Brooklyn. Projects range from web, electronics, to custom fabrication including CNC Milling.</p>\n\n<p>He is a part of <a href=\"http://www.brooklynresearch.org\">Brooklyn Research</a>, where he focuses on userâs interaction with internet objects by creating interesting interfaces. He also explores combining traditional fabrication techniques with digital ones.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1278411804000,"created_by":1,"updated_at":1397059104000,"updated_by":1,"published_at":1278411804000,"published_by":1},{"id":282,"uuid":"5b9baeda-59b0-4417-b23e-465f579fb029","title":"Apache 2.2 and mod_wsgi configuration","slug":"apache-2-2-and-mod_wsgi-configuration-3","markdown":"\nI finally got mod_wsgi to work. mod_wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache\n\nFor information about mod_wsgi and more elaborate explanations on configuration and installation visit http://code.google.com/p/modwsgi/\n\nI am running centos5.4, apache 2.2, and python 2.6.5\n\nFirst create a directory to do the initial download of mod_wsgi’s code\n\ncd into that directory\n\nThen do a wget mod_wsgi’s google code site and find the version you need\n\nThat should look something like this:  \n wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\n\nThis command unpacks the tarball:  \n tar xvfz mod_wsgi-3.3.tar.gz\n\ncd into the unpacked mod_wsgi-3.3 folder\n\ntype: ./configure\n\nonce configured\n\ntype: make\n\ntype: make install\n\nOnce that is done we want to restart the apache server\n\ncd into etc/ from your top most or / directory and\n\ntype: service httpd stop\n\nYou will get and OK if everything is fine\n\ntype: service httpd start\n\nOne way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules\n\nThe most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.\n\nIn CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf\n\ncd into etc/httpd/conf\n\nwhen you type: nano httpd.conf it loads the nano file editor\n\nThe DocumentRoot is where when you visit www.example.com  \n the initial directory that opens when you visit your website\n\nhttpdocs is my root directory. All of my site files are located there\n\nDocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs\n\nApache wants the serverpath of where files like index.html might reside\n\nload module enables mod_wsgi when a person visits the script\n\nThis should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nThis portion of the code tells mod_wsgi that in the python_projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python_projects/  \n there are files that need to run mod_wsgi\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n<directory>  \n Order deny,allow  \n Allow from all  \n</directory>\n\nThe mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:\n\n/var/www/vhosts/zevenwolf.com/python_projects/\n\nBecause the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/\n\nWhen you visit www.zevenwolf.com/python_projects  \n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python_projects\n\nSo once I added the httpdocs it worked. My final apache code for my site looks like this:\n\n<virtualhost>  \n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs  \n ServerName www.zevenwolf.com  \n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com  \n ErrorLog logs/zevenwolf.com-error_log  \n CustomLog logs/zevenwolf.com-access_log common  \n<directory>  \n AllowOverride All  \n</directory>  \n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost>\n\nLoadModule wsgi_module modules/mod_wsgi.so\n\nWSGIScriptAlias /python_projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python_projects/\n\n//<directory>  \n Order deny,allow  \n Allow from all  \n //</directory>\n\n//\n\n\n","html":"<p>I finally got mod<em>wsgi to work. mod</em>wsgi is a module that lets you run python scripts on your webserver. You need to have access to install applications and configure apache</p>\n\n<p>For information about mod_wsgi and more elaborate explanations on configuration and installation visit <a href=\"http://code.google.com/p/modwsgi/\">http://code.google.com/p/modwsgi/</a></p>\n\n<p>I am running centos5.4, apache 2.2, and python 2.6.5</p>\n\n<p>First create a directory to do the initial download of mod_wsgi’s code</p>\n\n<p>cd into that directory</p>\n\n<p>Then do a wget mod_wsgi’s google code site and find the version you need</p>\n\n<p>That should look something like this: <br />\n wget <a href=\"http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz\">http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz</a></p>\n\n<p>This command unpacks the tarball: <br />\n tar xvfz mod_wsgi-3.3.tar.gz</p>\n\n<p>cd into the unpacked mod_wsgi-3.3 folder</p>\n\n<p>type: ./configure</p>\n\n<p>once configured</p>\n\n<p>type: make</p>\n\n<p>type: make install</p>\n\n<p>Once that is done we want to restart the apache server</p>\n\n<p>cd into etc/ from your top most or / directory and</p>\n\n<p>type: service httpd stop</p>\n\n<p>You will get and OK if everything is fine</p>\n\n<p>type: service httpd start</p>\n\n<p>One way to know that it installed correctly is going into your apache modules file and making sure that mod_wsgi.so is in that folder. In my install of apache2.2, the modules are located in etc/httpd/modules</p>\n\n<p>The most important part of configuring apache with mod_wsgi is to make sure what your DocumentRoot is.</p>\n\n<p>In CentOS my apache2.2 configuration file was located in etc/httpd/conf/httpd.conf</p>\n\n<p>cd into etc/httpd/conf</p>\n\n<p>when you type: nano httpd.conf it loads the nano file editor</p>\n\n<p>The DocumentRoot is where when you visit www.example.com <br />\n the initial directory that opens when you visit your website</p>\n\n<p>httpdocs is my root directory. All of my site files are located there</p>\n\n<p>DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs</p>\n\n<p>Apache wants the serverpath of where files like index.html might reside</p>\n\n<p>load module enables mod_wsgi when a person visits the script</p>\n\n<p>This should be placed with in your Apache sites configuration which is normally located at the bottom of the httpd.conf file</p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>This portion of the code tells mod<em>wsgi that in the python</em>projects directory located in the serverpath var/www/vhosts/zevenwolf.com/httpdocs/python<em>projects/ <br />\n there are files that need to run mod</em>wsgi</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p><directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n</directory></p>\n\n<p>The mistake I initially made was not putting the httpdocs. I originally wanted to host this folder outside of httpdocs, so my serverpath looked like this:</p>\n\n<p>/var/www/vhosts/zevenwolf.com/python_projects/</p>\n\n<p>Because the DocumentRoot is set at /var/www/vhosts/zevenwolf.com/httpdocs/</p>\n\n<p>When you visit www.zevenwolf.com/python<em>projects <br />\n the serverpath you go to is /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects</p>\n\n<p>So once I added the httpdocs it worked. My final apache code for my site looks like this:</p>\n\n<p><virtualhost> <br />\n DocumentRoot /var/www/vhosts/zevenwolf.com/httpdocs <br />\n ServerName www.zevenwolf.com <br />\n ServerAlias zevenwolf.com zevenrodriguez.com www.zevenrodriguez.com zevenwithaz.com www.zevenwithaz.com <br />\n ErrorLog logs/zevenwolf.com-error<em>log <br />\n CustomLog logs/zevenwolf.com-access</em>log common <br />\n<directory> <br />\n AllowOverride All <br />\n</directory> <br />\n ScriptAlias /cgi-bin/ /var/www/vhosts/zevenwolf.com/cgi-bin/</virtualhost></p>\n\n<p>LoadModule wsgi<em>module modules/mod</em>wsgi.so</p>\n\n<p>WSGIScriptAlias /python<em>projects/ /var/www/vhosts/zevenwolf.com/httpdocs/python</em>projects/</p>\n\n<p>//<directory> <br />\n Order deny,allow <br />\n Allow from all <br />\n //</directory></p>\n\n<p>//</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1282678467000,"created_by":1,"updated_at":1396137149000,"updated_by":1,"published_at":1282678467000,"published_by":1},{"id":283,"uuid":"8ff507c4-ddbe-4def-8df8-0466a34756c0","title":"HungryTime","slug":"hungrytime-3","markdown":"\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span>\n\n<span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span>\n\n\n","html":"<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">An idea for the floor I have been looking at making is a system of alerting people on the floor when someone is hungry. The project is called HungryTime. The idea has 2 aspects to it. A physical notification display and a way to communicate with that display. In its current inception, a mobile app and an arduino based projection system are they ways to carry out the project. The mobile app is suposed extremly simple. It has 2 buttons, one to say your hungry and one to tell you are out to lunch. It also has a counter to tell you how many people are hungry. </span></span></p>\n\n<p><span style=\"font-family: Calibri, sans-serif;\"><span style=\"font-size: medium;\">The simple design for the mobile app does not let you see who is hungry. By using text messaging, it solves that issue. Using the cell number and pre-registering the user’s name. When using text messaging option either the number of hungry or the names those who are hungry would be displayed in the message. It would be depend on message length.</span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1284299556000,"created_by":1,"updated_at":1396137079000,"updated_by":1,"published_at":1284299556000,"published_by":1},{"id":284,"uuid":"6c2bc9df-55a0-49dd-94c6-755f3c8ac0b4","title":"istheflooropen","slug":"istheflooropen-3","markdown":"\nistheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks.  \n [cc lang=\"php\"]\n\n $mySql = null;  \n $phone = $_GET['phone'];  \n function sqlConnect()  \n {  \n # Configuration Variables  \n $hostname = “localhost”;  \n $dbname = “*****”;  \n $username = “*****”;  \n $password = “*****”;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());  \n mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;  \n }  \n function sqlQuery($query){  \n global $mySql;  \n $data = null;  \n $result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returned  \n if (sizeof($result) > 0){  \n $num_fields = mysql_num_fields($result);  \n $row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);  \n $data[$row_cnt][$field_name] = $row_data[$cnt];  \n }  \n $row_cnt++;  \n }  \n }  \n return $data;  \n }  \n // set the default timezone to use. Available since PHP 5.1  \n date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);  \n $dayOfWeek = date(“l”);  \n $time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;  \n $insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());  \n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;  \n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;  \n $data = sqlQuery($output);  \n $day = NULL;  \n $phoneNumber = $data[0]['phone'];  \n $outputdayOfWeek = $data[0]['dayOfWeek'];  \n $outputTime = $data[0]['time'];  \n $stringStart = 0;  \n $stringEnd = 2;  \n $tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;  \n //echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Monday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Tuesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Thursday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Friday’){  \n if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);  \n }  \n else{  \n echo(“The floor is open. Please come in!”);  \n }  \n }  \n ?>  \n $mySql = null;$phone = $_GET['phone'];  \n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″;  \n $mySql = mysql_connect($hostname, $username, $password) or die (mysql_error());mysql_select_db($dbname, $mySql) or die(mysql_error());  \n return $mySql;}  \n function sqlQuery($query){global $mySql;$data = null;$result = mysql_query($query, $mySql);  \n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num_fields = mysql_num_fields($result);$row_cnt = 0;  \n while ($row_data = mysql_fetch_array($result)){  \n for ($cnt = 0; $cnt < $num_fields; $cnt++){  \n $field_name = mysql_field_name($result, $cnt);$data[$row_cnt][$field_name] = $row_data[$cnt];}  \n $row_cnt++;}}return $data;}\n\n// set the default timezone to use. Available since PHP 5.1date_default_timezone_set(‘EDT’);  \n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”);  \n $mySql = sqlConnect();  \n $insertPhone = “INSERT INTO `flooropen`.`phoneinfo` (`ID`, `phone`, `date`, `dayOfWeek`, `time`) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql_query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output);  \n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;\n\n$tempString = substr($outputTime,$stringStart,$stringEnd);  \n $timeInt = (int)$tempString;//echo($timeInt);  \n if($outputdayOfWeek == ‘Sunday’){if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Monday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Tuesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}  \n }  \n elseif($outputdayOfWeek == ‘Wednesday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}\n\n}  \n elseif($outputdayOfWeek == ‘Thursday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Friday’){if($timeInt < 9){  \n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}  \n elseif($outputdayOfWeek == ‘Saturday’){  \n if($timeInt < 12){  \n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}\n\n?>\n\n[/cc]\n\n\n","html":"<p>istheflooropen is a sms app that checks if the ITP floor is open. By texting istheflooropen to 41411, when an sms is received the script posts the date and time to the database. It later retrieves the date and time. Then after checking the day and time, it responds back. This app uses textmarks. <br />\n [cc lang=\"php\"]</p>\n\n<p>$mySql = null; <br />\n $phone = $<em>GET['phone']; <br />\n function sqlConnect() <br />\n { <br />\n # Configuration Variables <br />\n $hostname = “localhost”; <br />\n $dbname = “<strong>*</strong>”; <br />\n $username = “<strong>*</strong>”; <br />\n $password = “<strong>*</strong>”; <br />\n $mySql = mysql</em>connect($hostname, $username, $password) or die (mysql<em>error()); <br />\n mysql</em>select<em>db($dbname, $mySql) or die(mysql</em>error()); <br />\n return $mySql; <br />\n } <br />\n function sqlQuery($query){ <br />\n global $mySql; <br />\n $data = null; <br />\n $result = mysql<em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returned <br />\n if (sizeof($result) > 0){ <br />\n $num</em>fields = mysql<em>num</em>fields($result); <br />\n $row<em>cnt = 0; <br />\n while ($row</em>data = mysql<em>fetch</em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num<em>fields; $cnt++){ <br />\n $field</em>name = mysql<em>field</em>name($result, $cnt); <br />\n $data[$row<em>cnt][$field</em>name] = $row<em>data[$cnt]; <br />\n } <br />\n $row</em>cnt++; <br />\n } <br />\n } <br />\n return $data; <br />\n } <br />\n // set the default timezone to use. Available since PHP 5.1 <br />\n date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”); <br />\n $dayOfWeek = date(“l”); <br />\n $time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”; <br />\n $insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql<em>error()); <br />\n $output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″; <br />\n $sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”; <br />\n $data = sqlQuery($output); <br />\n $day = NULL; <br />\n $phoneNumber = $data[0]['phone']; <br />\n $outputdayOfWeek = $data[0]['dayOfWeek']; <br />\n $outputTime = $data[0]['time']; <br />\n $stringStart = 0; <br />\n $stringEnd = 2; <br />\n $tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString; <br />\n //echo($timeInt); <br />\n if($outputdayOfWeek <mark> ‘Sunday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Monday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Tuesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Wednesday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Thursday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek </mark> ‘Friday’){ <br />\n if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “); <br />\n } <br />\n else{ <br />\n echo(“The floor is open. Please come in!”); <br />\n } <br />\n } <br />\n ?> <br />\n $mySql = null;$phone = $</em>GET['phone']; <br />\n function sqlConnect(){# Configuration Variables$hostname = “localhost”;$dbname = “flooropen”;$username = “flooropen”;$password = “flooropen1″; <br />\n $mySql = mysql<em>connect($hostname, $username, $password) or die (mysql</em>error());mysql<em>select</em>db($dbname, $mySql) or die(mysql<em>error()); <br />\n return $mySql;} <br />\n function sqlQuery($query){global $mySql;$data = null;$result = mysql</em>query($query, $mySql); <br />\n # This set’s up an associative array (key->value pair) for all of the data returnedif (sizeof($result) > 0){$num<em>fields = mysql</em>num<em>fields($result);$row</em>cnt = 0; <br />\n while ($row<em>data = mysql</em>fetch<em>array($result)){ <br />\n for ($cnt = 0; $cnt &lt; $num</em>fields; $cnt++){ <br />\n $field<em>name = mysql</em>field<em>name($result, $cnt);$data[$row</em>cnt][$field<em>name] = $row</em>data[$cnt];} <br />\n $row_cnt++;}}return $data;}</p>\n\n<p>// set the default timezone to use. Available since PHP 5.1date<em>default</em>timezone<em>set(‘EDT’); <br />\n $date = date(“Y-m-d”);$dayOfWeek = date(“l”);$time = date(“H:i”); <br />\n $mySql = sqlConnect(); <br />\n $insertPhone = “INSERT INTO <code>flooropen</code>.<code>phoneinfo</code> (<code>ID</code>, <code>phone</code>, <code>date</code>, <code>dayOfWeek</code>, <code>time</code>) VALUES (NULL, ‘$phone’, ‘$date’, ‘$dayOfWeek’, ‘$time’)”;$insertQuery = mysql</em>query($insertPhone,$mySql) or die(mysql_error());$output = “SELECT * FROM phoneinfo WHERE phone = ‘$phone’ ORDER BY ID DESC LIMIT 1″;$sql = “SELECT * FROM phoneinfo ORDER BY ID DESC”;$data = sqlQuery($output); <br />\n $day = NULL;$phoneNumber = $data[0]['phone'];$outputdayOfWeek = $data[0]['dayOfWeek'];$outputTime = $data[0]['time'];$stringStart = 0;$stringEnd = 2;</p>\n\n<p>$tempString = substr($outputTime,$stringStart,$stringEnd); <br />\n $timeInt = (int)$tempString;//echo($timeInt); <br />\n if($outputdayOfWeek </mark> ‘Sunday’){if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Monday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek <mark> ‘Monday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Tuesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Tuesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Wednesday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);} <br />\n } <br />\n elseif($outputdayOfWeek <mark> ‘Wednesday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Thursday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}</p>\n\n<p>} <br />\n elseif($outputdayOfWeek </mark> ‘Thursday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Friday from 9am-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek <mark> ‘Friday’){if($timeInt &lt; 9){ <br />\n echo (“The floor is closed. The floor will re-open Saturday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}} <br />\n elseif($outputdayOfWeek </mark> ‘Saturday’){ <br />\n if($timeInt &lt; 12){ <br />\n echo (“The floor is closed. The floor will re-open Sunday from 12pm-12am “);}else{echo(“The floor is open. Please come in!”);}}</p>\n\n<p>?></p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285025958000,"created_by":1,"updated_at":1396137059000,"updated_by":1,"published_at":1285025958000,"published_by":1},{"id":285,"uuid":"99d79578-0b3a-4d05-b998-0a39ca9af5a2","title":"Atari Punk Instructable","slug":"atari-punk-instructable-3","markdown":"\n[![Atari Punk Instructable](http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg)](http://www.flickr.com/photos/zevenrodriguez/5025639535/ \"Atari Punk Instructable by zevenwolf, on Flickr\")\n\nFor Design for Greenfab we had to go through a tutorial and critique it. I did theÂ [Atari Punk Circuit](http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/ \"Atari Punk Circuit\"). Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.\n\nThe big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=9f9a990b82&photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5025639535/\" title=\"Atari Punk Instructable by zevenwolf, on Flickr\"><img src=\"http://farm5.static.flickr.com/4085/5025639535_64e482ceaa.jpg\" alt=\"Atari Punk Instructable\" title=\"\" /></a></p>\n\n<p>For Design for Greenfab we had to go through a tutorial and critique it. I did theÂ <a href=\"http://www.instructables.com/id/Making-Music-with-an-Atari-Punk-Console/step1/null/\" title=\"Atari Punk Circuit\">Atari Punk Circuit</a>. Like most instructables it is like shooting blind. The author did a good job of telling you what parts are needed. He also did a step by step of how to put it together. He also gives a brief description on how the circuit works with a schematic. At the end, he suggests how to take it abit further.</p>\n\n<p>The big complaint I have with the step by step is lack of images to make sure your circuit is looking correct. Since I know how to read a schematic I was able to reference that. With the description of how the chip works some more history would have been nice. He mentions briefly types of circuits it originates from. In the end, I have to look at my circuit because it does not sound totally right as you see in the video below.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=9f9a990b82&amp;photo_id=5026256484\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285497126000,"created_by":1,"updated_at":1396137379000,"updated_by":1,"published_at":null,"published_by":1},{"id":286,"uuid":"21e3db7f-6dfe-4a27-a253-422d8796dee8","title":"Sounds of NY","slug":"sounds-of-ny-3","markdown":"\n[Sounds of NY](http://zevenwolf.com/mobilemedia/soundsofNY/) is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The [parser ](http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip)was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.\n\nThe one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.\n\n[cc lang=\"php\"]\n\n$tempData = $data[0]['sound'];  \n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”;  \n $replacements = ‘/’;  \n echo preg_replace($patterns, $replacements, $tempData);  \n [/cc]\n\n\n","html":"<p><a href=\"http://zevenwolf.com/mobilemedia/soundsofNY/\">Sounds of NY</a> is a project that lets you submit sounds of the city. It uses an email php parser and a processing sketch. The <a href=\"http://itp.nyu.edu/~sve204/mobilemedia_spring09/php_popper.zip\">parser </a>was written by Shawn Van Every. By emailing z e v e n w o l f . p i c s Â at Â g m a i l . c o m and attach your mp3 the sketch picks up the last sound uploaded.</p>\n\n<p>The one thing I had to used fix the parser was when I would post to the database it included my server’s httpdocs in the url path. I used regular expressions to take the /httpdocs/ out. In php, the / starts and ends the regular expression. [^A-Za-z0-9] this sections chooses any non-number and letter in this case the first /. Then it finds httpdocs. Then [^A-Za-z0-9] finds the second /.</p>\n\n<p>[cc lang=\"php\"]</p>\n\n<p>$tempData = $data[0]['sound']; <br />\n $patterns = “/[^A-Za-z0-9]httpdocs[^A-Za-z0-9]/”; <br />\n $replacements = ‘/’; <br />\n echo preg_replace($patterns, $replacements, $tempData); <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1285634644000,"created_by":1,"updated_at":1396137008000,"updated_by":1,"published_at":1285634644000,"published_by":1},{"id":287,"uuid":"c634c6c5-0151-4b1b-b46e-a7f5d4089edd","title":"555 Timer","slug":"555-timer-3","markdown":"\nAllison and I used this [schematic](http://wild-bohemian.com/electronics/flasher.html) to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.\n\n![](http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\")\n\n[![](http://zevenwolf.com/blog/uploads/555timer.jpg \"555timer\")](http://zevenwolf.com/blog/uploads/555timer.jpg)\n\n\n","html":"<p>Allison and I used this <a href=\"http://wild-bohemian.com/electronics/flasher.html\">schematic</a> to blink some lights with a 555 timer. We found out somethings about this circuit. 1. matching the resistors coming off pin 7 and 8 help you even out the blink rate. Also because the 555 timer output makes the voltage change from + to – so Â can get the lights the blink at the same time if you orient them the same way.</p>\n\n<p><img src=\"http://wild-bohemian.com/electronics/images/blink-dia.gif \"555 schematic\"\" alt=\"\" /></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/555timer.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/555timer.jpg\" alt=\"\" title=\"555timer\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286204414000,"created_by":1,"updated_at":1396136981000,"updated_by":1,"published_at":1286204414000,"published_by":1},{"id":288,"uuid":"ca82baf5-81fa-4d9c-b02e-51f3a50b5f32","title":"Traceroute Miami and New York","slug":"traceroute-miami-and-new-york-3","markdown":"\nFor Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.\n\n[![](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg \"newyorktraceroute\")](http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg)\n\n[![](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg \"miamiTraceroute\")](http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg)\n\nThis is the site I used to make the map.\n\n[http://www.topwebhosts.org/tools/ip-locator.php](http://www.topwebhosts.org/tools/ip-locator.php)\n\n[cc lang=\"python\"]  \n import re  \n from operator import itemgetter  \n def makeDict(site):  \n superList = list()  \n tempList = list()  \n ip = str()  \n timeList = list()  \n avTime = int()  \n map = dict()  \n textAddress = ‘ ‘  \n siteLister = list()  \n for line in site:  \n line = line.strip()  \n siteLister.append(line)\n\n for i in range(4,len(siteLister)):  \n if i >=4:  \n listSplit = siteLister[i].split(‘ ‘)  \n for num in range(0,len(listSplit)):  \n if ‘ms’ in listSplit[num]:  \n if (‘1:  \n print (w + ” : ” + str(allMap[w]))\n\nbigList = list()  \n bigList1 = list()  \n masterSite = open(‘sites/master.txt’)  \n masterSite1 = open(‘site2/master.txt’)\n\nprint “MIAMI”  \n bigList = makeDict(masterSite)  \n sortIps(bigList)  \n print ” ”  \n print “NEW YORK”  \n bigList1 = makeDict(masterSite1)  \n sortIps(bigList1)\n\n#for ips in bigSetList:  \n # if allMap[ips]>1:  \n # print (ips + ” : ” + str(allMap[ips]))\n\n[/cc]\n\nThis is the output from the parser  \n [cc lang=\"text\"]\n\nMIAMI  \n : 261  \n 65.14.121.204 : 24  \n 12.122.106.94 : 24  \n 12.122.1.45 : 24  \n 192.168.1.254 : 24  \n 12.122.5.142 : 21  \n 12.81.8.24 : 19  \n 65.14.121.181 : 13  \n 68.152.169.161 : 11  \n 12.81.8.98 : 10  \n 12.122.80.185 : 6  \n 12.81.8.9 : 5  \n 74.175.192.182 : 5  \n 74.175.192.190 : 4  \n 74.175.192.186 : 4  \n 12.81.8.73 : 4  \n 199.181.132.250 : 4  \n 12.81.8.17 : 4  \n 74.175.192.178 : 4  \n 12.122.84.21 : 3  \n 12.81.8.71 : 3  \n 12.122.1.174 : 3  \n 12.81.8.15 : 3  \n 74.175.192.166 : 2  \n 67.16.138.214 : 2  \n 74.175.192.202 : 2  \n 64.125.31.54 : 2  \n 12.122.84.113 : 2  \n 205.186.154.181 : 2  \n 69.195.198.147 : 2  \n 192.205.35.90 : 2  \n 64.30.230.20 : 2  \n 152.52.20.247 : 2  \n 12.122.1.5 : 2  \n 209.170.90.66 : 2  \n 12.122.87.61 : 2  \n 12.123.22.25 : 2  \n 64.125.27.61 : 2  \n 12.122.5.185 : 2  \n 64.210.15.78 : 2  \n 12.81.8.13 : 2  \n 12.81.8.19 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 12.81.8.7 : 2  \n 207.97.227.239 : 2  \n 192.205.35.234 : 2  \n 69.63.181.12 : 2  \n 64.124.161.42 : 2  \n 69.60.7.199 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 192.205.37.82 : 2  \n 208.80.152.2 : 2  \n 74.175.192.174 : 2  \n 74.125.67.83 : 2  \n 192.205.35.218 : 2\n\nNEW YORK  \n : 278  \n 173.56.121.1 : 24  \n 192.168.1.1 : 24  \n 130.81.180.4 : 12  \n 130.81.29.238 : 12  \n 130.81.29.236 : 12  \n 130.81.49.94 : 12  \n 152.63.16.185 : 9  \n 152.63.17.21 : 9  \n 4.69.138.254 : 7  \n 152.63.3.118 : 6  \n 4.68.127.21 : 6  \n 4.69.138.222 : 5  \n 4.69.141.21 : 4  \n 152.63.10.25 : 4  \n 199.181.132.250 : 4  \n 4.69.132.89 : 3  \n 4.69.132.65 : 3  \n 152.63.10.29 : 3  \n 152.63.9.249 : 3  \n 4.69.135.185 : 2  \n 69.63.189.16 : 2  \n 173.194.35.83 : 2  \n 152.52.20.247 : 2  \n 4.71.152.22 : 2  \n 69.195.198.147 : 2  \n 4.69.132.61 : 2  \n 12.122.1.209 : 2  \n 4.78.132.98 : 2  \n 4.68.111.137 : 2  \n 4.69.132.53 : 2  \n 205.186.154.181 : 2  \n 4.69.140.190 : 2  \n 152.63.18.73 : 2  \n 152.63.21.133 : 2  \n 209.131.112.94 : 2  \n 69.60.7.195 : 2  \n 207.97.227.239 : 2  \n 4.68.105.36 : 2  \n 64.30.230.20 : 2  \n 64.131.82.241 : 2  \n 63.246.23.232 : 2  \n 63.85.36.74 : 2  \n 208.80.152.2 : 2  \n 69.60.7.199 : 2  \n 152.63.1.57 : 2  \n 4.69.141.17 : 2\n\n[/cc]\n\n\n","html":"<p>For Understand Networks, we had to run a traceroute on 24 sites. I did it located in Miami and New York. I wrote a python parser that takes in a large text file with all of the traceroutes and sorts what IPs were hit the most. I ran the traceroute on windows with this command tracert thensite.com >>master.txt. The >> appends to the end of an existing file. One thing I noticed with these maps is that most of my traffic was routed through the same IPs.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/newyorktraceroute1.jpg\" alt=\"\" title=\"newyorktraceroute\" /></a></p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/miamiTraceroute.jpg\" alt=\"\" title=\"miamiTraceroute\" /></a></p>\n\n<p>This is the site I used to make the map.</p>\n\n<p><a href=\"http://www.topwebhosts.org/tools/ip-locator.php\">http://www.topwebhosts.org/tools/ip-locator.php</a></p>\n\n<p>[cc lang=\"python\"] <br />\n import re <br />\n from operator import itemgetter <br />\n def makeDict(site): <br />\n superList = list() <br />\n tempList = list() <br />\n ip = str() <br />\n timeList = list() <br />\n avTime = int() <br />\n map = dict() <br />\n textAddress = ‘ ‘ <br />\n siteLister = list() <br />\n for line in site: <br />\n line = line.strip() <br />\n siteLister.append(line)</p>\n\n<p>for i in range(4,len(siteLister)): <br />\n if i >=4: <br />\n listSplit = siteLister[i].split(‘ ‘) <br />\n for num in range(0,len(listSplit)): <br />\n if ‘ms’ in listSplit[num]: <br />\n if (‘1: <br />\n print (w + ” : ” + str(allMap[w]))</p>\n\n<p>bigList = list() <br />\n bigList1 = list() <br />\n masterSite = open(‘sites/master.txt’) <br />\n masterSite1 = open(‘site2/master.txt’)</p>\n\n<p>print “MIAMI” <br />\n bigList = makeDict(masterSite) <br />\n sortIps(bigList) <br />\n print ” ” <br />\n print “NEW YORK” <br />\n bigList1 = makeDict(masterSite1) <br />\n sortIps(bigList1)</p>\n\n<h1 id=\"foripsinbigsetlist\">for ips in bigSetList:</h1>\n\n<p># if allMap[ips]>1: <br />\n # print (ips + ” : ” + str(allMap[ips]))</p>\n\n<p>[/cc]</p>\n\n<p>This is the output from the parser <br />\n [cc lang=\"text\"]</p>\n\n<p>MIAMI <br />\n : 261 <br />\n 65.14.121.204 : 24 <br />\n 12.122.106.94 : 24 <br />\n 12.122.1.45 : 24 <br />\n 192.168.1.254 : 24 <br />\n 12.122.5.142 : 21 <br />\n 12.81.8.24 : 19 <br />\n 65.14.121.181 : 13 <br />\n 68.152.169.161 : 11 <br />\n 12.81.8.98 : 10 <br />\n 12.122.80.185 : 6 <br />\n 12.81.8.9 : 5 <br />\n 74.175.192.182 : 5 <br />\n 74.175.192.190 : 4 <br />\n 74.175.192.186 : 4 <br />\n 12.81.8.73 : 4 <br />\n 199.181.132.250 : 4 <br />\n 12.81.8.17 : 4 <br />\n 74.175.192.178 : 4 <br />\n 12.122.84.21 : 3 <br />\n 12.81.8.71 : 3 <br />\n 12.122.1.174 : 3 <br />\n 12.81.8.15 : 3 <br />\n 74.175.192.166 : 2 <br />\n 67.16.138.214 : 2 <br />\n 74.175.192.202 : 2 <br />\n 64.125.31.54 : 2 <br />\n 12.122.84.113 : 2 <br />\n 205.186.154.181 : 2 <br />\n 69.195.198.147 : 2 <br />\n 192.205.35.90 : 2 <br />\n 64.30.230.20 : 2 <br />\n 152.52.20.247 : 2 <br />\n 12.122.1.5 : 2 <br />\n 209.170.90.66 : 2 <br />\n 12.122.87.61 : 2 <br />\n 12.123.22.25 : 2 <br />\n 64.125.27.61 : 2 <br />\n 12.122.5.185 : 2 <br />\n 64.210.15.78 : 2 <br />\n 12.81.8.13 : 2 <br />\n 12.81.8.19 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 12.81.8.7 : 2 <br />\n 207.97.227.239 : 2 <br />\n 192.205.35.234 : 2 <br />\n 69.63.181.12 : 2 <br />\n 64.124.161.42 : 2 <br />\n 69.60.7.199 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 192.205.37.82 : 2 <br />\n 208.80.152.2 : 2 <br />\n 74.175.192.174 : 2 <br />\n 74.125.67.83 : 2 <br />\n 192.205.35.218 : 2</p>\n\n<p>NEW YORK <br />\n : 278 <br />\n 173.56.121.1 : 24 <br />\n 192.168.1.1 : 24 <br />\n 130.81.180.4 : 12 <br />\n 130.81.29.238 : 12 <br />\n 130.81.29.236 : 12 <br />\n 130.81.49.94 : 12 <br />\n 152.63.16.185 : 9 <br />\n 152.63.17.21 : 9 <br />\n 4.69.138.254 : 7 <br />\n 152.63.3.118 : 6 <br />\n 4.68.127.21 : 6 <br />\n 4.69.138.222 : 5 <br />\n 4.69.141.21 : 4 <br />\n 152.63.10.25 : 4 <br />\n 199.181.132.250 : 4 <br />\n 4.69.132.89 : 3 <br />\n 4.69.132.65 : 3 <br />\n 152.63.10.29 : 3 <br />\n 152.63.9.249 : 3 <br />\n 4.69.135.185 : 2 <br />\n 69.63.189.16 : 2 <br />\n 173.194.35.83 : 2 <br />\n 152.52.20.247 : 2 <br />\n 4.71.152.22 : 2 <br />\n 69.195.198.147 : 2 <br />\n 4.69.132.61 : 2 <br />\n 12.122.1.209 : 2 <br />\n 4.78.132.98 : 2 <br />\n 4.68.111.137 : 2 <br />\n 4.69.132.53 : 2 <br />\n 205.186.154.181 : 2 <br />\n 4.69.140.190 : 2 <br />\n 152.63.18.73 : 2 <br />\n 152.63.21.133 : 2 <br />\n 209.131.112.94 : 2 <br />\n 69.60.7.195 : 2 <br />\n 207.97.227.239 : 2 <br />\n 4.68.105.36 : 2 <br />\n 64.30.230.20 : 2 <br />\n 64.131.82.241 : 2 <br />\n 63.246.23.232 : 2 <br />\n 63.85.36.74 : 2 <br />\n 208.80.152.2 : 2 <br />\n 69.60.7.199 : 2 <br />\n 152.63.1.57 : 2 <br />\n 4.69.141.17 : 2</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1286282218000,"created_by":1,"updated_at":1396136971000,"updated_by":1,"published_at":1286282218000,"published_by":1},{"id":289,"uuid":"35f835e6-c7c8-484e-a22c-8b5257d7cdd6","title":"Final Project(or) tests","slug":"final-projector-tests-3","markdown":"\nFor our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.\n\n[![](http://zevenwolf.com/blog/uploads/projectionbox.jpg \"projectionbox\")](http://zevenwolf.com/blog/uploads/projectionbox.jpg)\n\nWe initially tried 3 lights.\n\n[![](http://zevenwolf.com/blog/uploads/justlight.jpg \"justlight\")](http://zevenwolf.com/blog/uploads/justlight.jpg)\n\nWe then used the circle we cut out as a model for our stencil.\n\n[![](http://zevenwolf.com/blog/uploads/stencil.jpg \"stencil\")](http://zevenwolf.com/blog/uploads/stencil.jpg)\n\nWe found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.\n\n[![](http://zevenwolf.com/blog/uploads/7projection.jpg \"7projection\")](http://zevenwolf.com/blog/uploads/7projection.jpg)\n\nWe found some round cardboard tube and found that we can get a longer projection.\n\n[![](http://zevenwolf.com/blog/uploads/tubeprojection.jpg \"tubeprojection\")](http://zevenwolf.com/blog/uploads/tubeprojection.jpg)\n\n\n","html":"<p>For our final project for Greenfab, we are making a light graffitiÂ project. We are looking to use cardboard boxes or tubes, 10mm led, a blinking circuit, and a nocturnal circuit to power the whole thing. Allison and I looked at how to do a projection system easily. We used a small cardboard box with a hole.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/projectionbox.jpg\" alt=\"\" title=\"projectionbox\" /></a></p>\n\n<p>We initially tried 3 lights.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/justlight.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/justlight.jpg\" alt=\"\" title=\"justlight\" /></a></p>\n\n<p>We then used the circle we cut out as a model for our stencil.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/stencil.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/stencil.jpg\" alt=\"\" title=\"stencil\" /></a></p>\n\n<p>We found that one light was better then 3 lights. The LED operate well at 3.5v and 120mA.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/7projection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/7projection.jpg\" alt=\"\" title=\"7projection\" /></a></p>\n\n<p>We found some round cardboard tube and found that we can get a longer projection.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/tubeprojection.jpg\" alt=\"\" title=\"tubeprojection\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287329628000,"created_by":1,"updated_at":1396136954000,"updated_by":1,"published_at":1287329628000,"published_by":1},{"id":290,"uuid":"236c40a2-5519-4d6d-8ecf-fea3a4adf2cf","title":"Exquisite-mobile.com","slug":"exquisite-mobile-com-2-3","markdown":"\nExquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];\n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )\n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (\nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'\n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )\n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )\n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.\n\n[cc lang=\"php\"]  \n<?php $i=1;\n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {\n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {\n\t//echo $row1[0];\n\t$tableArray[$i] = $row1[0];\n\t//echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */\n??>\n\n[/cc]\n\nThis is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload_temp_dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.\n\n[cc lang=\"php\"]  \n if((!empty($_FILES[\"uploaded_file\"])) && ($_FILES['uploaded_file']['error'] == 0)) {  \n //Check if the file is JPEG image and it’s size is less than 350Kb  \n $filename = basename($_FILES['uploaded_file']['name']);  \n $ext = substr($filename, strrpos($filename, ‘.’) + 1);  \n if (($ext == “jpg”) && ($_FILES[\"uploaded_file\"][\"type\"] == “image/jpeg”) &&  \n ($_FILES[\"uploaded_file\"][\"size\"]\n\n\n","html":"<p>Exquisite-mobile.com is a game based on the exquisite corpse model. The game is set as like call and response. A prompt is presented and the user responds with a text or picture depending on the round. This is The game is setup as a admin and user interaction. The admin sets up the game and introduces the first prompt.</p>\n\nThis is how we create games.  \n [cc lang=\"php\"]  \n<?php $tableName = $_POST[\"fname\"];  \n$roundNumber = $_POST[\"roundNumber\"];\n$roundType = $_POST[\"roundType\"];\n$submission = $_POST[\"submission\"];\n$gameusers = $_POST[\"gameusers\"];\n//$tableName = \"hello\";\n\n$mysql = sqlConnect();\n\n$gametable = \"CREATE TABLE  `exmob`.`$tableName` (\n`gamesID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`gameID` INT( 127 ) NOT NULL ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`roundType` VARCHAR( 127 ) NOT NULL ,\n`submissionTable` VARCHAR( 127 ) NOT NULL ,\n`userTable` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `gamesID` )  \n)\";\n\nsqlQuery($gametable, $mysql);\n\n$insertGameID = \"INSERT INTO  `exmob`.`$tableName` (\n`gamesID` ,\n`gameID` ,\n`roundNumber` ,\n`roundType` ,\n`submissionTable` ,\n`userTable`\n)\nVALUES (  \nNULL ,  '$tableName',  '$roundNumber',  '$roundType',  '$submission',  '$gameusers'  \n);\";\n\nsqlQuery($insertGameID, $mysql);\n\n$game = \"CREATE TABLE  `exmob`.`$submission` (\n`subID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`roundNumber` INT( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\n`userID` INT( 127 ) NOT NULL ,\n`media` VARCHAR( 127 ) NOT NULL ,\nPRIMARY KEY (  `subID` )  \n)\";\n\nsqlQuery($game, $mysql);\n\n$game1 = \"CREATE TABLE  `exmob`.`$gameusers` (\n`userID` INT( 127 ) NOT NULL AUTO_INCREMENT ,\n`name` VARCHAR( 127 ) NOT NULL ,\n`gameID` INT( 127 ) NOT NULL ,\nPRIMARY KEY (  `userID` )  \n)\";\n\nsqlQuery($game1, $mysql);\n\n\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    echo \"Table: {$row1[0]}n\";\n}\n\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is how we change levels. This type of script is a backbone for not only change levels, but also for adding players. You will notice when I use the var count I look at the current amount of tables in the database. I assume that the admin will create 3 tables: a game, player, and submissions table. The order is displayed alphabetically I assume that the total tables are divided by 3. So when I create the first game I have game1,sub1,user1. When I add another game, the table will look like this game1,game2,sub1,sub2,user1,user2. Thus total number of tables is 6 divide that by 3 you get 2. 2 is the latest table. Then by multiplying by 2 and 3, I get the index of the corresponding sub and user table.</p>\n\n[cc lang=\"php\"]  \n<?php $i=1;  \n$tableArray = array();\n//include 'creategame.php';\n\n$round = $_POST[\"round\"];\n$roundType = $_POST[\"roundType\"];\n//echo $round;\n//GENERAL SQL CONNECT\nsqlConnect();\n\n//SQL CONNECT WITH VAR\n$mysql = sqlConnect();\n\n//LOOK AT THE DATABASE AND PULL OUT THE TABLES\n$sql1 = \"SHOW TABLES FROM `exmob`\";\n\n$result1 = mysql_query($sql1);\n\nif (!$result1) {  \n    echo \"DB Error, could not list tablesn\";\n    echo 'MySQL Error: ' . mysql_error();\n    exit;\n}\n\nwhile ($row1 = mysql_fetch_row($result1)) {  \n    //echo $row1[0];\n    $tableArray[$i] = $row1[0];\n    //echo $tableArray[$i];\n    $i++;\n\n}\n//THE ADMIN SUBMITS 3 TABLES AT A TIME SO THE MORE TABLES 3 WOULD BE THE MULTIPLIER TO FIND THE MOST RECENT 3 THAT WERE ADDED\n$count = count($tableArray);\n//echo $count;\n$mostrecent = ($count/3);\n//echo $mostrecent;\n\n$gameTableNum = ($mostrecent);\n$subTableNum = ($mostrecent * 2);\n$usersTableNum = ($mostrecent * 3);\n\n$gameTable = $tableArray[$gameTableNum];\n$subTable = $tableArray[$subTableNum];\n$usersTable = $tableArray[$usersTableNum];\n\n//echo $gameTable;\n//echo $subTable;\n//echo $usersTable;\n\n// find the gamesID orderby\n$changeround = \"UPDATE  `exmob`.`$gameTable` SET  `roundNumber` =  '$round',\n`roundType` =  '$roundType' WHERE  `$gameTable`.`gamesID` =1 LIMIT 1 ;\";\n\nsqlQuery($changeround, $mysql);\n\nheader(\"Location: http://www.exquisite-mobile.com/admin.php\"); /* Redirect browser */  \n??>\n\n<p>[/cc]</p>\n\n<p>This is the script we used for uploading images. One of the big issues with php is its default upload tmp dir. Sometimes you will not have access to read and write to the temp dir. To bypass this you need to put a new php.ini file where you set the upload<em>temp</em>dir to whatever directory you want to use. For dreamhost it wanted it in a cgi-bin folder on the same level dir as the rest of your files.</p>\n\n<p>[cc lang=\"php\"] <br />\n if((!empty($<em>FILES[\"uploaded</em>file\"])) &amp;&amp; ($<em>FILES['uploaded</em>file']['error'] <mark> 0)) { <br />\n //Check if the file is JPEG image and it’s size is less than 350Kb <br />\n $filename = basename($<em>FILES['uploaded</em>file']['name']); <br />\n $ext = substr($filename, strrpos($filename, ‘.’) + 1); <br />\n if (($ext </mark> “jpg”) &amp;&amp; ($<em>FILES[\"uploaded</em>file\"][\"type\"] == “image/jpeg”) &amp;&amp; <br />\n ($<em>FILES[\"uploaded</em>file\"][\"size\"]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1287780547000,"created_by":1,"updated_at":1395799435000,"updated_by":1,"published_at":1287780547000,"published_by":1},{"id":291,"uuid":"8337e0b4-d81a-4efd-aeb7-bdff3541d659","title":"Android GPS Code","slug":"android-gps-code-3","markdown":"\n[cc lang=\"java\"]\n\nimport android.app.Activity;  \n import android.content.Context;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;\n\n public String lat;  \n public String lon;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n gpsButton.setOnClickListener(this);\n\n }\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);  \n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View arg0) {  \n // TODO Auto-generated method stub\n\n TextView lats = (TextView) this.findViewById(R.id.lat);  \n lats.setText(lat);\n\n TextView lons = (TextView) this.findViewById(R.id.lon);  \n lons.setText(lon);\n\n }  \n }\n\n[/cc]\n\n\n","html":"<p>[cc lang=\"java\"]</p>\n\n<p>import android.app.Activity; <br />\n import android.content.Context; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton;</p>\n\n<p>public String lat; <br />\n public String lon;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n gpsButton.setOnClickListener(this);</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”); <br />\n }</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View arg0) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>TextView lats = (TextView) this.findViewById(R.id.lat); <br />\n lats.setText(lat);</p>\n\n<p>TextView lons = (TextView) this.findViewById(R.id.lon); <br />\n lons.setText(lon);</p>\n\n<p>} <br />\n }</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288050422000,"created_by":1,"updated_at":1395799425000,"updated_by":1,"published_at":1288050422000,"published_by":1},{"id":292,"uuid":"bdbbded6-f3af-47cc-a9ab-f50d6259cb6b","title":"Connections: Final Project Proposal","slug":"connections-final-project-proposal-3","markdown":"\nConnections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.\n\n**Goal **  \n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.\n\n[![](http://zevenwolf.com/blog/uploads/com-300x225.jpg \"com\")](http://zevenwolf.com/blog/uploads/com.jpg)\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=be825df155&photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\nHere is the working display. The selects 2 bottom squares.\n\n**How it works?**  \n The user visits a website. They will be greeted with this application.\n\n[![](http://zevenwolf.com/blog/uploads/screens-1024x380.png \"screens\")](http://zevenwolf.com/blog/uploads/screens.png)\n\nThere they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.\n\n<div style=\"align: center;\">[![connections](http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286117978/ \"connections by zevenwolf, on Flickr\")  \n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.\n\n</div>[![Connections](http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241719596/ \"Connections by zevenwolf, on Flickr\")  \n This the first fitting of the blocks on the foam\n\n[![Connections](http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5241125193/ \"Connections by zevenwolf, on Flickr\")  \n Rune making the connections for the LED blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=f94a2e0430&photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Testing the interfacing between the computer and led blocks\n\n<object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=0c4ae6288d&photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>  \n Running the web app with projection display\n\n[![connections](http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg)](http://www.flickr.com/photos/zevenrodriguez/5286087468/ \"connections by zevenwolf, on Flickr\")  \n Our most excited user.\n\n**Next Steps**\n\n- Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies\n- Skin the front\n- Create more graphical interaction when particles connect\n\n**Issues**\n\n- We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync\n\n\n","html":"<p>Connections is an multiuser interactive installation that uses a mobile web application as a collaboration tool. The system uses various nodes to accomplish this. The mobile application is the input method. A computer with a projector and arduino control the output. A server processes and syncs all communication between the computer, arduino, and mobile application.</p>\n\n<p><em>*Goal *</em> <br />\n This project is to highlight the importance of peoples connections. We emit alot of noise in the world, but at at some point we make that connection with someone that drowns out the rest of it.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/com.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/com-300x225.jpg\" alt=\"\" title=\"com\" /></a></p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=be825df155&amp;photo_id=5286114994\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>\n\n<p>Here is the working display. The selects 2 bottom squares.</p>\n\n<p><strong>How it works?</strong> <br />\n The user visits a website. They will be greeted with this application.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/screens.png\"><img src=\"http://zevenwolf.com/blog/uploads/screens-1024x380.png\" alt=\"\" title=\"screens\" /></a></p>\n\n<p>There they select a color the represents them, followed by selecting a block that will start emitting connection particles. Simultaneously a block (of the same color) will appear in the center “arena”. This is a worm hole for particles. So, if you create a red emitter you create a red collector. Particles have strong rules that attract them to the worm holes. The particles can only make connections once they are in the center “arena”. When particles start emitting they will have there own sound. Finally, at some point 2 different particles will make a connection. Once particles make a connection their combined tone will drown out the rest of the emitting particles.</p>\n\n<p><div style=\"align: center;\"><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286117978/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5086/5286117978_a198ee0cbb.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Laying out a pattern to cut out the foam. This was used to fit the the LED blocks.</p>\n\n<p></div><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241719596/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5168/5241719596_3462d17b8c.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n This the first fitting of the blocks on the foam</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5241125193/\" title=\"Connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5287/5241125193_606c65001e.jpg\" alt=\"Connections\" title=\"\" /></a> <br />\n Rune making the connections for the LED blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=f94a2e0430&amp;photo_id=5241701094\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Testing the interfacing between the computer and led blocks</p>\n\n<p><object bgcolor=\"#000000\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"225\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=0c4ae6288d&amp;photo_id=5241123965\" height=\"225\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object> <br />\n Running the web app with projection display</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5286087468/\" title=\"connections by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5126/5286087468_3895270848.jpg\" alt=\"connections\" title=\"\" /></a> <br />\n Our most excited user.</p>\n\n<p><strong>Next Steps</strong></p>\n\n<ul>\n<li>Fix power issue. Because we are stringing so many of these addressable LEDs. They have a voltage drop off of .3 volts. We are going to address this by using multiple power supplies</li>\n<li>Skin the front</li>\n<li>Create more graphical interaction when particles connect</li>\n</ul>\n\n<p><strong>Issues</strong></p>\n\n<ul>\n<li>We found that decoupling the ground and the data by adding a .1 microfarad cap and 1k resistor in parallel fixed some syncing issues. We found that when we touched the wire the data and clocks would sync up. Eric Rosenthal gave us the idea of decoupling ground and data. We still hadÂ issuesÂ at the end of the 64 leds with sync</li>\n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288692778000,"created_by":1,"updated_at":1396135896000,"updated_by":1,"published_at":1288692778000,"published_by":1},{"id":293,"uuid":"0f1fb95f-ba04-44d4-b974-14def44d074b","title":"How Does Your City Feel?","slug":"how-does-your-city-feel-3","markdown":"\n[![](http://pixelpunchout.com/content/images/2010/10/nyc_angry.png \"nyc_angry\")](http://pixelpunchout.com/content/images/2010/10/nyc_angry.png \"nyc_angry\")\n\n<div>**[How Does Your City Feel?](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php)** captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. [How Does Your City Feel](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div>[**How Does Your City Feel?**](http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php) was created by [**Cindy Wong**](http://pixelpunchout.com) and**Zeven Rodriguez**.</div><div>[![](http://pixelpunchout.com/content/images/2010/10/nyc.png \"nyc\")](http://pixelpunchout.com/content/images/2010/10/nyc.png \"nyc\")</div><div>New York City</div><div>[![](http://pixelpunchout.com/content/images/2010/10/sf.png \"sf\")](http://pixelpunchout.com/content/images/2010/10/sf.png \"sf\")</div>[![](http://pixelpunchout.com/content/images/2010/10/sf_love.png \"sf_love\")](http://pixelpunchout.com/content/images/2010/10/sf_love.png \"sf_love\")\n\nSan Francisco\n\n[![](http://pixelpunchout.com/content/images/2010/10/seattle.png \"seattle\")](http://pixelpunchout.com/content/images/2010/10/seattle.png \"seattle\")\n\n<div>[![](http://pixelpunchout.com/content/images/2010/10/seattle_happy.png \"seattle_happy\")](http://pixelpunchout.com/content/images/2010/10/seattle_happy.png \"seattle_happy\")</div>Seattle\n\n\n","html":"<p><a href=\"http://pixelpunchout.com/content/images/2010/10/nyc_angry.png\" title=\"nyc_angry\"><img src=\"http://pixelpunchout.com/content/images/2010/10/nyc_angry.png\" alt=\"\" title=\"nyc_angry\" /></a></p>\n\n<p><div><strong><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel?</a></strong> captures the emotions people feel in their cities by measuring them in the contents of local real-time Twitter messages.</div><div>What are people feeling in New York City? Seattle? San Francisco? Sad? Happy? Angry? Love?</div><div>When you visit, please choose a city and click an emotion to see the results. If you click only on the city, you will see a graph of the emotions measured by the statement, âI feelâ¦â The mapping is created instantly via Google Charts API by parsing XML from Twitterâs search results. <a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\">How Does Your City Feel</a> is coded with Javascript, and AJAX. So far, Iâve been tickled by the different moods each city exhibits. San Francisco appears more relaxed while New York shows more emotional volatility. When New Yorkers feel love, they really express it â same goes for anger! See the screen shots below for more examples.</div><div><a href=\"http://itp.nyu.edu/~cw1028/understandingnetworks/feelingcities.php\"><strong>How Does Your City Feel?</strong></a> was created by <a href=\"http://pixelpunchout.com\"><strong>Cindy Wong</strong></a> and<strong>Zeven Rodriguez</strong>.</div><div><a href=\"http://pixelpunchout.com/content/images/2010/10/nyc.png\" title=\"nyc\"><img src=\"http://pixelpunchout.com/content/images/2010/10/nyc.png\" alt=\"\" title=\"nyc\" /></a></div><div>New York City</div><div><a href=\"http://pixelpunchout.com/content/images/2010/10/sf.png\" title=\"sf\"><img src=\"http://pixelpunchout.com/content/images/2010/10/sf.png\" alt=\"\" title=\"sf\" /></a></div><a href=\"http://pixelpunchout.com/content/images/2010/10/sf_love.png\" title=\"sf_love\"><img src=\"http://pixelpunchout.com/content/images/2010/10/sf_love.png\" alt=\"\" title=\"sf_love\" /></a></p>\n\n<p>San Francisco</p>\n\n<p><a href=\"http://pixelpunchout.com/content/images/2010/10/seattle.png\" title=\"seattle\"><img src=\"http://pixelpunchout.com/content/images/2010/10/seattle.png\" alt=\"\" title=\"seattle\" /></a></p>\n\n<p><div><a href=\"http://pixelpunchout.com/content/images/2010/10/seattle_happy.png\" title=\"seattle_happy\"><img src=\"http://pixelpunchout.com/content/images/2010/10/seattle_happy.png\" alt=\"\" title=\"seattle_happy\" /></a></div>Seattle</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288694374000,"created_by":1,"updated_at":1396135844000,"updated_by":1,"published_at":1288694374000,"published_by":1},{"id":294,"uuid":"e86024ac-1655-4093-ba0c-513452905188","title":"Android Sms Tracking","slug":"android-sms-tracking-3","markdown":"\nThis application grabs gps location with on button and the second button sends a text message to my phone number.\n\n[cc lang=\"java\"]\n\npackage com.zevenwolf.tracking;\n\nimport android.app.Activity;  \n import android.app.PendingIntent;  \n import android.content.BroadcastReceiver;  \n import android.content.Context;  \n import android.content.Intent;  \n import android.content.IntentFilter;  \n import android.location.Location;  \n import android.location.LocationListener;  \n import android.location.LocationManager;  \n import android.os.Bundle;  \n import android.telephony.SmsManager;  \n import android.util.Log;  \n import android.view.View;  \n import android.view.View.OnClickListener;  \n import android.widget.Button;  \n import android.widget.TextView;  \n import android.widget.Toast;\n\npublic class Tracking extends Activity implements LocationListener, OnClickListener {  \n /** Called when the activity is first created. */\n\n private LocationManager lm;\n\n Button gpsButton;  \n Button messageButton;  \n public String lat;  \n public String lon;  \n public String message;\n\n PendingIntent sentPI;  \n // The intent action we are using  \n String SENT = “SMS_SENT”;  \n BroadcastReceiver br;  \n TextView lats;  \n TextView lons;\n\n public void onCreate(Bundle savedInstanceState) {  \n super.onCreate(savedInstanceState);  \n setContentView(R.layout.main);\n\n lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);  \n lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000l, 5.0f, this);  \n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);\n\n lats = (TextView) this.findViewById(R.id.lat);  \n lons = (TextView) this.findViewById(R.id.lon);\n\n sentPI = PendingIntent.getBroadcast(this, 0,  \n new Intent(SENT), 0);\n\n gpsButton = (Button) this.findViewById(R.id.gps);  \n messageButton = (Button) this.findViewById(R.id.message);\n\n // The important thing is to set the onclicklistner event with in the setOnClickListener  \n gpsButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n lats.setText(lat);\n\n lons.setText(lon);\n\n message = lat + ” ” + lon;  \n Log.d(“message”, message);\n\n Log.d(“view”, “hit”);\n\n }});\n\n messageButton.setOnClickListener(new OnClickListener() {  \n public void onClick(View v) {\n\n Log.d(“view”, “hit”);\n\n SmsManager sms = SmsManager.getDefault();  \n // send the message, passing in the pending intent, sentPI  \n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);\n\n registerReceiver(br, new IntentFilter(SENT));\n\n }});\n\n // this broadcastreceiver when sent a receive code sends back a specific code which you then display\n\n br = new BroadcastReceiver(){  \n @Override  \n public void onReceive(Context ctx, Intent intent) {  \n switch (getResultCode())  \n {  \n case Activity.RESULT_OK:  \n Toast.makeText(getBaseContext(), “SMS sent”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_GENERIC_FAILURE:  \n Toast.makeText(getBaseContext(), “SMS: Generic failure”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NO_SERVICE:  \n Toast.makeText(getBaseContext(), “SMS: No service”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_NULL_PDU:  \n Toast.makeText(getBaseContext(), “SMS: Null PDU”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n case SmsManager.RESULT_ERROR_RADIO_OFF:  \n Toast.makeText(getBaseContext(), “SMS: Radio off”,  \n Toast.LENGTH_SHORT).show();  \n break;  \n }\n\n unregisterReceiver(br);  \n }\n\n };\n\n }  \n public void onPause(){\n\n super.onPause();  \n finish();\n\n}  \n // onPause  \n //super onpause  \n // run finish there\n\n @Override  \n public void onLocationChanged(Location arg0) {  \n lat = String.valueOf(arg0.getLatitude());  \n lon = String.valueOf(arg0.getLongitude());\n\n Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderDisabled(String arg0) {  \n Log.d(“GPS”, “provider disabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onProviderEnabled(String arg0) {  \n Log.d(“GPS”, “provider enabled ” + arg0);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void onStatusChanged(String arg0, int arg1, Bundle arg2) {  \n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“);  \n Log.d(“hello”, “stff”);\n\n }\n\n public void setGPS(String theText)  \n {\n\n }\n\n @Override  \n public void onClick(View v) {  \n // TODO Auto-generated method stub\n\n }\n\n}\n\n[/cc]\n\n\n","html":"<p>This application grabs gps location with on button and the second button sends a text message to my phone number.</p>\n\n<p>[cc lang=\"java\"]</p>\n\n<p>package com.zevenwolf.tracking;</p>\n\n<p>import android.app.Activity; <br />\n import android.app.PendingIntent; <br />\n import android.content.BroadcastReceiver; <br />\n import android.content.Context; <br />\n import android.content.Intent; <br />\n import android.content.IntentFilter; <br />\n import android.location.Location; <br />\n import android.location.LocationListener; <br />\n import android.location.LocationManager; <br />\n import android.os.Bundle; <br />\n import android.telephony.SmsManager; <br />\n import android.util.Log; <br />\n import android.view.View; <br />\n import android.view.View.OnClickListener; <br />\n import android.widget.Button; <br />\n import android.widget.TextView; <br />\n import android.widget.Toast;</p>\n\n<p>public class Tracking extends Activity implements LocationListener, OnClickListener { <br />\n /** Called when the activity is first created. */</p>\n\n<p>private LocationManager lm;</p>\n\n<p>Button gpsButton; <br />\n Button messageButton; <br />\n public String lat; <br />\n public String lon; <br />\n public String message;</p>\n\n<p>PendingIntent sentPI; <br />\n // The intent action we are using <br />\n String SENT = “SMS_SENT”; <br />\n BroadcastReceiver br; <br />\n TextView lats; <br />\n TextView lons;</p>\n\n<p>public void onCreate(Bundle savedInstanceState) { <br />\n super.onCreate(savedInstanceState); <br />\n setContentView(R.layout.main);</p>\n\n<p>lm = (LocationManager) getSystemService(Context.LOCATION<em>SERVICE); <br />\n lm.requestLocationUpdates(LocationManager.GPS</em>PROVIDER, 10000l, 5.0f, this); <br />\n lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000l, 5.0f, this);</p>\n\n<p>lats = (TextView) this.findViewById(R.id.lat); <br />\n lons = (TextView) this.findViewById(R.id.lon);</p>\n\n<p>sentPI = PendingIntent.getBroadcast(this, 0, <br />\n new Intent(SENT), 0);</p>\n\n<p>gpsButton = (Button) this.findViewById(R.id.gps); <br />\n messageButton = (Button) this.findViewById(R.id.message);</p>\n\n<p>// The important thing is to set the onclicklistner event with in the setOnClickListener <br />\n gpsButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>lats.setText(lat);</p>\n\n<p>lons.setText(lon);</p>\n\n<p>message = lat + ” ” + lon; <br />\n Log.d(“message”, message);</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>}});</p>\n\n<p>messageButton.setOnClickListener(new OnClickListener() { <br />\n public void onClick(View v) {</p>\n\n<p>Log.d(“view”, “hit”);</p>\n\n<p>SmsManager sms = SmsManager.getDefault(); <br />\n // send the message, passing in the pending intent, sentPI <br />\n sms.sendTextMessage(“phonenumber”, null, message, sentPI, null);</p>\n\n<p>registerReceiver(br, new IntentFilter(SENT));</p>\n\n<p>}});</p>\n\n<p>// this broadcastreceiver when sent a receive code sends back a specific code which you then display</p>\n\n<p>br = new BroadcastReceiver(){ <br />\n @Override <br />\n public void onReceive(Context ctx, Intent intent) { <br />\n switch (getResultCode()) <br />\n { <br />\n case Activity.RESULT<em>OK: <br />\n Toast.makeText(getBaseContext(), “SMS sent”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>GENERIC<em>FAILURE: <br />\n Toast.makeText(getBaseContext(), “SMS: Generic failure”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NO<em>SERVICE: <br />\n Toast.makeText(getBaseContext(), “SMS: No service”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>NULL<em>PDU: <br />\n Toast.makeText(getBaseContext(), “SMS: Null PDU”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n case SmsManager.RESULT<em>ERROR</em>RADIO<em>OFF: <br />\n Toast.makeText(getBaseContext(), “SMS: Radio off”, <br />\n Toast.LENGTH</em>SHORT).show(); <br />\n break; <br />\n }</p>\n\n<p>unregisterReceiver(br); <br />\n }</p>\n\n<p>};</p>\n\n<p>} <br />\n public void onPause(){</p>\n\n<p>super.onPause(); <br />\n finish();</p>\n\n<p>} <br />\n // onPause <br />\n //super onpause <br />\n // run finish there</p>\n\n<p>@Override <br />\n public void onLocationChanged(Location arg0) { <br />\n lat = String.valueOf(arg0.getLatitude()); <br />\n lon = String.valueOf(arg0.getLongitude());</p>\n\n<p>Log.d(“GPS”, “location changed: lat=” + lat + “, lon=” + lon); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderDisabled(String arg0) { <br />\n Log.d(“GPS”, “provider disabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onProviderEnabled(String arg0) { <br />\n Log.d(“GPS”, “provider enabled ” + arg0); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void onStatusChanged(String arg0, int arg1, Bundle arg2) { <br />\n Log.d(“GPS”, “status changed to ” + arg0 + ” [\" + arg1 + \"]“); <br />\n Log.d(“hello”, “stff”);</p>\n\n<p>}</p>\n\n<p>public void setGPS(String theText) <br />\n {</p>\n\n<p>}</p>\n\n<p>@Override <br />\n public void onClick(View v) { <br />\n // TODO Auto-generated method stub</p>\n\n<p>}</p>\n\n<p>}</p>\n\n<p>[/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1288707165000,"created_by":1,"updated_at":1396135801000,"updated_by":1,"published_at":1288707165000,"published_by":1},{"id":295,"uuid":"a919c40b-bc60-433b-8da8-d8a0e4c67bed","title":"Openframeworks to work with visual studio express 2010 C++","slug":"openframeworks-to-work-with-visual-studio-express-2010-c-3","markdown":"\nGetting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.\n\nI found this link very useful in helping me build a project\n\n[http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899](http://www.openframeworks.cc/forum/viewtopic.php?f=2&t=3899)\n\nSteps c, d, and e I found to be the most important.\n\nOnce you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.\n\nOne of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.\n\n\n","html":"<p>Getting openframeworks to work in windows 7 was not tooo bad. Once you d/l visual c++ studio express 2010 and openframeworks you are ready to go. So one when you open studio express, open a project, right click on it and go to properties.</p>\n\n<p>I found this link very useful in helping me build a project</p>\n\n<p><a href=\"http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899\">http://www.openframeworks.cc/forum/viewtopic.php?f=2&amp;t=3899</a></p>\n\n<p>Steps c, d, and e I found to be the most important.</p>\n\n<p>Once you get that done, I went ahead and built the project. I had no errors. I found the empty project the best one to build. The build process takes a bit so be patient.</p>\n\n<p>One of the things with visual studio is that once you build I expected to see the sketch just pop up. That did not happen. If you look at the top tool bar in visual studio there is a green arrow button. It says start debugging. Click on it to start the sketch.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295285759000,"created_by":1,"updated_at":1395799348000,"updated_by":1,"published_at":1295285759000,"published_by":1},{"id":296,"uuid":"0378114d-b74a-4cf5-a307-acf6c4b8a35f","title":"Kinect touchtable no go!","slug":"kinect-touchtable-no-go-3","markdown":"\nSo why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.\n\n<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&photo_secret=42e1364d60&photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object>\n\n\n","html":"<p>So why a no go. Well basically the kinect is not really meant for touchscreens. So when we think of touchscreens we think of building like this. This method is called FTIR.</p>\n\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" height=\"226\" width=\"400\"><param name=\"data\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"flashvars\" value=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\"></param><param name=\"bgcolor\" value=\"#000000\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"src\" value=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\"></param><param name=\"allowfullscreen\" value=\"true\"></param><embed allowfullscreen=\"true\" bgcolor=\"#000000\" data=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" flashvars=\"intl_lang=en-us&amp;photo_secret=42e1364d60&amp;photo_id=5364045499\" height=\"226\" src=\"http://www.flickr.com/apps/video/stewart.swf?v=71377\" type=\"application/x-shockwave-flash\" width=\"400\"></embed></object></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1295286514000,"created_by":1,"updated_at":1390233381000,"updated_by":1,"published_at":null,"published_by":1},{"id":297,"uuid":"497c88ff-22ea-4104-b9b4-46270bde4bd7","title":"Thesis proposal","slug":"thesis-proposal-3","markdown":"\n[![](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg \"thesis-explain1\")](http://zevenwolf.com/blog/uploads/thesis-explain1.jpg)\n\nTo create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg \"thesis-explain2\")](http://zevenwolf.com/blog/uploads/thesis-explain2.jpg)\n\nNot just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg \"thesis-explain3\")](http://zevenwolf.com/blog/uploads/thesis-explain3.jpg)Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain4.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg \"thesis-explain4\")](http://zevenwolf.com/blog/uploads/thesis-explain41.jpg)We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain5.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg \"thesis-explain5\")](http://zevenwolf.com/blog/uploads/thesis-explain51.jpg)We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.\n\n[](http://zevenwolf.com/blog/uploads/thesis-explain6.jpg) [![](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg \"thesis-explain6\")](http://zevenwolf.com/blog/uploads/thesis-explain61.jpg)In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.\n\n[![](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg \"thesis-explain7\")](http://zevenwolf.com/blog/uploads/thesis-explain71.jpg)\n\nA designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.\n\n\n","html":"<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain1.jpg\" alt=\"\" title=\"thesis-explain1\" /></a></p>\n\n<p>To create a web application for museums exhibit designers and artists to interface with touch screens from phones and tabletops with arduino and projection</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain2.jpg\" alt=\"\" title=\"thesis-explain2\" /></a></p>\n\n<p>Not just for anyone to use initially. The goal is to give artists and museum exhibit designers a tool to create highly interactive exhibits and art pieces.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain3.jpg\" alt=\"\" title=\"thesis-explain3\" /></a>Artists and exhibit designers would access a control panel where they would setup their interface and interaction. The system will output arduino code all users have to do it build the circuit and comply the code. Hints on how to build circuit and links to tested hardware will also be offered. Once published patrons could access the interface through touchscreens from there phone or by a touchscreen monitor setup at the exhibit.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain4.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain41.jpg\" alt=\"\" title=\"thesis-explain4\" /></a>We are at a museum and we see this stegosaurus. We glance theÂ descriptionÂ and move on. But image if it came to life.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain5.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain51.jpg\" alt=\"\" title=\"thesis-explain5\" /></a>We click on the tail of the stegosaurus and its tail starts moving. Also information about the dinosaur tail is simultaneously shown. Through the tails action we areÂ highlightingÂ theÂ importanceÂ of the tail and showing how the stegosaurus tails move.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain6.jpg\"></a> <a href=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain61.jpg\" alt=\"\" title=\"thesis-explain6\" /></a>In thisÂ scenario, we have to vases. TheÂ placardsÂ tell us time period and maybe a purpose. We have no sense of how they are made or the significance of the figures depicted.</p>\n\n<p><a href=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\"><img src=\"http://zevenwolf.com/blog/uploads/thesis-explain71.jpg\" alt=\"\" title=\"thesis-explain7\" /></a></p>\n\n<p>A designer can create an interface with a slider that allows the museum patron to rotate the vase to reveal information about the people on the vase. We can uncover the story of an ancient artifact.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296091421000,"created_by":1,"updated_at":1396135784000,"updated_by":1,"published_at":1296091421000,"published_by":1},{"id":298,"uuid":"6cdd2105-6f55-4990-b632-04e90d634fc2","title":"Interpretive Exhibits Assignment 1","slug":"interpretive-exhibits-assignment-1-3","markdown":"\nCabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.\n\nThe fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.\n\nOn the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.\n\n**19<sup>th</sup> Century Galleries for Painting and Sculpture MET**\n\nThis gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.\n\n![](http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\")\n\nSome rooms were full of sceneries other full of portraits.\n\n![](http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\")\n\nAs you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.\n\n![](http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\")\n\nRooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.\n\n![](http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\")\n\nThe galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.\n\n![](http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\")\n\nThis gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.\n\n![](http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\")\n\n\n","html":"<p>Cabinets of curiosities laid the foundation for the 2 main types of museum design. The 2 schools of museum design are what I call âdidacticâ and âgalleryâ. Â The didactic and the gallery museums stem from the cabinets laying out and organizing their collections into logical groups. They differ in that gallery museums mostly stayed with Cabinets idea. Didactic museums grew out of worldâs fair mentality. When patrons would visit cabinets, they would draw conclusions on what they were seeing. When the worldâs fairs came around, governments and industry used amusement and explanation to sell themselves. They wanted to show new technologies and national treasures. Didactic museums embraced new technologies, because they have to keep up with changing history and explain it. Their collections grow based on expanding the museums knowledge base.Â  Gallery museums have to keep up with their collection philosophy to stay relevant.Â  At the end of the day itâs how museums contextualize their collections that make them special.</p>\n\n<p>The fundamental differences between gallery and didactic museums lead to the difficulty in designing for both types of museum. You know your collection. In a gallery style museum you organize, make some logical sense, and exhibit. If your audience is not interested in the content, you have an unsuccessful museum. This is where taking from didactic style museums could enhance an audienceâs experience. Not everyone has the Mona Lisa or King Tutâs Tomb. Understanding an artistâs or architects process and context makes the piece more accessible. Though an artistâs job is to connect with an audience, many people do not have the vocabulary to realize why a certain piece is special. Most galleries have small placards explaining pieces, but graphics along with text could go a long way in explaining pieces.Â  Context is key.</p>\n\n<p>On the other side didactic museums can fall into the trap of being overly didactic and too focused on technology.Â  Most science museums and natural history museums can contain similar items. There are many rocks and plenty of fauna to fill up a museum. In the end its how the story is told. In most gallery museums you categorize by date or artist, in didactic museums the contextual flow of an exhibit is important. Though difficult to provide a linear narrative to history in an exhibit, being able to make the viewer reference back to other parts of the exhibit is important. Technology can play a role in filling that gap. Technology can be gimmicky though. People can feel good design, but just because you have a room full of screens it does not make your exhibit good.</p>\n\n<p><strong>19<sup>th</sup> Century Galleries for Painting and Sculpture MET</strong></p>\n\n<p>This gallery is the quintessential art gallery. The art and the collection take center stage. The gallery opens up with a horizontal gallery connected to 3 vertical galleries. The horizontal gallery I felt had three themes, victory and mysticism, leisure, and women. The 3 vertical galleries seem to progress from left to right by time. The beginning of the exhibit showed a lot of photo realistic portraiture and scenery. Â Towards the back and emphasis was made to show the art nouveau movement, by recreating a room, but lacked more art work from the time.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5217/5405118622_8721100e96_m.jpg \"Art N\"\" alt=\"\" /></p>\n\n<p>Some rooms were full of sceneries other full of portraits.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5014/5404513905_08038dfbb8_m.jpg \"Portrait rooms\"\" alt=\"\" /></p>\n\n<p>As you reach the center rooms and right most room, a heavy emphasis on Monet, Van Gogh, and artists like Pissaro are made. The organization the rooms are somewhat strange. Most of the Monet paintings are located in singular rooms, but the Van Gogh paintings are split between 2 rooms and are placed along the same wall.Â Though you can catch similar styles from peaking into rooms and looking, unless you happen to read the right sign, you might miss the history as to why.Â Some rooms are dimly lit to highlight sculpture but paints also placed in the rooms suffer from the low light.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5251/5404514045_b4aebc408c_m.jpg \"Dim light\"\" alt=\"\" /></p>\n\n<p>Rooms all very similar but vary in color. Reds, purples, tans, and whites line the walls. I tried to discern a pattern as to why certain rooms where colored that way but I was not able to figure out if there was.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5134/5405117988_ec3af94d19_m.jpg \"Colors\"\" alt=\"\" /></p>\n\n<p>The galleries definitely showed 19<sup>th</sup> century art. The art housed in the space is amazing.Â  The issues I have with galleries is the following, I want to know more. If I am come to the gallery multiple times a year or even that one time, I would like context to what I am seeing.Â  As I enter a room full or Monetâs I would like to know a general overview at what I am seeing. While the little placards are great, having something that explains the bigger picture would be nice. A good example is Toulouse-Lautrecâs Portrait of Henri Gabriel Ibels. In a sign it says the Ibels was a founder of Nabi brotherhood, which included Bonnard and Vuillard.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5297/5404513423_eacb93b9a5_m.jpg \"Ibels\"\" alt=\"\" /></p>\n\n<p>This gives in-site as to what inspired artists. The center area could used to give general context to rooms and paintings, which will let patrons make more connection with the work.</p>\n\n<p><img src=\"http://farm6.static.flickr.com/5011/5405118164_d26f153d5b_m.jpg \"center area\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296494055000,"created_by":1,"updated_at":1396135777000,"updated_by":1,"published_at":null,"published_by":1},{"id":299,"uuid":"b34fe978-23d7-4ee6-8b2a-983d3626fd7c","title":"Thesis Explanation","slug":"thesis-explanation-3","markdown":"\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.\n\nUnderstanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.\n\nThe philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.\n\nWhat I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.\n\nThe main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:\n\nWhat is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\n\n","html":"<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.</p>\n\n<p>Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive intallation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.</p>\n\n<p>The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.</p>\n\n<p>What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.</p>\n\n<p>The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked:</p>\n\n<p>What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296706855000,"created_by":1,"updated_at":1396135764000,"updated_by":1,"published_at":1296706855000,"published_by":1},{"id":300,"uuid":"6d724b98-23d9-4f67-9acd-2d28fdf0343b","title":"Inspiration","slug":"inspiration-3","markdown":"\nTouchOSC\n\n[http://hexler.net/software/touchosc](http://hexler.net/software/touchosc)\n\nTouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi\n\nPros:\n\n-Could create custom interface\n\n-Works with many languages ie java, Max/MSP\n\n-Standard protocol\n\nCons:\n\n-Have to know how to program\n\n-TouchOSC is platform dependent\n\n-Needs to run on a local network\n\nOpen exhibits\n\n[http://openexhibits.org/](http://openexhibits.org/)\n\nOpen exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.\n\nPro:\n\n-Has integrated support for social media sites like youtube and flickr\n\n-Advanced touchscreen gesture Â capabilities\n\n-open api\n\nCons:\n\n-Flash based\n\n-Does not work with most cellphones\n\n-\n\n-\n\n\n","html":"<p>TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. One device controls the other over wifi</p>\n\n<p>Pros:</p>\n\n<p>-Could create custom interface</p>\n\n<p>-Works with many languages ie java, Max/MSP</p>\n\n<p>-Standard protocol</p>\n\n<p>Cons:</p>\n\n<p>-Have to know how to program</p>\n\n<p>-TouchOSC is platform dependent</p>\n\n<p>-Needs to run on a local network</p>\n\n<p>Open exhibits</p>\n\n<p><a href=\"http://openexhibits.org/\">http://openexhibits.org/</a></p>\n\n<p>Open exhibits is a Adobe Flash based touchscreen interface builder. It uses various modules and web templates to feed dynamic content for the web.</p>\n\n<p>Pro:</p>\n\n<p>-Has integrated support for social media sites like youtube and flickr</p>\n\n<p>-Advanced touchscreen gesture Â capabilities</p>\n\n<p>-open api</p>\n\n<p>Cons:</p>\n\n<p>-Flash based</p>\n\n<p>-Does not work with most cellphones</p>\n\n<p>-</p>\n\n<p>-</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1296707521000,"created_by":1,"updated_at":1396135735000,"updated_by":1,"published_at":1296707521000,"published_by":1},{"id":301,"uuid":"85f0a1ae-dfe5-435b-9ee9-b34c924afa3e","title":"The Experience Economy","slug":"the-experience-economy-3","markdown":"\nI found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.\n\nWhat I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.\n\nIt is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.\n\nBut hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.\n\n\n","html":"<p>I found it interesting that the two of the examples explored as successful forms of the experience economy are now secondary actors in there respective interactive space. The article opens up with LAN party sites. As a gamer, it was true that it gave you a space with a myriad of games and a social interaction that at the time was not possible over the internet. AOL gave the same experience to the mainstream internet user. It gave a myriad of tools to access the internet. These examples show how even though we provide the best service to a community, if you do not reinvent and grow with that community you fall off.</p>\n\n<p>What I found interesting was that both AOL and LAN sites, educated us on how to navigate through their respective space. What is also interesting is that they brought a sense of true community to the internet. As the internet grew, we became extremely active participants in the community. AOL and LANs were a pseudo-passive environment, because they offered the space but we chose to leave when we wanted to. We went from a community where groups of people interacted through the internet to a community of people who simply puts themselves out there to be commented on. We ultimately became more introverted, but this introversion heightens our immersion in the environment. Thus, as designers, we need to harness peoples introversion as a way to bring people through the door.</p>\n\n<p>It is concerning that the web is rapidly combining and iterating the main tenures of the article: education, escapist, and esthetic. They can do it faster and sometimes better then most educational and entertainment spaces. Though it will be hard to recreate the esthetic, the web is making leaps with educational and escapist. From WoW to Google’s new museum walk-through to cellphones, we now have the tools to take experiences with us and make them better. Moreover how museums and even places like Disney stay relevant might end up being the very thing that has taken there place as the premier place for education and entertainment.</p>\n\n<p>But hope is still there. The internet has 2 grand issues: its follow through and transformation. Google’s new museum walk-through will not replace the museum. Why? Because the internet is volatile and Google cannot give you an experience. They present you one. The web cannot make a physical thing real. Paints, sculptures, animals, etc are not perceived by us in a two-dimensional plane. The Disney example is a perfect one. Most of Disney’s content is two-dimensional. Yet, millions have gone to Disney World. People will always visit museums and entertainment. The key is whether we want to stay relevant or stay with the stream.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297101085000,"created_by":1,"updated_at":1396135744000,"updated_by":1,"published_at":null,"published_by":1},{"id":302,"uuid":"dade4c7b-4979-40c1-ab4b-f8a025cc1973","title":"Hall of Human Origins Amnh","slug":"hall-of-human-origins-amnh-3","markdown":"\nThe goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery\n\n[![hallofhumanorigins](http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425864400/ \"hallofhumanorigins by zevenwolf, on Flickr\")\n\nThe exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425186441/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.\n\nAt the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.\n\nBehind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425193583/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThere are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.\n\n[![P1020326](http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425284329/ \"P1020326 by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425794626/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThe one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425792758/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nI never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425200813/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425198079/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\nThis music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.\n\n[![Hall of Human Origins Amnh](http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg)](http://www.flickr.com/photos/zevenrodriguez/5425798918/ \"Hall of Human Origins Amnh by zevenwolf, on Flickr\")\n\n\n","html":"<p>The goal of this exhibit is to show the evolution of humans and the growth of human potential through time. The exhibit has a good flow that takes you through human evolution and its out come. The parts that were most interesting to me are: How we got to where we are? i.e. color sight, sound, etc. and The science of how we know these things. i.e. fossil recovery</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425864400/\" title=\"hallofhumanorigins by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5013/5425864400_1c1652cb78_o.jpg\" alt=\"hallofhumanorigins\" title=\"\" /></a></p>\n\n<p>The exhibit has this sorta laboratory feel to it. I think it it when you come in you have those 2 white glowing walls. I learned a lot about the origins of who we are and what made us how we are. I would have maybe liked this part explored more toward the end in the section that dealt with culture.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425186441/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425186441_67b7f09159.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The use of touchscreens was pretty good in this exhibit but there were three areas that I saw poor use of space or not extremely interesting information.</p>\n\n<p>At the begining of the installation, on glowing wall you have the tree of life section. The area is nicely designed, but the touchscreen was a little confusing. The graphic tried to explain the origins of life. The origin was not clear in the graphic. As you clicked on organisms on the tree, the flow between the screens was not evident at first. Also Compared to the other side, the family tree, which not loaded with information, there was a lot going on information wise in that portion of the exhibit.</p>\n\n<p>Behind the skeletons in the front, the touchscreens are kinda lost there. I think there could have been an opportunity to project something behind the skeletons interacting with the skeletons.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425193583/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425193583_6b148f88b9.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>There are 2 parts that I wish could have been put together. The Pepper’s ghost diorama and the touchscreen about where they found bones could have been intertwined alittle more. I think mostly because having 2 competing touchscreens and then the diorama makes for a bit of sonic confusion. A game element could have been nice for the fossil detective part. Especially cause the diorama has a good flow in the explanation, but I wanted to interact with it more.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425284329/\" title=\"P1020326 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5096/5425284329_58b14360e3.jpg\" alt=\"P1020326\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425794626/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5099/5425794626_f8063e24dc.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>The one game element there was was static and there it could have used a touchscreen. The round table with the bones was a perfect space to do a memory or bone comparison game. The game element was not evident either cause the gray on gray type was hard to read.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425792758/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5014/5425792758_8acd437a41.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>I never understood why this was blocked off, but now I see that to keep the flow and linearity of history in the round space, a physical barrier had to be put. Another barrier that was interesting was the brain part of the exhibit. The round brains case acted like a rotunda throwing toward the classroom area or towards the culture area.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425200813/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5012/5425200813_3abb2e70f8.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425198079/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5135/5425198079_456fe8a617.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>\n\n<p>This music game was really fun and interesting because you are able to experience different instruments from different cultures. I found it was a good touch to keep in the key that the style of music is written in. I liked this area of the exhibit because it explained the how we perceive culture and how we made it.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5425798918/\" title=\"Hall of Human Origins Amnh by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5098/5425798918_0e538b8795.jpg\" alt=\"Hall of Human Origins Amnh\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297106875000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":303,"uuid":"8c3e6f74-d9dd-4f8c-9707-bb086df1e996","title":"Where I am at.....","slug":"where-i-am-at-3","markdown":"\n*Skip to **how it works** if you have read my previous thesis post  \n*  \n Zevensuy Rodriguez\n\nLast semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored.  \n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service.  \n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent.  \n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information.  \n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.\n\nQuestions to be asked:  \n What is your favorite interactive exhibit or art piece you’ve made?\n\nWhat piece you’ve made has had the most sophisticated interaction?\n\nWhat is your least successful interaction in an exhibit and why?\n\nWhen do you use a touchscreen for interaction?\n\nHave you used touchscreens to control physical objects?\n\nHave you considered a phones touch screen as a method for interaction? Ie like a remote control\n\nGiven the chance and ease, would you redesign exhibit interfaces on a regular bases?\n\nIs remote monitoring of an exhibit important to you?\n\nHow it works?  \n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.\n\nInput  \n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.\n\nProcessing  \n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.\n\n In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.\n\nOutput  \n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.\n\nWhy touchscreens?  \n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.\n\n The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.\n\nVocabulary  \n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.\n\n More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.\n\n Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?\n\n Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.\n\nInspiration  \n TouchOSC\n\nhttp://hexler.net/software/touchosc\n\n TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device.  \n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.\n\nOpen Exhibits  \n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.\n\nLemurTron\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron3_Evan_Cairo.jpg\n\nhttp://www.lemurbots.org/PressPhotos/Images/LEMURtron4_Evan_Cairo.jpg\n\n LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely.  \n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.\n\nBibliography\n\nSheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print.  \n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print.  \n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print.  \n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print.  \n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.\n\nNorman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.\n\n3quarksdaily. Web. 10 Feb. 2011. <>. </>\n\n\n","html":"<p>*Skip to <strong>how it works</strong> if you have read my previous thesis post <br />\n* <br />\n Zevensuy Rodriguez</p>\n\n<p>Last semester I embark on creating a interactive art installation controlled by a mobile phone. The main thing I learned from that project was that people are not accustomed to using the phone to control installations. Touchscreens from phones to larger touch surfaces are all over the place. There is an underlying vocabulary(gestures) on how to use touchscreens. Yet, the vocabulary on how touchscreens can successfully work installations has yet to be fully explored. <br />\n Understanding how touchscreens and interactive installations can work effectively is the key. For my thesis, I will lay out the framework for use cases and best practices for touchscreens in interactive installation. I will make the interface builder and establishing the protocol by which to talk to the networked installations. By offering this service, designers could start thinking of how to make exhibits interaction with touchscreens more viable. This will create the dialogue between the users and the institutions that use the service. <br />\n The philosophy of the project is simplicity. I want users to be able to design, monitor, and simplify wiring of the projects. This allows for a quick turn around in the creating, testing, and implementation phase. When patrons use the system, logging user interactions can quantify what works and does not work in interface and the exhibit. By being able to iterate and collect data from projects, we can further the dialogue and ultimately create an exhibit or installation that fully conveys the designers intent. <br />\n What I would like to achieve with my project is be able to let designers tell a story through a user’s interaction with touchscreens and use that input to interact with an exhibit or art piece. For example, by using touch screens from a mobile device we can display information about an exhibit but we can also highlight important objects or parts of objects by letting users control the exhibit. By making interactive exhibits networked objects, we could make them more vibrant, up-to-date, and collect user interaction information. <br />\n The main goal is to let designers create an interface that will control an installation. The user will login to their project on the website. Then they will setup what the interface will control, i.e. motor, light, projection, etc. The program will supply you with the code to interface between the online interface and the micro controller. You will have to put to the circuits together and provide a touchscreen surface to display your interface. The site will offer approved hardware and tutorials as a guide. This is the ultimate goal for the project.</p>\n\n<p>Questions to be asked: <br />\n What is your favorite interactive exhibit or art piece you’ve made?</p>\n\n<p>What piece you’ve made has had the most sophisticated interaction?</p>\n\n<p>What is your least successful interaction in an exhibit and why?</p>\n\n<p>When do you use a touchscreen for interaction?</p>\n\n<p>Have you used touchscreens to control physical objects?</p>\n\n<p>Have you considered a phones touch screen as a method for interaction? Ie like a remote control</p>\n\n<p>Given the chance and ease, would you redesign exhibit interfaces on a regular bases?</p>\n\n<p>Is remote monitoring of an exhibit important to you?</p>\n\n<p>How it works? <br />\n This project uses TCP/IP for communication between the input and output devices. There are 3 layers used project: input (touchscreen or interaction device and the web interface layout), processing(turning the input into output), and output(installation being controlled). All interactions with the system are logged into a database from clicking a button to LED brightness. This allows monitoring and fixing of issues that could arise in an installation. By making individual elements in the system networked object, we have the flexibility of changing interactions and diagnosing issues from a remote distance.</p>\n\n<p>Input <br />\n One of the goals of this project is to simplify the interaction with physical objects. I am not interested in the creation of touchscreens, but in the interface that determines the interaction. The interface builder is a way to prototype and deploy the interaction for an exhibit. When you log on the your project, a general setup is required. Choosing the micro-controller, LEDs, motors, video, or any other software/hardware device will give the program an idea of how to setup the output. Setting up your buttons, sliders, or gestures involve you telling them what they will control. For example, BUTTON1 turns LED1 ON or OFF.</p>\n\n<p>Processing <br />\n Once done with setting up and deploying your interface, we need to transfer your input into output. Every time an interaction is made, a message is sent out to update the database which then is translated into the output. Since this is a web based system, every interaction can be viewed as a click from a mouse. When BUTTON1 is pressed, it hits a web page which tells the database change the LED1 to ON. All this happens on the same page, thus making a smooth interactive experience.</p>\n\n<p>In order to keep a simple yet modular communication we use a RESTian model. The reason to use this model is as the project grows it will make it easy to interface with other internet input and output devices. In our example, BUTTON1 turns LED1 ON or OFF, we said that it hits a web page that changes the database and subsequently turns on the LED. Normally a website would handle this with the query string: www.controllingsite.com/project/input.php?Button1=LED1&amp;LED1=ON. This looks ugly and though legible makes it more difficult to create a standardized approach to access the system. Under a RESTian model the URL would look like this: www.controllingsite.com/project/input/BUTTON1/LED1/ON. This gives us a logical order and a simple pattern to work with. Virtually any internet device can be setup to control the led. This is because the led is linked to this adddress www.controllingsite.com/project/input/BUTTON1/LED1/ON. When you hit this link the LED would turn on.</p>\n\n<p>Output <br />\n As inputs change state or value, they are update on the database. The web application would output an xml or json object. These are standardized formats that can easily be read in by hardware and software. The hardware or software constantly checks these files for changes and ultimately would change the interaction when the interface changes. They provide the blue print for seamless communication between the online interface and the exhibit.</p>\n\n<p>Why touchscreens? <br />\n Touchscreens are displays with a layer capable of transferring touch into a location on the screen. Most touchscreens use either lcd or projector to display content. Touchscreen use either electronic or optical sensors to detect the position of the touch. There are a myriad of different technologies that can be used in touchscreens that range in price, sophistication, and size. This has helped propagate touchscreen virtually in all elements in our life.</p>\n\n<p>The advantage of using touchscreens is the fact that because it is a display surface you can change. Being able to update content easily is crucial to the project. The system will give you a project overview. Designers can study usage patterns and update the user experience based on the overview.</p>\n\n<p>Vocabulary <br />\n It is important to understand what kinds of interactions translate from a touchscreen to a physical object. Prior to the launch of the Iphone, touchscreens were a tool for corporations. Touchscreen interaction was limited to a stylus and simple finger clicks. Museums used touchscreens for basic interactions like clicking. The smartphone and more importantly the Iphone came into the market giving users a new interactive experience. The Iphone introduced to the masses a series of gesture, click and hold, flick, pinch in and out, slide, and rotate. Gestures is not a new concept. Early Palm devices used the stylus to make gestures. The Iphone increase our touchscreen vocabulary. More importantly it transferred us from the stylus to our finger. This makes us more connected to what we are controlling.</p>\n\n<p>More and more gestures are being explored. Due to current web technology, multi-touch on the web is in its early stages. Understanding simple actions like click and slide effectively are important before we can start talking about multi-touch gestures.</p>\n\n<p>Movies from Star Trek to Minority Report gave us ideas of possible large touchscreen interactions. The Iphone has sold millions of devices but we do not all have a Microsoft Surface in our apartments or offices. The expense of a large touchscreen is rather large. Luckily we live in an age where there is a strong DIY movement. Open hardware/software groups like the NUI Group have create resources and programs that have brought the price point of a large touchscreen from $10,000 to under a $1000. The question is how do we use touchscreens properly?</p>\n\n<p>Understanding how and when to use a large touchscreen or mobile device in an installation is a difficult. Large touchscreens can add a community environment to an exhibit. People can gather around and share, collaborate, and learn from each other. Mobile phones can add a community to your exhibit. People are more introverted on their phones, but there is a possibility to add an infinite number of users with a given piece. Because these are soft interfaces on the web, the possibility arises to tailor and experience from a large touchscreen to a mobile phone.</p>\n\n<p>Inspiration <br />\n TouchOSC</p>\n\n<p><a href=\"http://hexler.net/software/touchosc\">http://hexler.net/software/touchosc</a></p>\n\n<p>TouchOSC is a remote control application that uses open sound control messages to control media. It runs on mobile devices like Iphone, Ipad, and Android devices. One device controls the other over a local wifi network. Open Sound Control or OSC is a standardized communication protocol. It takes a RESTian approach to interface with different programing languages and software. The model for the message looks like this: /servo/position 512. The program on the micro-controller or software can breakdown the message and your code can follow the instruction. Because touchOSC’s interface only outputs these osc messages, it does not have to deal with receiving the message. This puts the onus on the user to interpret the message in their program. TouchOSC offers an interface builder. The builder has a set number of interface modules and uses a specific esthetic. With the editor you can design your layout and load it on your device. <br />\n TouchOSC is meant to run on a mobile device and control software or hardware. Its use case is for controlling music software. So it is intended as a one to one communication. A local network is used to communicate from your mobile device to a computer. This requires additional setup which makes the end user experience a bit clunky.</p>\n\n<p>Open Exhibits <br />\n Open exhibits is a Adobe Flash based touchscreen interface builder. The main audience is in the educational space, like museums and educational institutions. It uses and open API and a series of modules that help connect to social media sites and sites like youtube and flickr. This could be interesting because institutions can take advantage of there presence on these networks. They would be able to reuse content that has already be produced in there exhibit. It has capability of understanding gestures which makes it able to mimic similar interactions we are used to with our phones. Because it is flash based, you need to know flash to program it. This also makes it difficult to deploy in the mobile space. Because it is meant to interface with existing web content it is not suited to interface with hardware.</p>\n\n<p>LemurTron</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron3\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron3</a><em>Evan</em>Cairo.jpg</p>\n\n<p><a href=\"http://www.lemurbots.org/PressPhotos/Images/LEMURtron4\">http://www.lemurbots.org/PressPhotos/Images/LEMURtron4</a><em>Evan</em>Cairo.jpg</p>\n\n<p>LemurTron is an robotic instrument orchestra controlled by physical user input. A series of robotic instruments are placed around the room. In the center is a projected interface that changes. A camera placed on top captures movement of the users on the interface. As the interface changes, the interaction with the instrument changes. What is interesting about this project is that the hardware stays the same, but the interactions can change. This makes for the user experience to always be fresh. By making the interfaces web based, more interfaces could be added and tested remotely. <br />\n At a talk that Eric Singer from the Lemur Group gave, he mentioned that diagnosing issues was a crucial part for this project since it was a traveling exhibit. He was able to monitor it by placing a webcam in the room and looking to see if the robots were working correctly. By making the robot networked object, one would be able to control the robots remotely. If sensors were added to the robot, you could check on there operation remotely with out a webcam setup.</p>\n\n<p>Bibliography</p>\n\n<p>Sheridan, Thomas B. Telerobotics, Automation, and Human Supervisory Control. Cambridge, MA: MIT, 1992. Print. <br />\n Kuniavsky, Mike.Â Smart Things: Ubiquitous Computing User Experience Design. Amsterdam: Morgan Kaufmann, 2010. Print. <br />\n Geller, Matthew.Â From receiver to remote control: the TV set. New York: The New Museum of Contemporary Art, 1990. Print. <br />\n Goldberg, Ken, and Roland Siegwart.Â Beyond Webcams: an Introduction to Online Robots. Cambridge, MA: MIT, 2002. Print. <br />\n Kintzig, Claude.Â Communicating with Smart Objects. London: Kogan Page Science, 2003. Print.</p>\n\n<p>Norman, Donald A.Â The Design of Everyday Things. New York: Basic, 2002. Print.</p>\n\n<p>3quarksdaily. Web. 10 Feb. 2011. &lt;>. </></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297342881000,"created_by":1,"updated_at":1396135753000,"updated_by":1,"published_at":1297342881000,"published_by":1},{"id":304,"uuid":"f3e15804-bb42-44f2-8f99-6cf4cf7a8ed9","title":"Traveling Exhibits","slug":"traveling-exhibits-3","markdown":"\n In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.\n\n The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.\n\n One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.\n\n\n","html":"<p>In the article, the author mentions traveling exhibits giving museums a possibility to refresh there space. Also mentioned is the fact that museums more and more are lending themselves to this sort of work. I think this might be vital to a museums strive to stay relevant. It helps strengthen collections of museums and provide the possibility of collaborating with other institutions help forge a stronger collection and ultimately a better exhibits.</p>\n\n<p>The traveling exhibit besides attracting people to visit; it helps gauge community interest in subjects. I can also see it helping museums decide on what areas to invest more in. The traveling exhibits can inform museums about new interactions and styles that can help redesigning of there permanent exhibits. With larger museums, they have the opportunity of aiding smaller museums and being able to create a community of knowledge in areas that might not have the access that a larger museum might. Being able to show multiple collections and create stronger exhibits is great for museums because it shows patrons the very best. This helps museums retain a level of quality not possible on there own.</p>\n\n<p>One of the interesting thing about the traveling exhibits is the design challenge they pose. Being able to make modular exhibits that retain logical order is an interesting challenge. When we talk about light design and construction having to decide what to sacrifice becomes a tough choice. What we give up in terms of functionality is a topic of much interest to me. As exhibits become more interactive, how we can automate and make this setup easier to run could lead to some changes on the hardware end of things. If this trend becomes more common place how spaces and the exhibit can transform to accommodate the changing layouts and people could lead to interesting studies on how these traveling exhibits are experienced.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297645648000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":305,"uuid":"ad9856c9-5529-4f43-94ce-c4cd612a0114","title":"Forbidden City: MET","slug":"forbidden-city-met-3","markdown":"\n[![forbiddencity](http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg)](http://www.flickr.com/photos/zevenrodriguez/5445260425/ \"forbiddencity by zevenwolf, on Flickr\")\n\nI felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5445260425/\" title=\"forbiddencity by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5138/5445260425_367fb0bc71_b.jpg\" alt=\"forbiddencity\" title=\"\" /></a></p>\n\n<p>I felt the Forbidden City exhibit at the MET had an interesting flow. I think the first room and the projection were the mostÂ successful. I think I learned the most from these areas. They set the stage for what made the space interesting. The emperor was highly influenced byÂ EuropeanÂ art styles of perspective and visual trickery. This was notÂ apparent if you did not read theÂ placardsÂ but was emphasized in the video projection.Â The 3d models where really nice to see the overview of the space and how it would have looked. Image was used sparingly but I thought that its use could have been pushed further. In some instances like the left hand graphic, image was used in the background but the vases on the raised case made the presentation kind of awkward.Â This area of furnishing that communicated with the patio was nice because it brought in the natural light into the space. Images could haveÂ adornedÂ some of the inner galleries where the furnishing is to give a sense of placement. Some of the placement was kind strange. There was an actual door next to a doorway in the forbidden city next to a throne. In the calligraphy portion the middle case talked about the restoration. This was interesting but seemed out of place when you had a room the contained moreÂ calligraphyÂ tools. Over all the lighting was very nice. There was 2 lighting schemes. One was the natural light coming from the patio. The other was laid out similar to 19th century galleries, but with more visible spot lights. I felt that the space should haveÂ accommodatedÂ for hiding the spot light tracks. The spot lights were used very well highlighting table posts and other artifacts to really show there detail.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1297708099000,"created_by":1,"updated_at":1396135305000,"updated_by":1,"published_at":null,"published_by":1},{"id":306,"uuid":"12acb8f3-9d09-455a-a9a3-a478bb8ed74f","title":"Prototype and Production","slug":"prototype-and-production-3","markdown":"\nMy thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â [![](http://oddgui.com/content/images/2011/02/inputtooutput.jpg \"inputtooutput\")](http://oddgui.com/content/images/2011/02/inputtooutput.jpg)In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.\n\n[![](http://oddgui.com/content/images/2011/02/users.jpg \"users\")](http://oddgui.com/content/images/2011/02/users.jpg)\n\nOnce users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.\n\nAreas of focus(What will be built out for thesis):\n\n- Everything except the general diagnostics\n\n[![](http://oddgui.com/content/images/2011/02/usersinter.jpg \"usersinter\")](http://oddgui.com/content/images/2011/02/usersinter.jpg)\n\nOnce the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.\n\nAreas of focus:\n\n- Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)\n\n[![](http://oddgui.com/content/images/2011/02/design.jpg \"design\")](http://oddgui.com/content/images/2011/02/design.jpg)The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.\n\nArea of focus:\n\n- The 2 loads I will focus on are steppers and LEDs\n- In the interaction type will be Gesture(being swipes, etc) Â and Button\n\n[![](http://oddgui.com/content/images/2011/02/setup.jpg \"setup\")](http://oddgui.com/content/images/2011/02/setup.jpg)\n\nThe output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.\n\nArea of focus:\n\n- This is a crucial step that needs to be done\n\n[![](http://oddgui.com/content/images/2011/02/output.jpg \"output\")](http://oddgui.com/content/images/2011/02/output.jpg)\n\nBuild for thesis:\n\n**Online Software (This should happen in the next 2 weeks)**\n\n- 2 displays use cases using gestures\n- User Main area\n- Stepper Form\n- Led Form\n- Gesture Form\n- Button Form\n- Input Interpreter\n- Output Interpreter\n\n**Hardware (Rest of the Semester)**\n\n- Software to interpret information coming from online\n- Create 2 turntables\n- Collect information to put in the display cases ie Vase and Elements or Minerals\n\nThese are the 2 use cases:\n\nOne is a rotating vase that updates content based on how the user rotates it .\n\n[![](http://oddgui.com/content/images/2011/02/vase.jpg \"vase\")](http://oddgui.com/content/images/2011/02/vase.jpg)\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">[![](http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg \"microscope-exhibit\")](http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg)  \n</span></span></span>\n\n\n","html":"<p>My thesis system is based on a simple structure. You have an input, it is interpreted and an output is produced. This system is a web application and uses javascript and ruby to create the interaction. Â For example, when a button or gesture is activated on a touchscreen, it turns on a light. This is how the system would interpret that: When the button is pressed, a message is fired to update the database, program that connect the microcontroller to the internet, is always checking the database for any change in the database. Since we pressed the button the state was changed. The light turns on.Â <a href=\"http://oddgui.com/content/images/2011/02/inputtooutput.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/inputtooutput.jpg\" alt=\"\" title=\"inputtooutput\" /></a>In order for this to happen, the user needs to complete a series of steps before this magic could happen. Users need to design, setup, and display their project. There are 3 tiers of interaction with system. There are a series of users that work with the system. The users have projects associated to them. Those projects have 4 points of interaction. The display, which is was the audience sees. The design, which is the place where the user creates the interface. The setup, which is the area that users setup the translation from gesture to hardware control. And finally, the output, which is what the microcontroller references to know what it should be doing, i.e. turning on a light.</p>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/users.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/users.jpg\" alt=\"\" title=\"users\" /></a></p>\n\n<p>Once users login, they will be taken to there projects area. Here are displayed all of the current projects. Users have quick access to view the 4 main areas: display, design, setup, and output. If the click on the actual project, an overview of the project would appear. There is also an deploy option, which sets the project live and ready for general consumption.</p>\n\n<p>Areas of focus(What will be built out for thesis):</p>\n\n<ul>\n<li>Everything except the general diagnostics</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/usersinter.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/usersinter.jpg\" alt=\"\" title=\"usersinter\" /></a></p>\n\n<p>Once the user creates a project they now have the option to start designing or setting up the project. In this case we’ll start with design. In this area users will be able to upload code already written or add graphical elements. When a graphical element is placed on the screen the user can drag it around to place it or delete it if not being used.</p>\n\n<p>Areas of focus:</p>\n\n<ul>\n<li>Upload code (due to timeÂ constrains building an entire layout area is notÂ feasible)</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/design.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/design.jpg\" alt=\"\" title=\"design\" /></a>The setup section ties in the audiences interface with the output control. Here the user will add output components and the characteristics the control them. In this case we have a stepper. The stepper has certain attributes, like what pins its connected to, how many steps it has etc. The will also add the input controls which tells the system this button makes this stepper move 20 steps.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>The 2 loads I will focus on are steppers and LEDs</li>\n<li>In the interaction type will be Gesture(being swipes, etc) Â and Button</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/setup.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/setup.jpg\" alt=\"\" title=\"setup\" /></a></p>\n\n<p>The output area will actually be just so the program and find out its instruction(json). Either software can interpret the json or the actual networked hardware can read it. The user will be able to view this code to be able to create a better stream line interfacing with the microcontroller.</p>\n\n<p>Area of focus:</p>\n\n<ul>\n<li>This is a crucial step that needs to be done</li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/output.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/output.jpg\" alt=\"\" title=\"output\" /></a></p>\n\n<p>Build for thesis:</p>\n\n<p><strong>Online Software (This should happen in the next 2 weeks)</strong></p>\n\n<ul>\n<li>2 displays use cases using gestures</li>\n<li>User Main area</li>\n<li>Stepper Form</li>\n<li>Led Form</li>\n<li>Gesture Form</li>\n<li>Button Form</li>\n<li>Input Interpreter</li>\n<li>Output Interpreter</li>\n</ul>\n\n<p><strong>Hardware (Rest of the Semester)</strong></p>\n\n<ul>\n<li>Software to interpret information coming from online</li>\n<li>Create 2 turntables</li>\n<li>Collect information to put in the display cases ie Vase and Elements or Minerals</li>\n</ul>\n\n<p>These are the 2 use cases:</p>\n\n<p>One is a rotating vase that updates content based on how the user rotates it .</p>\n\n<p><a href=\"http://oddgui.com/content/images/2011/02/vase.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/vase.jpg\" alt=\"\" title=\"vase\" /></a></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\">Microfind is an exhibit that that focuses on kids exploring common items under a microscope. The exhibit has 2 modes: a learning and exploration and a memory game. Under the learning and exploration kids can click on cells on the interface to move a microscope over the object selected. Interesting information about the objects and a live view the microscope is displayed on the interface. The second mode is a memory game where kids will have to match an image of an object under microscope. The interface will change into a touchpad which will let the kids move the microscope in any direction. Once they match the picture to the live view, it will advance to the next image.</span></span></span></p>\n\n<p><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"font-size: small;\"><a href=\"http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg\"><img src=\"http://oddgui.com/content/images/2011/02/microscope-exhibit.jpg\" alt=\"\" title=\"microscope-exhibit\" /></a> <br />\n</span></span></span></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298565772000,"created_by":1,"updated_at":1396135530000,"updated_by":1,"published_at":1298565772000,"published_by":1},{"id":307,"uuid":"5dc1ca86-e509-4147-806b-627f9aa2fbda","title":"Moma: Abstract Expressionists","slug":"moma-abstract-expressionists-3","markdown":"\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486203504/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485609505/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.\n\n[![abstractexpressionists](http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485650855/ \"abstractexpressionists by zevenwolf, on Flickr\")\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg)](http://www.flickr.com/photos/zevenrodriguez/5486205936/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nThe reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.\n\n[![Moma: Abstract Expressionists](http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg)](http://www.flickr.com/photos/zevenrodriguez/5485612137/ \"Moma: Abstract Expressionists by zevenwolf, on Flickr\")\n\nOne of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.\n\n\n","html":"<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486203504/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5019/5486203504_73c001b6af.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485609505/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5093/5485609505_772e2deb7f.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The MOMA is redesigning the entrances of there exhibits. The Abstract Expressionist exhibit is a clear example of the new visual style they are going for. They are using large type with high contrasting colors. In this case they flooded 2 walls with this design. I also found it interesting that the automatic doors add this barrier which helps you read the sign when you first get in.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485650855/\" title=\"abstractexpressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5134/5485650855_78f251da0c.jpg\" alt=\"abstractexpressionists\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5486205936/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5213/5486205936_5dcb64fcea.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>The reorganization of the abstract expressionists had a good flow. The scale of the art and the sparsity makes it overwhelming enough. You still get the wow factor. The designers used the rooms to juxtapose the artists. Rothko and Newman are used as the calm rooms to give viewers a break from the Pollock paintings. One of the main breaks in the flow where the Robert Frank Photos by the staircase and the rest of the photography.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5485612137/\" title=\"Moma: Abstract Expressionists by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5011/5485612137_eeb969155e.jpg\" alt=\"Moma: Abstract Expressionists\" title=\"\" /></a></p>\n\n<p>One of the biggest issues I had with the exhibit was the lighting. The lighting felt spotty. I made a weird gradation between the work. It made the art photograph ok, but the light was not enough to light the room evenly.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1298913273000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":308,"uuid":"28c9e113-c942-49be-833a-88b451c83da8","title":"Commercial Gallery","slug":"commercial-gallery-3","markdown":"\nI went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.\n\n[![P1020530](http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547681740/ \"P1020530 by zevenwolf, on Flickr\")\n\nThe Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.\n\n[![P1020532](http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg)](http://www.flickr.com/photos/zevenrodriguez/5547682142/ \"P1020532 by zevenwolf, on Flickr\")\n\nThe main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.\n\n![](http://arrestedmotion.com/content/images/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\")\n\n\n","html":"<p>I went to 2 galleries in the SoHo area. The first gallery I went to was called the Morrison Hotel. This was a rock and roll photography gallery. It was a very relaxedÂ environment.Â It mostly focused on 60s and 70s photographs. It had all of the main players, Robert Plant, Hendrix, Jerry Garcia, The Stones, etc. It was a small square space with typical flood lighting. Most of the work was environmental black and white portraits with very simple frames. All of the prints are numbered and most where high numbered prints.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547681740/\" title=\"P1020530 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5054/5547681740_ac7be8f538.jpg\" alt=\"P1020530\" title=\"\" /></a></p>\n\n<p>The Opera Gallery was the complete opposite. It was a modern art gallery. The top floor was used to show off a specific artist, while the downstairs was more of a general artist space. When you entered the gallery there was a small alcove on the left with a piece which wouldÂ immediatelyÂ draw your attention. The rest of the gallery went straight back and ended with a 2 small alcoves at the end on the left and right. The downstairs was a big room with a small partition which divided it into 2 spaces. The lighting was flood lighting which was spotty.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/5547682142/\" title=\"P1020532 by zevenwolf, on Flickr\"><img src=\"http://farm6.static.flickr.com/5095/5547682142_3fc65552d0.jpg\" alt=\"P1020532\" title=\"\" /></a></p>\n\n<p>The main artist exhibiting was sas + colin. Who focused on these large fiberglass masks.</p>\n\n<p><img src=\"http://arrestedmotion.com/content/images/2011/03/SAS-Colin-Christian-Opera-AM-29.jpg \"sas+colin\"\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1300735279000,"created_by":1,"updated_at":1396135497000,"updated_by":1,"published_at":null,"published_by":1},{"id":309,"uuid":"40e7ead5-2d4c-4f42-9f67-4ba772dec77a","title":"Adafruit Stepper Gear","slug":"adafruit-stepper-gear-3","markdown":"\nThis Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:\n\nNumber of Teeth: 10\n\nCircular Pitch: 6.4\n\nPressure angle: 10\n\n\n","html":"<p>This Adafruit Stepper Gear has a star shaped post which make is difficult to use in a gear. In inkscape you can go to Extensions > Render > Gear and use these settings to create the star shaped post:</p>\n\n<p>Number of Teeth: 10</p>\n\n<p>Circular Pitch: 6.4</p>\n\n<p>Pressure angle: 10</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1302124038000,"created_by":1,"updated_at":1396135622000,"updated_by":1,"published_at":1302124038000,"published_by":1},{"id":310,"uuid":"f365fd0d-44d9-4270-805d-590ef23a5e89","title":"Sparkfun OpAmp Breakout  LMV358","slug":"sparkfun-opamp-breakout-lmv358-3","markdown":"\nThe LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.\n\n[http://www.sparkfun.com/products/9816](http://www.sparkfun.com/products/9816)\n\n[![Sparkfun OpAmp Breakout LMV358](http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg)](http://www.flickr.com/photos/zevenrodriguez/6258550298/ \"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\")\n\n\n","html":"<p>The LMV358/LMV324 are low voltage (2.7â5.5V) versions of the dual and quad op amps, LM358/LMV324, which currently operate at 5â30V. If you need to use a piezo as an analog sensor into the arduino, this is the chip and breakout board to use. Most OpAmp chips operate by looking at 2 voltages and amplifying the difference between them. Â  The chip has a pot that lets you dial in the amplitude of that difference. One thing I noticed is that when I hit the piezo you get negative values. This can be fixed by using an absolute value function. This happens because in order to contain huge spikes in the voltage of a piezo(+30v), the breakout board uses a voltageÂ dividerÂ which manages that voltage and sets the output of the OpAmp at 2.5 volts. Tom and I used anÂ oscilloscopeÂ to verify this. This is important because the when you hit the piezo it spikes to +5 and to 0. This makes sure that we do not send too much positive voltage to the arduino and negative voltage which would fry it.</p>\n\n<p><a href=\"http://www.sparkfun.com/products/9816\">http://www.sparkfun.com/products/9816</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6258550298/\" title=\"Sparkfun OpAmp Breakout LMV358 by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6234/6258550298_af86510473.jpg\" alt=\"Sparkfun OpAmp Breakout LMV358\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1318967797000,"created_by":1,"updated_at":1396135612000,"updated_by":1,"published_at":1318967797000,"published_by":1},{"id":311,"uuid":"5e4a4fbb-8fcf-4f41-ae76-f911c952c0d9","title":"ChronoDot and Arduino 1.0","slug":"chronodot-and-arduino-1-0-3","markdown":"\nRecently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;\n\nThe code can be found here [https://github.com/adafruit/RTClib](https://github.com/adafruit/RTClib)\n\n[![ChronoDot and Arduino](http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347082745/ \"ChronoDot and Arduino by zevenwolf, on Flickr\")\n\nThe red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.\n\n\n","html":"<p>Recently I updated LadyAda’s RTC Library for Arduino 1.0 and older versions. In arduino 1.0 the wire library changed. It is now wire.read and wire.write. I also found that when you do use the write(0), Arduino would interpret the 0 as an integer. The new wire library does not. Because of this I had to explicitly say int i = 0;</p>\n\n<p>The code can be found here <a href=\"https://github.com/adafruit/RTClib\">https://github.com/adafruit/RTClib</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347082745/\" title=\"ChronoDot and Arduino by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6221/6347082745_30f8665268.jpg\" alt=\"ChronoDot and Arduino\" title=\"\" /></a></p>\n\n<p>The red wire power goes to 3.3v. Black goes to ground. SDA (Data), the green wire, goes to Analog Pin 4. SCL (Clock), the yellow wire, goes to Analog Pin 5.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321371914000,"created_by":1,"updated_at":1396135601000,"updated_by":1,"published_at":1321371914000,"published_by":1},{"id":312,"uuid":"fb3fd549-adea-4741-94ea-f93dda523c74","title":"8 minute PCB Test","slug":"8-minute-pcb-test-3","markdown":"\nToday I am testing out the [8 minute PCB kit from PulsarFX](http://www.pcbfx.com/)\n\nI am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.\n\n[![PCB Test](http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg)](http://www.flickr.com/photos/zevenrodriguez/6347135881/ \"PCB Test by zevenwolf, on Flickr\")\n\n\n","html":"<p>Today I am testing out the <a href=\"http://www.pcbfx.com/\">8 minute PCB kit from PulsarFX</a></p>\n\n<p>I am starting out with this design. The 7 will be white and the lines that vary from 1pt to 10pt will be etched in copper.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6347135881/\" title=\"PCB Test by zevenwolf, on Flickr\"><img src=\"http://farm7.static.flickr.com/6092/6347135881_b9f7e016ef_s.jpg\" alt=\"PCB Test\" title=\"\" /></a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1321383642000,"created_by":1,"updated_at":1396135304000,"updated_by":1,"published_at":null,"published_by":1},{"id":313,"uuid":"02d4a8c9-1073-4ee0-803a-7757b879e616","title":"Working with Rotary Encoders","slug":"working-with-rotary-encoders-3","markdown":"\nA rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on [Paul Stoffregen’s Encoder library and explanations](http://www.pjrc.com/teensy/td_libs_Encoder.html).\n\n[![Rotary Encoder](http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6835975655/ \"Rotary Encoder by zevenwolf, on Flickr\")\n\n[![encoder](http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg)](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\nInside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png)\n\nPin 1 == Low & Pin 2 == Low ==> Position 1\n\n![Rotary Encoder](http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png)\n\nPin 1 == High & Pin 2 == Low ==> Position 2. Â We know that we have moved left.\n\nThe arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library [http://www.pjrc.com/teensy/td_libs_Encoder.html](http://www.pjrc.com/teensy/td_libs_Encoder.html \"Encoder Library\"). I used the basic code in the library example.\n\n**Arduino**\n\n[cc lang=\"c\"]  \n /* Encoder Library – Basic Example\n\n* http://www.pjrc.com/teensy/td_libs_Encoder.html\n\nThis example code is in the public domain.  \n */  \n #include <Encoder.h>  \n // Change these two numbers to the pins connected to your encoder.  \n // Â  Best Performance: both pins have interrupt capability  \n // Â  Good Performance: only the first pin has interrupt capability  \n // Â  Low Performance: Â neither pin has interrupt capability  \n Encoder myEnc(5, 6);  \n // Â  avoid using pins with LEDs attached  \n void setup() {  \n Serial.begin(9600);  \n Serial.println(“Basic Encoder Test:”);  \n }  \n long oldPosition Â = -999;  \n void loop() {  \n long newPosition = myEnc.read();  \n if (newPosition != oldPosition) {  \n oldPosition = newPosition;  \n Serial.println(newPosition);  \n }  \n }  \n [/cc]  \n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.\n\n[  \n](http://www.flickr.com/photos/zevenrodriguez/6870530335/ \"encoder by zevenwolf, on Flickr\")\n\n[![encoder serial monitor](http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg)](http://www.flickr.com/photos/zevenrodriguez/6871360321/ \"encoder serial monitor by zevenwolf, on Flickr\")\n\n**Advanced Topic: Inverse Logic and Arduino Pull-up**\n\nThe Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.\n\n[![pullupresistor](http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg)](http://www.flickr.com/photos/zevenrodriguez/6836949291/ \"pullupresistor by zevenwolf, on Flickr\")\n\n*Note: This library can use the [arduinoÂ interrupt](http://arduino.cc/playground/Code/Interrupts) pins for better performance.*\n\n\n","html":"<p>A rotary encoder is a digital rotary sensor. It has the capability of rotating 360 degrees and can tell you direction. This tutorial is based on <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\">Paul Stoffregen’s Encoder library and explanations</a>.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6835975655/\" title=\"Rotary Encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7011/6835975655_208d31ab2a.jpg\" alt=\"Rotary Encoder\" title=\"\" /></a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7050/6870530335_732d52a5e9.jpg\" alt=\"encoder\" title=\"\" /></a></p>\n\n<p>Inside of a rotary encoder are 2 contacts that are read by the arduino and the center contact grounds the encoder. The rotary encoder has a built in pattern that helps determine the direction you are spinning. The rotary encoder isÂ essentiallyÂ 2 switches. When Pin 1 goes high you are moving left. When Pin 2 goes high you are going right.</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos1.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 <mark> Low &amp; Pin 2 </mark> Low <mark>> Position 1</p>\n\n<p><img src=\"http://www.pjrc.com/teensy/td_libs_Encoder_pos2.png\" alt=\"Rotary Encoder\" /></p>\n\n<p>Pin 1 </mark> High &amp; Pin 2 <mark> Low </mark>> Position 2. Â We know that we have moved left.</p>\n\n<p>The arduino pins read the Â HIGH and LOW of the pins to determine the direction. To simplify this process we are using this library <a href=\"http://www.pjrc.com/teensy/td_libs_Encoder.html\" title=\"Encoder Library\">http://www.pjrc.com/teensy/td<em>libs</em>Encoder.html</a>. I used the basic code in the library example.</p>\n\n<p><strong>Arduino</strong></p>\n\n<p>[cc lang=\"c\"] <br />\n /* Encoder Library – Basic Example</p>\n\n<ul>\n<li><a href=\"http://www.pjrc.com/teensy/td\">http://www.pjrc.com/teensy/td</a><em>libs</em>Encoder.html</li>\n</ul>\n\n<p>This example code is in the public domain. <br />\n */ <br />\n #include <Encoder.h> <br />\n // Change these two numbers to the pins connected to your encoder. <br />\n // Â  Best Performance: both pins have interrupt capability <br />\n // Â  Good Performance: only the first pin has interrupt capability <br />\n // Â  Low Performance: Â neither pin has interrupt capability <br />\n Encoder myEnc(5, 6); <br />\n // Â  avoid using pins with LEDs attached <br />\n void setup() { <br />\n Serial.begin(9600); <br />\n Serial.println(“Basic Encoder Test:”); <br />\n } <br />\n long oldPosition Â = -999; <br />\n void loop() { <br />\n long newPosition = myEnc.read(); <br />\n if (newPosition != oldPosition) { <br />\n oldPosition = newPosition; <br />\n Serial.println(newPosition); <br />\n } <br />\n } <br />\n [/cc] <br />\n As you can see above Pin 5 and Pin 6 are the pins the arduino is going to read in order to determine which pin is high or which pin is low.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6870530335/\" title=\"encoder by zevenwolf, on Flickr\"> <br />\n</a></p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6871360321/\" title=\"encoder serial monitor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7051/6871360321_3fecd7c33a.jpg\" alt=\"encoder serial monitor\" title=\"\" /></a></p>\n\n<p><strong>Advanced Topic: Inverse Logic and Arduino Pull-up</strong></p>\n\n<p>The Rotary Encoder isÂ essentiallyÂ 2 switches. This library sets both pins as INPUTS, followed by setting a digitalWrite to HIGH. This engages the arduino’s pull-up resistor for that pin. What the pull-up resistor does it allows a small trickle of positive voltage into the pin. Setting that pin to constantly read HIGH until you rotate the knob where the state would change to LOW. We normally think in HIGH being On and LOW being Off. With Inverse Logic HIGH is your Off state and LOW is your On state. In the case of the rotary encoder, when the pin makes contact with the white area, the encoder makes a connection to ground. Ground is now the path of leaseÂ resistance. So no electricity is flowing through the pull-up resistor, thus the pin goes Low. The orange represents the path of least resistance and the flow of electricity.</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6836949291/\" title=\"pullupresistor by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7008/6836949291_14212bd4e4.jpg\" alt=\"pullupresistor\" title=\"\" /></a></p>\n\n<p><em>Note: This library can use the <a href=\"http://arduino.cc/playground/Code/Interrupts\">arduinoÂ interrupt</a> pins for better performance.</em></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1328640717000,"created_by":1,"updated_at":1396135569000,"updated_by":1,"published_at":1328640717000,"published_by":1},{"id":314,"uuid":"0844b9df-86c0-4f04-98e7-e3941a012517","title":"Intro to TSL2561","slug":"intro-to-tsl2561-3","markdown":"\nThe TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using [Lady Ada’s guide](http://www.ladyada.net/learn/sensors/tsl2561.html) and [library](https://github.com/adafruit/TSL2561-Arduino-Library). In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room\n\n[![tsl2561output](http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg)](http://www.flickr.com/photos/zevenrodriguez/6810906612/ \"tsl2561output by zevenwolf, on Flickr\")\n\n \n\n<span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span>\n\n[cc lang=\"c\"]\n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n //uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n //Serial.println(x, DEC);\n\n// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum  \n // That way you can do whatever math and comparions you want!  \n uint32_t lum = tsl.getFullLuminosity();  \n uint16_t ir, full;  \n ir = lum >> 16;  \n full = lum & 0xFFFF;  \n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”);  \n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”);  \n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”);  \n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir));  \n Serial.print(“n”);  \n delay(100);  \n }\n\n \n\n \n\nIn thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read [http://www.arduino.cc/playground/Code/BitMath](http://www.arduino.cc/playground/Code/BitMath \"BitMath\")\n\nir = lum >> 16;\n\nfull = lum & 0xFFFF;\n\n \n\nFor a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561_VISIBLE,Â TSL2561_FULLSPECTRUM,Â TSL2561_INFRARED into it.\n\n \n\n#include <Wire.h>  \n #include “TSL2561.h”\n\n// Example for demonstrating the TSL2561 library – public domain!\n\n// connect SCL to analog 5  \n // connect SDA to analog 4  \n // connect VDD to 3.3V DC  \n // connect GROUND to common ground  \n // ADDR can be connected to ground, or vdd or left floating to change the i2c address\n\n// The address will be different depending on whether you let  \n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases  \n // use TSL2561_ADDR_LOW (0×29) or TSL2561_ADDR_HIGH (0×49) respectively  \n TSL2561 tsl(TSL2561_ADDR_FLOAT);\n\nvoid setup(void) {  \n Serial.begin(9600);\n\nif (tsl.begin()) {  \n Serial.println(“Found sensor”);  \n } else {  \n Serial.println(“No sensor?”);  \n while (1);  \n }\n\n// You can change the gain on the fly, to adapt to brighter/dimmer light situations  \n //tsl.setGain(TSL2561_GAIN_0X); // set no gain (for bright situtations)  \n tsl.setGain(TSL2561_GAIN_16X); // set 16x gain (for dim situations)\n\n// Changing the integration time gives you a longer time over which to sense light  \n // longer timelines are slower, but are good in very low light situtations!  \n tsl.setTiming(TSL2561_INTEGRATIONTIME_13MS); // shortest integration time (bright light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_101MS); // medium integration time (medium light)  \n //tsl.setTiming(TSL2561_INTEGRATIONTIME_402MS); // longest integration time (dim light)\n\n// Now we’re ready to get readings!  \n }\n\nvoid loop(void) {  \n // Simple data read example. Just read the infrared, fullspecrtrum diode  \n // or ‘visible’ (difference between the two) channels.  \n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read  \n // uint16_t x = tsl.getLuminosity(TSL2561_VISIBLE);  \n uint16_t x = tsl.getLuminosity(TSL2561_FULLSPECTRUM);  \n //uint16_t x = tsl.getLuminosity(TSL2561_INFRARED);  \n Serial.println(x, DEC);  \n delay(100);  \n }  \n [/cc]\n\n\n","html":"<p>The TSL2561 is a full spectrum light sensor. I uses 3 light sensors to achieve this. I am using <a href=\"http://www.ladyada.net/learn/sensors/tsl2561.html\">Lady Ada’s guide</a> and <a href=\"https://github.com/adafruit/TSL2561-Arduino-Library\">library</a>. In Lady Ada’s example, she uses a regular arduino, where the I2C Data and CLk are Â pins are pins 4 and 5. I was using a mega which its Data and CLK are pins 20 and 21. In Arduino, the I2C pins are preset.Â In the example, ladyada prints out the IR, full spectrum, visible, and lux. The sensor maxes out at around 4935. These readings were taken indoors in a room</p>\n\n<p><a href=\"http://www.flickr.com/photos/zevenrodriguez/6810906612/\" title=\"tsl2561output by zevenwolf, on Flickr\"><img src=\"http://farm8.staticflickr.com/7193/6810906612_941847237c.jpg\" alt=\"tsl2561output\" title=\"\" /></a></p>\n\n<p><span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 14px; line-height: 1.5em;\">This is the code used to generate the readings above.</span></p>\n\n<p>[cc lang=\"c\"]</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n //Serial.println(x, DEC);</p>\n\n<p>// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum <br />\n // That way you can do whatever math and comparions you want! <br />\n uint32<em>t lum = tsl.getFullLuminosity(); <br />\n uint16</em>t ir, full; <br />\n ir = lum >> 16; <br />\n full = lum &amp; 0xFFFF; <br />\n Serial.print(“IR: “); Serial.print(ir); Serial.print(“tt”); <br />\n Serial.print(“Full: “); Serial.print(full); Serial.print(“t”); <br />\n Serial.print(“Visible: “); Serial.print(full – ir); Serial.print(“t”); <br />\n Serial.print(“Lux: “); Serial.println(tsl.calculateLux(full, ir)); <br />\n Serial.print(“n”); <br />\n delay(100); <br />\n }</p>\n\n<p>In thisÂ snippetÂ of code, she uses the concept of Bit Math. For more information on this portion of the code read <a href=\"http://www.arduino.cc/playground/Code/BitMath\" title=\"BitMath\">http://www.arduino.cc/playground/Code/BitMath</a></p>\n\n<p>ir = lum >> 16;</p>\n\n<p>full = lum &amp; 0xFFFF;</p>\n\n<p>For a simpler example where you just want access to a certain part of the sensor you would use the getLuminosity() function and passÂ TSL2561<em>VISIBLE,Â TSL2561</em>FULLSPECTRUM,Â TSL2561_INFRARED into it.</p>\n\n<h1 id=\"includewireh\">include <Wire.h></h1>\n\n<p>#include “TSL2561.h”</p>\n\n<p>// Example for demonstrating the TSL2561 library – public domain!</p>\n\n<p>// connect SCL to analog 5 <br />\n // connect SDA to analog 4 <br />\n // connect VDD to 3.3V DC <br />\n // connect GROUND to common ground <br />\n // ADDR can be connected to ground, or vdd or left floating to change the i2c address</p>\n\n<p>// The address will be different depending on whether you let <br />\n // the ADDR pin float (addr 0×39), or tie it to ground or vcc. In those cases <br />\n // use TSL2561<em>ADDR</em>LOW (0×29) or TSL2561<em>ADDR</em>HIGH (0×49) respectively <br />\n TSL2561 tsl(TSL2561<em>ADDR</em>FLOAT);</p>\n\n<p>void setup(void) { <br />\n Serial.begin(9600);</p>\n\n<p>if (tsl.begin()) { <br />\n Serial.println(“Found sensor”); <br />\n } else { <br />\n Serial.println(“No sensor?”); <br />\n while (1); <br />\n }</p>\n\n<p>// You can change the gain on the fly, to adapt to brighter/dimmer light situations <br />\n //tsl.setGain(TSL2561<em>GAIN</em>0X); // set no gain (for bright situtations) <br />\n tsl.setGain(TSL2561<em>GAIN</em>16X); // set 16x gain (for dim situations)</p>\n\n<p>// Changing the integration time gives you a longer time over which to sense light <br />\n // longer timelines are slower, but are good in very low light situtations! <br />\n tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>13MS); // shortest integration time (bright light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>101MS); // medium integration time (medium light) <br />\n //tsl.setTiming(TSL2561<em>INTEGRATIONTIME</em>402MS); // longest integration time (dim light)</p>\n\n<p>// Now we’re ready to get readings! <br />\n }</p>\n\n<p>void loop(void) { <br />\n // Simple data read example. Just read the infrared, fullspecrtrum diode <br />\n // or ‘visible’ (difference between the two) channels. <br />\n // This can take 13-402 milliseconds! Uncomment whichever of the following you want to read <br />\n // uint16<em>t x = tsl.getLuminosity(TSL2561</em>VISIBLE); <br />\n uint16<em>t x = tsl.getLuminosity(TSL2561</em>FULLSPECTRUM); <br />\n //uint16<em>t x = tsl.getLuminosity(TSL2561</em>INFRARED); <br />\n Serial.println(x, DEC); <br />\n delay(100); <br />\n } <br />\n [/cc]</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1330985412000,"created_by":1,"updated_at":1396137609000,"updated_by":1,"published_at":1330985412000,"published_by":1},{"id":315,"uuid":"3687453f-b273-4076-b7c6-0eccf136afc0","title":"Blog","slug":"blog-3","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1332297471000,"created_by":1,"updated_at":1332297471000,"updated_by":1,"published_at":1332297471000,"published_by":1},{"id":316,"uuid":"179a71cc-7238-4ad3-b951-262711a1d5df","title":"Arduino Motor Shield","slug":"arduino-motor-shield-3","markdown":"\nI have been working with the [Arduino Motor Shield](http://arduino.cc/en/Main/ArduinoMotorShieldR3). Here are some of the basic specs for theÂ shield:\n\n- Operating Voltage – 5v to 12v\n- Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor\n- Max Current – 2A per channel or 4A max (with external power supply)\n- Current Sensing – 1.65V/A\n- Free Running stop and brake function\n\n \n\n[![](http://oddgui.com/content/images/2012/04/motorshield.jpg \"motorshield\")](http://oddgui.com/content/images/2012/04/motorshield.jpg)\n\nThis Shield has 4 main functions:\n\n<table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\">**Function**</td><td align=\"center\">**pins per Ch. A**</td><td align=\"center\">**pins per Ch. B**</td></tr><tr><td align=\"left\">*Direction*</td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\">*PWM*</td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\">*Brake*</td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td>*Current Sensing*</td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.\n\nThe last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.\n\nIMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.\n\n \n\n[![](http://oddgui.com/content/images/2012/04/motorshieldback1.jpg \"motorshieldback\")](http://oddgui.com/content/images/2012/04/motorshieldback1.jpg)\n\n \n\n \n\n \n\n \n\n**DC Motor**\n\nThis shield can run 2 DC motors\n\nThis is an example of running 2 DC Motors with Current Sense.\n\n[Â https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino](https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino \"DC Motor example\")\n\n\n","html":"<p>I have been working with the <a href=\"http://arduino.cc/en/Main/ArduinoMotorShieldR3\">Arduino Motor Shield</a>. Here are some of the basic specs for theÂ shield:</p>\n\n<ul>\n<li>Operating Voltage – 5v to 12v</li>\n<li>Motor Controller – L298P, Drives 2 DC Motors or 1 Stepper motor</li>\n<li>Max Current – 2A per channel or 4A max (with external power supply)</li>\n<li>Current Sensing – 1.65V/A</li>\n<li><p>Free Running stop and brake function</p></li>\n</ul>\n\n<p><a href=\"http://oddgui.com/content/images/2012/04/motorshield.jpg\"><img src=\"http://oddgui.com/content/images/2012/04/motorshield.jpg\" alt=\"\" title=\"motorshield\" /></a></p>\n\n<p>This Shield has 4 main functions:</p>\n\n<p><table border=\"0\" width=\"50%\"><tbody><tr><td align=\"left\"><strong>Function</strong></td><td align=\"center\"><strong>pins per Ch. A</strong></td><td align=\"center\"><strong>pins per Ch. B</strong></td></tr><tr><td align=\"left\"><em>Direction</em></td><td align=\"center\">D12</td><td align=\"center\">D13</td></tr><tr><td align=\"left\"><em>PWM</em></td><td align=\"center\">D3</td><td align=\"center\">D11</td></tr><tr><td align=\"left\"><em>Brake</em></td><td align=\"center\">D9</td><td align=\"center\">D8</td></tr><tr><td><em>Current Sensing</em></td><td align=\"center\">A0</td><td align=\"center\">A1</td></tr></tbody></table>The important thing to understand about this shield is the interface. Each channel has independent Direction, PWM, Brake, and Current Sensing. Setting the Direction Digital HIGH or LOW, moves the motor Clockwise or Counterclockwise. The PWM Pin can be set to DigitalÂ HIGH or LOW, which turns the motor On or Off, or can we sent and analogWrite to control the speed. When Brake is set to HIGH it forces the motor to Stop.</p>\n\n<p>The last feature on the board is the Current Sensing, which you can access by doing a analogRead on the analog 0 and 1 pins. One important thing on the shield is that there are 2 soldered pins on the back that enable this feature.</p>\n\n<p>IMPORTANT: When the current sense pins are soldered they cannot be used as general analog pins. You will get bad readings if you try to use A0 and A1.</p>\n\n<p><a href=\"http://oddgui.com/content/images/2012/04/motorshieldback1.jpg\"><img src=\"http://oddgui.com/content/images/2012/04/motorshieldback1.jpg\" alt=\"\" title=\"motorshieldback\" /></a></p>\n\n<p><strong>DC Motor</strong></p>\n\n<p>This shield can run 2 DC motors</p>\n\n<p>This is an example of running 2 DC Motors with Current Sense.</p>\n\n<p><a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\" title=\"DC Motor example\">Â <a href=\"https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino\">https://github.com/zevenwolf/Motor-Shield/blob/master/DCMotor/DCMotor.ino</a></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1334005095000,"created_by":1,"updated_at":1396137563000,"updated_by":1,"published_at":1334005095000,"published_by":1},{"id":317,"uuid":"5e1b5270-c80c-4f76-8699-8a5eba6bda7f","title":"Gestios.com","slug":"gestios-com-3","markdown":"\nYou can visit my finished thesis at [gestIOs.com](http://gestios.com \"gestIOs.com\")\n\n\n","html":"<p>You can visit my finished thesis at <a href=\"http://gestios.com\" title=\"gestIOs.com\">gestIOs.com</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1336694397000,"created_by":1,"updated_at":1396135296000,"updated_by":1,"published_at":null,"published_by":1}],"users":[{"id":1,"uuid":"9f0976a4-cb3b-40ea-9642-26543f1cdd0b","name":"Zevensuy Rodriguez","slug":"zevensuy","password":"$2a$10$3RhazVHLWkC.jhbqzqGOEeXbxh7evuN/Uk11iVzBT9Qzl5g33bO4i","email":"zevenwolf@gmail.com","image":null,"cover":null,"bio":null,"website":null,"location":null,"accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"tour":null,"last_login":1463960758715,"created_at":1463960690302,"created_by":1,"updated_at":1463960758715,"updated_by":1}],"roles":[{"id":1,"uuid":"e900b679-1f88-4752-8f96-550885ebb740","name":"Administrator","description":"Administrators","created_at":1463960688360,"created_by":1,"updated_at":1463960688360,"updated_by":1},{"id":2,"uuid":"e891f4a7-1739-48dc-9a5b-54b09dc14d34","name":"Editor","description":"Editors","created_at":1463960688368,"created_by":1,"updated_at":1463960688368,"updated_by":1},{"id":3,"uuid":"f2646c12-f98b-4c9f-a241-cc0719e63c97","name":"Author","description":"Authors","created_at":1463960688377,"created_by":1,"updated_at":1463960688377,"updated_by":1},{"id":4,"uuid":"ad0a34a2-e6c3-4e57-b68c-63ef4abdb790","name":"Owner","description":"Blog Owner","created_at":1463960688388,"created_by":1,"updated_at":1463960688388,"updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":1,"uuid":"395ab865-46f1-4a1f-884c-f0a1e62b5efa","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":1463960688402,"created_by":1,"updated_at":1463960688402,"updated_by":1},{"id":2,"uuid":"200995cb-5beb-4d0d-bb5b-80072ca0d786","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":1463960688414,"created_by":1,"updated_at":1463960688414,"updated_by":1},{"id":3,"uuid":"969a9892-b74d-4795-90f6-b8e67b3d1545","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":1463960688424,"created_by":1,"updated_at":1463960688424,"updated_by":1},{"id":4,"uuid":"a21f5d72-ec4c-4842-a60c-de57c09a509d","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":1463960688433,"created_by":1,"updated_at":1463960688433,"updated_by":1},{"id":5,"uuid":"79faa9c9-79e1-4131-86c1-473c8833eaa9","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":1463960688449,"created_by":1,"updated_at":1463960688449,"updated_by":1},{"id":6,"uuid":"5f51eccd-5448-4f23-ad7e-00ace390d12c","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":1463960688460,"created_by":1,"updated_at":1463960688460,"updated_by":1},{"id":7,"uuid":"c50a5441-655f-49bb-bafd-be71ad575916","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":1463960688469,"created_by":1,"updated_at":1463960688469,"updated_by":1},{"id":8,"uuid":"ae9198b9-b644-4299-8540-8c3422d42507","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":1463960688492,"created_by":1,"updated_at":1463960688492,"updated_by":1},{"id":9,"uuid":"78556583-c481-4933-875d-f276a9cebf43","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":1463960688504,"created_by":1,"updated_at":1463960688504,"updated_by":1},{"id":10,"uuid":"a0d6cb06-2a3a-4bf5-ac40-54edf2c18729","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1463960688518,"created_by":1,"updated_at":1463960688518,"updated_by":1},{"id":11,"uuid":"982ad236-848b-4cba-9e4b-5e62401b92bd","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":1463960688525,"created_by":1,"updated_at":1463960688525,"updated_by":1},{"id":12,"uuid":"f1305db3-a5d0-4981-b11f-08a9b135b4d1","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":1463960688534,"created_by":1,"updated_at":1463960688534,"updated_by":1},{"id":13,"uuid":"81f739ff-6ad5-4b21-886a-a99cdf7b37b0","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":1463960688542,"created_by":1,"updated_at":1463960688542,"updated_by":1},{"id":14,"uuid":"bc747901-7cd9-4fdd-b21f-aead8b0e4179","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":1463960688558,"created_by":1,"updated_at":1463960688558,"updated_by":1},{"id":15,"uuid":"ca2309aa-19c3-4f8c-809b-b3918b868bf7","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":1463960688566,"created_by":1,"updated_at":1463960688566,"updated_by":1},{"id":16,"uuid":"fae7ed4d-079b-4cc4-8128-11b0da2c1ed5","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":1463960688575,"created_by":1,"updated_at":1463960688575,"updated_by":1},{"id":17,"uuid":"eab41ce6-5452-4044-8f7c-52eaab0e9731","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":1463960688586,"created_by":1,"updated_at":1463960688586,"updated_by":1},{"id":18,"uuid":"073227f7-6538-44ea-bf9e-a8a69c737a3a","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":1463960688596,"created_by":1,"updated_at":1463960688596,"updated_by":1},{"id":19,"uuid":"5dfdc7e0-a655-4b17-a256-f69fb10044a7","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":1463960688603,"created_by":1,"updated_at":1463960688603,"updated_by":1},{"id":20,"uuid":"b5ef132b-865a-4be3-83cb-9770ca558991","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":1463960688611,"created_by":1,"updated_at":1463960688611,"updated_by":1},{"id":21,"uuid":"a06bded7-a5a3-4557-a9ed-70aa85c7ad04","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":1463960688618,"created_by":1,"updated_at":1463960688618,"updated_by":1},{"id":22,"uuid":"a6b56804-c9f9-4ced-ace4-7559678cfbed","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":1463960688631,"created_by":1,"updated_at":1463960688631,"updated_by":1},{"id":23,"uuid":"36e36d2c-4a50-4ed2-a37c-00504b4bb59d","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":1463960688649,"created_by":1,"updated_at":1463960688649,"updated_by":1},{"id":24,"uuid":"8fd93cb1-8593-4919-a7f4-4ec305f5ae38","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":1463960688670,"created_by":1,"updated_at":1463960688670,"updated_by":1},{"id":25,"uuid":"42733da3-eced-49a1-8d8b-e8195c8985cc","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":1463960688683,"created_by":1,"updated_at":1463960688683,"updated_by":1},{"id":26,"uuid":"a70df1ea-4e8e-45f1-8c7f-1624f9c267d1","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":1463960688697,"created_by":1,"updated_at":1463960688697,"updated_by":1},{"id":27,"uuid":"17e30596-50b8-4744-a2f0-a514b6f0b9e3","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":1463960688712,"created_by":1,"updated_at":1463960688712,"updated_by":1},{"id":28,"uuid":"32db1640-f7f7-4e87-8c7b-e3e461569ecd","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":1463960688727,"created_by":1,"updated_at":1463960688727,"updated_by":1},{"id":29,"uuid":"52b1c1ed-9057-4741-974e-83d25a5a0577","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":1463960688743,"created_by":1,"updated_at":1463960688743,"updated_by":1},{"id":30,"uuid":"01ecb8a8-1ed3-41d0-9ef3-8ee0630eadb4","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":1463960688755,"created_by":1,"updated_at":1463960688755,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_apps":[],"settings":[{"id":1,"uuid":"af672428-ff23-48e3-bcc9-b34b941af266","key":"databaseVersion","value":"004","type":"core","created_at":1463960690380,"created_by":1,"updated_at":1463960690380,"updated_by":1},{"id":2,"uuid":"e733125a-abfd-4557-9ae4-4eb541a5c96e","key":"dbHash","value":"ee9b3706-97e8-494d-a0ac-23a9dc138108","type":"core","created_at":1463960690381,"created_by":1,"updated_at":1463960690750,"updated_by":1},{"id":3,"uuid":"99ef77c5-4c95-4cd3-97cf-a96517fc7ba6","key":"nextUpdateCheck","value":"1464047121","type":"core","created_at":1463960690381,"created_by":1,"updated_at":1463960721896,"updated_by":1},{"id":4,"uuid":"ab9a6e13-20d3-4b7f-9d6d-3330e836cfea","key":"displayUpdateNotification","value":"0.5.0","type":"core","created_at":1463960690381,"created_by":1,"updated_at":1463960721903,"updated_by":1},{"id":5,"uuid":"63afc1af-a1fc-47e4-801d-07aa7563c220","key":"title","value":"ODDGUI","type":"blog","created_at":1463960690381,"created_by":1,"updated_at":1463960758005,"updated_by":1},{"id":6,"uuid":"0d2ac68a-1c86-4e43-ab98-9fd027a93108","key":"description","value":"Thoughts, stories and ideas.","type":"blog","created_at":1463960690381,"created_by":1,"updated_at":1463960758010,"updated_by":1},{"id":7,"uuid":"19dea3e8-e29f-47df-9e71-f8e3f1062b7f","key":"logo","value":"","type":"blog","created_at":1463960690382,"created_by":1,"updated_at":1463960690382,"updated_by":1},{"id":8,"uuid":"4a7b01aa-c369-4f26-8d68-8eea687c3608","key":"cover","value":"","type":"blog","created_at":1463960690382,"created_by":1,"updated_at":1463960690382,"updated_by":1},{"id":9,"uuid":"f147896d-bc31-43b3-b63a-f4246da9217c","key":"defaultLang","value":"en_US","type":"blog","created_at":1463960690382,"created_by":1,"updated_at":1463960690382,"updated_by":1},{"id":10,"uuid":"ec5bf6b2-9f0f-4d9d-9891-a90c4581a0d2","key":"postsPerPage","value":"5","type":"blog","created_at":1463960690382,"created_by":1,"updated_at":1463960690382,"updated_by":1},{"id":11,"uuid":"1e91299e-600b-4851-8ffb-f0195ce6cc37","key":"forceI18n","value":"true","type":"blog","created_at":1463960690383,"created_by":1,"updated_at":1463960690383,"updated_by":1},{"id":12,"uuid":"09f94730-8b1b-4ebd-a3a7-8f06cd5594c6","key":"permalinks","value":"/:slug/","type":"blog","created_at":1463960690384,"created_by":1,"updated_at":1463960690384,"updated_by":1},{"id":13,"uuid":"7f5d9487-cbb9-4ed1-9dcf-68674ab30c65","key":"ghost_head","value":"","type":"blog","created_at":1463960690384,"created_by":1,"updated_at":1463960690384,"updated_by":1},{"id":14,"uuid":"141818d6-bae6-4750-832a-d201d1902a51","key":"ghost_foot","value":"","type":"blog","created_at":1463960690384,"created_by":1,"updated_at":1463960690384,"updated_by":1},{"id":15,"uuid":"d5e1d7dd-0042-4506-877c-2b75953bf9d9","key":"labs","value":"{}","type":"blog","created_at":1463960690384,"created_by":1,"updated_at":1463960690384,"updated_by":1},{"id":16,"uuid":"89f7183a-8e5f-4023-b176-ca551a4d183d","key":"navigation","value":"[{\"label\":\"Home\", \"url\":\"/\"}]","type":"blog","created_at":1463960690386,"created_by":1,"updated_at":1463960690386,"updated_by":1},{"id":17,"uuid":"2b49b53a-831f-4fd7-855c-0a7950a405c4","key":"activeApps","value":"[]","type":"app","created_at":1463960690386,"created_by":1,"updated_at":1463960690386,"updated_by":1},{"id":18,"uuid":"fb12529b-1193-498e-ac43-b4f7e41e2bd6","key":"installedApps","value":"[]","type":"app","created_at":1463960690387,"created_by":1,"updated_at":1463960690786,"updated_by":1},{"id":19,"uuid":"358b3205-1cd6-40c3-8443-60a75cbf0289","key":"isPrivate","value":"false","type":"private","created_at":1463960690387,"created_by":1,"updated_at":1463960690387,"updated_by":1},{"id":20,"uuid":"1d9f0a67-2f13-4c1e-a936-bb406b89b1e0","key":"password","value":"","type":"private","created_at":1463960690387,"created_by":1,"updated_at":1463960690387,"updated_by":1},{"id":21,"uuid":"a2c1daae-1716-4e02-b1d8-e6a4e1a4dcfa","key":"activeTheme","value":"casper","type":"theme","created_at":1463960690386,"created_by":1,"updated_at":1463960690386,"updated_by":1}],"tags":[],"posts_tags":[],"apps":[],"app_settings":[],"app_fields":[]}}